//
// File generated by core/utils/src/rootcint_tmp at Fri Nov  4 16:31:26 2011

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME mathdIfftwdIsrcdIG__FFTW
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__FFTW.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TFFTComplex_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TFFTComplex(void *p = 0);
   static void *newArray_TFFTComplex(Long_t size, void *p);
   static void delete_TFFTComplex(void *p);
   static void deleteArray_TFFTComplex(void *p);
   static void destruct_TFFTComplex(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TFFTComplex*)
   {
      ::TFFTComplex *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TFFTComplex >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TFFTComplex", ::TFFTComplex::Class_Version(), "include/TFFTComplex.h", 48,
                  typeid(::TFFTComplex), DefineBehavior(ptr, ptr),
                  &::TFFTComplex::Dictionary, isa_proxy, 4,
                  sizeof(::TFFTComplex) );
      instance.SetNew(&new_TFFTComplex);
      instance.SetNewArray(&newArray_TFFTComplex);
      instance.SetDelete(&delete_TFFTComplex);
      instance.SetDeleteArray(&deleteArray_TFFTComplex);
      instance.SetDestructor(&destruct_TFFTComplex);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TFFTComplex*)
   {
      return GenerateInitInstanceLocal((::TFFTComplex*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TFFTComplex*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TFFTComplexReal_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TFFTComplexReal(void *p = 0);
   static void *newArray_TFFTComplexReal(Long_t size, void *p);
   static void delete_TFFTComplexReal(void *p);
   static void deleteArray_TFFTComplexReal(void *p);
   static void destruct_TFFTComplexReal(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TFFTComplexReal*)
   {
      ::TFFTComplexReal *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TFFTComplexReal >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TFFTComplexReal", ::TFFTComplexReal::Class_Version(), "include/TFFTComplexReal.h", 50,
                  typeid(::TFFTComplexReal), DefineBehavior(ptr, ptr),
                  &::TFFTComplexReal::Dictionary, isa_proxy, 4,
                  sizeof(::TFFTComplexReal) );
      instance.SetNew(&new_TFFTComplexReal);
      instance.SetNewArray(&newArray_TFFTComplexReal);
      instance.SetDelete(&delete_TFFTComplexReal);
      instance.SetDeleteArray(&deleteArray_TFFTComplexReal);
      instance.SetDestructor(&destruct_TFFTComplexReal);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TFFTComplexReal*)
   {
      return GenerateInitInstanceLocal((::TFFTComplexReal*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TFFTComplexReal*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TFFTReal_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TFFTReal(void *p = 0);
   static void *newArray_TFFTReal(Long_t size, void *p);
   static void delete_TFFTReal(void *p);
   static void deleteArray_TFFTReal(void *p);
   static void destruct_TFFTReal(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TFFTReal*)
   {
      ::TFFTReal *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TFFTReal >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TFFTReal", ::TFFTReal::Class_Version(), "include/TFFTReal.h", 68,
                  typeid(::TFFTReal), DefineBehavior(ptr, ptr),
                  &::TFFTReal::Dictionary, isa_proxy, 4,
                  sizeof(::TFFTReal) );
      instance.SetNew(&new_TFFTReal);
      instance.SetNewArray(&newArray_TFFTReal);
      instance.SetDelete(&delete_TFFTReal);
      instance.SetDeleteArray(&deleteArray_TFFTReal);
      instance.SetDestructor(&destruct_TFFTReal);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TFFTReal*)
   {
      return GenerateInitInstanceLocal((::TFFTReal*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TFFTReal*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TFFTRealComplex_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TFFTRealComplex(void *p = 0);
   static void *newArray_TFFTRealComplex(Long_t size, void *p);
   static void delete_TFFTRealComplex(void *p);
   static void deleteArray_TFFTRealComplex(void *p);
   static void destruct_TFFTRealComplex(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TFFTRealComplex*)
   {
      ::TFFTRealComplex *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TFFTRealComplex >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TFFTRealComplex", ::TFFTRealComplex::Class_Version(), "include/TFFTRealComplex.h", 53,
                  typeid(::TFFTRealComplex), DefineBehavior(ptr, ptr),
                  &::TFFTRealComplex::Dictionary, isa_proxy, 4,
                  sizeof(::TFFTRealComplex) );
      instance.SetNew(&new_TFFTRealComplex);
      instance.SetNewArray(&newArray_TFFTRealComplex);
      instance.SetDelete(&delete_TFFTRealComplex);
      instance.SetDeleteArray(&deleteArray_TFFTRealComplex);
      instance.SetDestructor(&destruct_TFFTRealComplex);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TFFTRealComplex*)
   {
      return GenerateInitInstanceLocal((::TFFTRealComplex*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TFFTRealComplex*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TFFTComplex::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TFFTComplex::Class_Name()
{
   return "TFFTComplex";
}

//______________________________________________________________________________
const char *TFFTComplex::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TFFTComplex*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TFFTComplex::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TFFTComplex*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TFFTComplex::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TFFTComplex*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TFFTComplex::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TFFTComplex*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TFFTComplexReal::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TFFTComplexReal::Class_Name()
{
   return "TFFTComplexReal";
}

//______________________________________________________________________________
const char *TFFTComplexReal::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TFFTComplexReal*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TFFTComplexReal::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TFFTComplexReal*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TFFTComplexReal::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TFFTComplexReal*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TFFTComplexReal::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TFFTComplexReal*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TFFTReal::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TFFTReal::Class_Name()
{
   return "TFFTReal";
}

//______________________________________________________________________________
const char *TFFTReal::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TFFTReal*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TFFTReal::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TFFTReal*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TFFTReal::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TFFTReal*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TFFTReal::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TFFTReal*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TFFTRealComplex::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TFFTRealComplex::Class_Name()
{
   return "TFFTRealComplex";
}

//______________________________________________________________________________
const char *TFFTRealComplex::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TFFTRealComplex*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TFFTRealComplex::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TFFTRealComplex*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TFFTRealComplex::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TFFTRealComplex*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TFFTRealComplex::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TFFTRealComplex*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TFFTComplex::Streamer(TBuffer &R__b)
{
   // Stream an object of class TFFTComplex.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TFFTComplex::Class(),this);
   } else {
      R__b.WriteClassBuffer(TFFTComplex::Class(),this);
   }
}

//______________________________________________________________________________
void TFFTComplex::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TFFTComplex.
      TClass *R__cl = ::TFFTComplex::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIn", &fIn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fOut", &fOut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPlan", &fPlan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNdim", &fNdim);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTotalSize", &fTotalSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fN", &fN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSign", &fSign);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFlags", &fFlags);
      TVirtualFFT::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TFFTComplex(void *p) {
      return  p ? new(p) ::TFFTComplex : new ::TFFTComplex;
   }
   static void *newArray_TFFTComplex(Long_t nElements, void *p) {
      return p ? new(p) ::TFFTComplex[nElements] : new ::TFFTComplex[nElements];
   }
   // Wrapper around operator delete
   static void delete_TFFTComplex(void *p) {
      delete ((::TFFTComplex*)p);
   }
   static void deleteArray_TFFTComplex(void *p) {
      delete [] ((::TFFTComplex*)p);
   }
   static void destruct_TFFTComplex(void *p) {
      typedef ::TFFTComplex current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TFFTComplex

//______________________________________________________________________________
void TFFTComplexReal::Streamer(TBuffer &R__b)
{
   // Stream an object of class TFFTComplexReal.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TFFTComplexReal::Class(),this);
   } else {
      R__b.WriteClassBuffer(TFFTComplexReal::Class(),this);
   }
}

//______________________________________________________________________________
void TFFTComplexReal::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TFFTComplexReal.
      TClass *R__cl = ::TFFTComplexReal::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIn", &fIn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fOut", &fOut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPlan", &fPlan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNdim", &fNdim);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTotalSize", &fTotalSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fN", &fN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFlags", &fFlags);
      TVirtualFFT::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TFFTComplexReal(void *p) {
      return  p ? new(p) ::TFFTComplexReal : new ::TFFTComplexReal;
   }
   static void *newArray_TFFTComplexReal(Long_t nElements, void *p) {
      return p ? new(p) ::TFFTComplexReal[nElements] : new ::TFFTComplexReal[nElements];
   }
   // Wrapper around operator delete
   static void delete_TFFTComplexReal(void *p) {
      delete ((::TFFTComplexReal*)p);
   }
   static void deleteArray_TFFTComplexReal(void *p) {
      delete [] ((::TFFTComplexReal*)p);
   }
   static void destruct_TFFTComplexReal(void *p) {
      typedef ::TFFTComplexReal current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TFFTComplexReal

//______________________________________________________________________________
void TFFTRealComplex::Streamer(TBuffer &R__b)
{
   // Stream an object of class TFFTRealComplex.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TFFTRealComplex::Class(),this);
   } else {
      R__b.WriteClassBuffer(TFFTRealComplex::Class(),this);
   }
}

//______________________________________________________________________________
void TFFTRealComplex::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TFFTRealComplex.
      TClass *R__cl = ::TFFTRealComplex::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIn", &fIn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fOut", &fOut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPlan", &fPlan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNdim", &fNdim);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTotalSize", &fTotalSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fN", &fN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFlags", &fFlags);
      TVirtualFFT::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TFFTRealComplex(void *p) {
      return  p ? new(p) ::TFFTRealComplex : new ::TFFTRealComplex;
   }
   static void *newArray_TFFTRealComplex(Long_t nElements, void *p) {
      return p ? new(p) ::TFFTRealComplex[nElements] : new ::TFFTRealComplex[nElements];
   }
   // Wrapper around operator delete
   static void delete_TFFTRealComplex(void *p) {
      delete ((::TFFTRealComplex*)p);
   }
   static void deleteArray_TFFTRealComplex(void *p) {
      delete [] ((::TFFTRealComplex*)p);
   }
   static void destruct_TFFTRealComplex(void *p) {
      typedef ::TFFTRealComplex current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TFFTRealComplex

//______________________________________________________________________________
void TFFTReal::Streamer(TBuffer &R__b)
{
   // Stream an object of class TFFTReal.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TFFTReal::Class(),this);
   } else {
      R__b.WriteClassBuffer(TFFTReal::Class(),this);
   }
}

//______________________________________________________________________________
void TFFTReal::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TFFTReal.
      TClass *R__cl = ::TFFTReal::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIn", &fIn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fOut", &fOut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPlan", &fPlan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNdim", &fNdim);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTotalSize", &fTotalSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fN", &fN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fKind", &fKind);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFlags", &fFlags);
      TVirtualFFT::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TFFTReal(void *p) {
      return  p ? new(p) ::TFFTReal : new ::TFFTReal;
   }
   static void *newArray_TFFTReal(Long_t nElements, void *p) {
      return p ? new(p) ::TFFTReal[nElements] : new ::TFFTReal[nElements];
   }
   // Wrapper around operator delete
   static void delete_TFFTReal(void *p) {
      delete ((::TFFTReal*)p);
   }
   static void deleteArray_TFFTReal(void *p) {
      delete [] ((::TFFTReal*)p);
   }
   static void destruct_TFFTReal(void *p) {
      typedef ::TFFTReal current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TFFTReal

/********************************************************
* math/fftw/src/G__FFTW.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__FFTW();

extern "C" void G__set_cpp_environmentG__FFTW() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("TFFTComplex.h");
  G__add_compiledheader("TFFTComplexReal.h");
  G__add_compiledheader("TFFTReal.h");
  G__add_compiledheader("TFFTRealComplex.h");
  G__cpp_reset_tagtableG__FFTW();
}
#include <new>
extern "C" int G__cpp_dllrevG__FFTW() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TFFTComplex */
static int G__G__FFTW_112_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TFFTComplex* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TFFTComplex[n];
     } else {
       p = new((void*) gvp) TFFTComplex[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TFFTComplex;
     } else {
       p = new((void*) gvp) TFFTComplex;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FFTWLN_TFFTComplex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FFTW_112_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TFFTComplex* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TFFTComplex((Int_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TFFTComplex((Int_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FFTWLN_TFFTComplex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FFTW_112_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TFFTComplex* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TFFTComplex(
(Int_t) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TFFTComplex(
(Int_t) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TFFTComplex((Int_t) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TFFTComplex((Int_t) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FFTWLN_TFFTComplex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FFTW_112_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TFFTComplex*) G__getstructoffset())->GetSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FFTW_112_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TFFTComplex::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FFTW_112_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TFFTComplex::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FFTW_112_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TFFTComplex::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FFTW_112_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TFFTComplex::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FFTW_112_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFFTComplex*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FFTW_112_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TFFTComplex::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FFTW_112_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TFFTComplex::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FFTW_112_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TFFTComplex::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FFTW_112_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TFFTComplex::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__FFTW_112_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TFFTComplex* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TFFTComplex(*(TFFTComplex*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FFTWLN_TFFTComplex));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TFFTComplex G__TTFFTComplex;
static int G__G__FFTW_112_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TFFTComplex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TFFTComplex*) (soff+(sizeof(TFFTComplex)*i)))->~G__TTFFTComplex();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TFFTComplex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TFFTComplex*) (soff))->~G__TTFFTComplex();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__FFTW_112_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TFFTComplex* dest = (TFFTComplex*) G__getstructoffset();
   *dest = *(TFFTComplex*) libp->para[0].ref;
   const TFFTComplex& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TFFTComplexReal */
static int G__G__FFTW_113_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TFFTComplexReal* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TFFTComplexReal[n];
     } else {
       p = new((void*) gvp) TFFTComplexReal[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TFFTComplexReal;
     } else {
       p = new((void*) gvp) TFFTComplexReal;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FFTWLN_TFFTComplexReal));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FFTW_113_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TFFTComplexReal* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TFFTComplexReal((Int_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TFFTComplexReal((Int_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FFTWLN_TFFTComplexReal));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FFTW_113_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TFFTComplexReal* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TFFTComplexReal(
(Int_t) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) TFFTComplexReal(
(Int_t) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FFTWLN_TFFTComplexReal));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FFTW_113_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TFFTComplexReal*) G__getstructoffset())->GetSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FFTW_113_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TFFTComplexReal::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FFTW_113_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TFFTComplexReal::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FFTW_113_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TFFTComplexReal::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FFTW_113_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TFFTComplexReal::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FFTW_113_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFFTComplexReal*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FFTW_113_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TFFTComplexReal::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FFTW_113_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TFFTComplexReal::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FFTW_113_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TFFTComplexReal::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FFTW_113_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TFFTComplexReal::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__FFTW_113_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TFFTComplexReal* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TFFTComplexReal(*(TFFTComplexReal*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FFTWLN_TFFTComplexReal));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TFFTComplexReal G__TTFFTComplexReal;
static int G__G__FFTW_113_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TFFTComplexReal*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TFFTComplexReal*) (soff+(sizeof(TFFTComplexReal)*i)))->~G__TTFFTComplexReal();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TFFTComplexReal*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TFFTComplexReal*) (soff))->~G__TTFFTComplexReal();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__FFTW_113_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TFFTComplexReal* dest = (TFFTComplexReal*) G__getstructoffset();
   *dest = *(TFFTComplexReal*) libp->para[0].ref;
   const TFFTComplexReal& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TFFTReal */
static int G__G__FFTW_114_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TFFTReal* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TFFTReal[n];
     } else {
       p = new((void*) gvp) TFFTReal[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TFFTReal;
     } else {
       p = new((void*) gvp) TFFTReal;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FFTWLN_TFFTReal));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FFTW_114_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TFFTReal* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TFFTReal((Int_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TFFTReal((Int_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TFFTReal((Int_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TFFTReal((Int_t) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FFTWLN_TFFTReal));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FFTW_114_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TFFTReal* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TFFTReal(
(Int_t) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TFFTReal(
(Int_t) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TFFTReal((Int_t) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TFFTReal((Int_t) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FFTWLN_TFFTReal));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FFTW_114_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TFFTReal*) G__getstructoffset())->GetSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FFTW_114_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TFFTReal::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FFTW_114_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TFFTReal::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FFTW_114_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TFFTReal::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FFTW_114_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TFFTReal::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FFTW_114_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFFTReal*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FFTW_114_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TFFTReal::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FFTW_114_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TFFTReal::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FFTW_114_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TFFTReal::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FFTW_114_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TFFTReal::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__FFTW_114_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TFFTReal* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TFFTReal(*(TFFTReal*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FFTWLN_TFFTReal));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TFFTReal G__TTFFTReal;
static int G__G__FFTW_114_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TFFTReal*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TFFTReal*) (soff+(sizeof(TFFTReal)*i)))->~G__TTFFTReal();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TFFTReal*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TFFTReal*) (soff))->~G__TTFFTReal();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__FFTW_114_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TFFTReal* dest = (TFFTReal*) G__getstructoffset();
   *dest = *(TFFTReal*) libp->para[0].ref;
   const TFFTReal& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TFFTRealComplex */
static int G__G__FFTW_115_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TFFTRealComplex* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TFFTRealComplex[n];
     } else {
       p = new((void*) gvp) TFFTRealComplex[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TFFTRealComplex;
     } else {
       p = new((void*) gvp) TFFTRealComplex;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FFTWLN_TFFTRealComplex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FFTW_115_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TFFTRealComplex* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TFFTRealComplex((Int_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TFFTRealComplex((Int_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FFTWLN_TFFTRealComplex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FFTW_115_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TFFTRealComplex* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TFFTRealComplex(
(Int_t) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) TFFTRealComplex(
(Int_t) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FFTWLN_TFFTRealComplex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FFTW_115_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TFFTRealComplex*) G__getstructoffset())->GetSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FFTW_115_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TFFTRealComplex::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FFTW_115_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TFFTRealComplex::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FFTW_115_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TFFTRealComplex::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FFTW_115_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TFFTRealComplex::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FFTW_115_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFFTRealComplex*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FFTW_115_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TFFTRealComplex::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FFTW_115_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TFFTRealComplex::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FFTW_115_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TFFTRealComplex::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FFTW_115_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TFFTRealComplex::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__FFTW_115_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TFFTRealComplex* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TFFTRealComplex(*(TFFTRealComplex*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FFTWLN_TFFTRealComplex));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TFFTRealComplex G__TTFFTRealComplex;
static int G__G__FFTW_115_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TFFTRealComplex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TFFTRealComplex*) (soff+(sizeof(TFFTRealComplex)*i)))->~G__TTFFTRealComplex();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TFFTRealComplex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TFFTRealComplex*) (soff))->~G__TTFFTRealComplex();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__FFTW_115_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TFFTRealComplex* dest = (TFFTRealComplex*) G__getstructoffset();
   *dest = *(TFFTRealComplex*) libp->para[0].ref;
   const TFFTRealComplex& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TFFTComplex */

/* TFFTComplexReal */

/* TFFTReal */

/* TFFTRealComplex */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__FFTW {
 public:
  G__Sizep2memfuncG__FFTW(): p(&G__Sizep2memfuncG__FFTW::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__FFTW::*p)();
};

size_t G__get_sizep2memfuncG__FFTW()
{
  G__Sizep2memfuncG__FFTW a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__FFTW() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__FFTWLN_TFFTComplex))) {
     TFFTComplex *G__Lderived;
     G__Lderived=(TFFTComplex*)0x1000;
     {
       TVirtualFFT *G__Lpbase=(TVirtualFFT*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FFTWLN_TFFTComplex),G__get_linked_tagnum(&G__G__FFTWLN_TVirtualFFT),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FFTWLN_TFFTComplex),G__get_linked_tagnum(&G__G__FFTWLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__FFTWLN_TFFTComplexReal))) {
     TFFTComplexReal *G__Lderived;
     G__Lderived=(TFFTComplexReal*)0x1000;
     {
       TVirtualFFT *G__Lpbase=(TVirtualFFT*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FFTWLN_TFFTComplexReal),G__get_linked_tagnum(&G__G__FFTWLN_TVirtualFFT),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FFTWLN_TFFTComplexReal),G__get_linked_tagnum(&G__G__FFTWLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__FFTWLN_TFFTReal))) {
     TFFTReal *G__Lderived;
     G__Lderived=(TFFTReal*)0x1000;
     {
       TVirtualFFT *G__Lpbase=(TVirtualFFT*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FFTWLN_TFFTReal),G__get_linked_tagnum(&G__G__FFTWLN_TVirtualFFT),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FFTWLN_TFFTReal),G__get_linked_tagnum(&G__G__FFTWLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__FFTWLN_TFFTRealComplex))) {
     TFFTRealComplex *G__Lderived;
     G__Lderived=(TFFTRealComplex*)0x1000;
     {
       TVirtualFFT *G__Lpbase=(TVirtualFFT*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FFTWLN_TFFTRealComplex),G__get_linked_tagnum(&G__G__FFTWLN_TVirtualFFT),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FFTWLN_TFFTRealComplex),G__get_linked_tagnum(&G__G__FFTWLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__FFTW() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__FFTWLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__FFTWLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__FFTWLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__FFTWLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__FFTWLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__G__FFTWLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__FFTWLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__FFTWLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__FFTWLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__FFTWLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TFFTComplex */
static void G__setup_memvarTFFTComplex(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__FFTWLN_TFFTComplex));
   { TFFTComplex *p; p=(TFFTComplex*)0x1000; if (p) { }
   G__memvar_setup((void*)0,89,0,0,-1,-1,-1,2,"fIn=",0,"input array");
   G__memvar_setup((void*)0,89,0,0,-1,-1,-1,2,"fOut=",0,"output array");
   G__memvar_setup((void*)0,89,0,0,-1,-1,-1,2,"fPlan=",0,"fftw plan (the plan how to compute the transform)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNdim=",0,"number of dimensions");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTotalSize=",0,"total size of the transform");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fN=",0,"transform sizes in each dimension");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fSign=",0,"sign of the exponent of the transform (-1 is FFTW_FORWARD and +1 FFTW_BACKWARD)");
   G__memvar_setup((void*)0,67,0,0,-1,G__defined_typename("Option_t"),-1,2,"fFlags=",0,"transform flags");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__FFTWLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TFFTComplexReal */
static void G__setup_memvarTFFTComplexReal(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__FFTWLN_TFFTComplexReal));
   { TFFTComplexReal *p; p=(TFFTComplexReal*)0x1000; if (p) { }
   G__memvar_setup((void*)0,89,0,0,-1,-1,-1,2,"fIn=",0,"input array");
   G__memvar_setup((void*)0,89,0,0,-1,-1,-1,2,"fOut=",0,"output array");
   G__memvar_setup((void*)0,89,0,0,-1,-1,-1,2,"fPlan=",0,"fftw plan (the plan how to compute the transform)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNdim=",0,"number of dimensions");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTotalSize=",0,"total size of the transform");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fN=",0,"transform sizes in each dimension");
   G__memvar_setup((void*)0,67,0,0,-1,G__defined_typename("Option_t"),-1,2,"fFlags=",0,"transform flags");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__FFTWLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TFFTReal */
static void G__setup_memvarTFFTReal(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__FFTWLN_TFFTReal));
   { TFFTReal *p; p=(TFFTReal*)0x1000; if (p) { }
   G__memvar_setup((void*)0,89,0,0,-1,-1,-1,2,"fIn=",0,"input array");
   G__memvar_setup((void*)0,89,0,0,-1,-1,-1,2,"fOut=",0,"output array");
   G__memvar_setup((void*)0,89,0,0,-1,-1,-1,2,"fPlan=",0,"fftw plan (the plan how to compute the transform)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNdim=",0,"number of dimensions");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTotalSize=",0,"total size of the transform");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fN=",0,"transform sizes in each dimension");
   G__memvar_setup((void*)0,89,0,0,-1,-1,-1,2,"fKind=",0,"transform kinds in each dimension");
   G__memvar_setup((void*)0,67,0,0,-1,G__defined_typename("Option_t"),-1,2,"fFlags=",0,"transform flags");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__FFTWLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TFFTRealComplex */
static void G__setup_memvarTFFTRealComplex(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__FFTWLN_TFFTRealComplex));
   { TFFTRealComplex *p; p=(TFFTRealComplex*)0x1000; if (p) { }
   G__memvar_setup((void*)0,89,0,0,-1,-1,-1,2,"fIn=",0,"input array");
   G__memvar_setup((void*)0,89,0,0,-1,-1,-1,2,"fOut=",0,"output array");
   G__memvar_setup((void*)0,89,0,0,-1,-1,-1,2,"fPlan=",0,"fftw plan (the plan how to compute the transform)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNdim=",0,"number of dimensions");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTotalSize=",0,"total size of the transform");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fN=",0,"transform sizes in each dimension");
   G__memvar_setup((void*)0,67,0,0,-1,G__defined_typename("Option_t"),-1,2,"fFlags=",0,"transform flags");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__FFTWLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__FFTW() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTFFTComplex(void) {
   /* TFFTComplex */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__FFTWLN_TFFTComplex));
   G__memfunc_setup("MapFlag",664,(G__InterfaceMethod) NULL, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 2, 0, "C - 'Option_t' 10 - flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TFFTComplex",1036,G__G__FFTW_112_0_2, 105, G__get_linked_tagnum(&G__G__FFTWLN_TFFTComplex), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TFFTComplex",1036,G__G__FFTW_112_0_3, 105, G__get_linked_tagnum(&G__G__FFTWLN_TFFTComplex), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - n g - 'Bool_t' 0 - inPlace", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TFFTComplex",1036,G__G__FFTW_112_0_4, 105, G__get_linked_tagnum(&G__G__FFTWLN_TFFTComplex), -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - ndim I - 'Int_t' 0 - n "
"g - 'Bool_t' 0 'kFALSE' inPlace", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"C - 'Option_t' 10 - flags i - 'Int_t' 0 - sign "
"I - 'Int_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetN",366,(G__InterfaceMethod) NULL,73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNdim",680,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSize",699,G__G__FFTW_112_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetType",706,(G__InterfaceMethod) NULL,67, -1, G__defined_typename("Option_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSign",689,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTransformFlag",1622,(G__InterfaceMethod) NULL,67, -1, G__defined_typename("Option_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsInplace",888,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPoints",925,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 8, 
"D - 'Double_t' 0 - data g - 'Bool_t' 0 'kFALSE' fromInput", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPointReal",1198,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - - g - 'Bool_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPointReal",1198,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"I - 'Int_t' 10 - - g - 'Bool_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPointComplex",1538,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 8, 
"i - 'Int_t' 0 - ipoint d - 'Double_t' 1 - re "
"d - 'Double_t' 1 - im g - 'Bool_t' 0 'kFALSE' fromInput", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPointComplex",1538,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 8, 
"I - 'Int_t' 10 - ipoint d - 'Double_t' 1 - re "
"d - 'Double_t' 1 - im g - 'Bool_t' 0 'kFALSE' fromInput", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPointsReal",1313,(G__InterfaceMethod) NULL,68, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "g - 'Bool_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPointsComplex",1653,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 8, 
"D - 'Double_t' 0 - re D - 'Double_t' 0 - im "
"g - 'Bool_t' 0 'kFALSE' fromInput", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPointsComplex",1653,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 8, 
"D - 'Double_t' 0 - data g - 'Bool_t' 0 'kFALSE' fromInput", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPoint",822,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - ipoint d - 'Double_t' 0 - re "
"d - 'Double_t' 0 '0' im", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPoint",822,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"I - 'Int_t' 10 - ipoint d - 'Double_t' 0 - re "
"d - 'Double_t' 0 '0' im", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPoints",937,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "D - 'Double_t' 10 - data", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPointComplex",1550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - ipoint u 'TComplex' - 1 - c", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPointsComplex",1665,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"D - 'Double_t' 10 - re D - 'Double_t' 10 - im", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Transform",956,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__FFTW_112_0_27, 85, G__get_linked_tagnum(&G__G__FFTWLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TFFTComplex::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__FFTW_112_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TFFTComplex::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__FFTW_112_0_29, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TFFTComplex::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__FFTW_112_0_30, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TFFTComplex::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__FFTWLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__FFTW_112_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__FFTW_112_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TFFTComplex::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__FFTW_112_0_36, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TFFTComplex::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__FFTW_112_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TFFTComplex::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__FFTW_112_0_38, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TFFTComplex::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TFFTComplex", 1036, G__G__FFTW_112_0_39, (int) ('i'), G__get_linked_tagnum(&G__G__FFTWLN_TFFTComplex), -1, 0, 1, 1, 1, 0, "u 'TFFTComplex' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TFFTComplex", 1162, G__G__FFTW_112_0_40, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__FFTW_112_0_41, (int) ('u'), G__get_linked_tagnum(&G__G__FFTWLN_TFFTComplex), -1, 1, 1, 1, 1, 0, "u 'TFFTComplex' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTFFTComplexReal(void) {
   /* TFFTComplexReal */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__FFTWLN_TFFTComplexReal));
   G__memfunc_setup("MapFlag",664,(G__InterfaceMethod) NULL, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 2, 0, "C - 'Option_t' 10 - flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TFFTComplexReal",1424,G__G__FFTW_113_0_2, 105, G__get_linked_tagnum(&G__G__FFTWLN_TFFTComplexReal), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TFFTComplexReal",1424,G__G__FFTW_113_0_3, 105, G__get_linked_tagnum(&G__G__FFTWLN_TFFTComplexReal), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - n g - 'Bool_t' 0 - inPlace", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TFFTComplexReal",1424,G__G__FFTW_113_0_4, 105, G__get_linked_tagnum(&G__G__FFTWLN_TFFTComplexReal), -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - ndim I - 'Int_t' 0 - n "
"g - 'Bool_t' 0 - inPlace", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"C - 'Option_t' 10 - flags i - 'Int_t' 0 - - "
"I - 'Int_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSize",699,G__G__FFTW_113_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetN",366,(G__InterfaceMethod) NULL,73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNdim",680,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetType",706,(G__InterfaceMethod) NULL,67, -1, G__defined_typename("Option_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSign",689,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTransformFlag",1622,(G__InterfaceMethod) NULL,67, -1, G__defined_typename("Option_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsInplace",888,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPoints",925,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 8, 
"D - 'Double_t' 0 - data g - 'Bool_t' 0 'kFALSE' fromInput", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPointReal",1198,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - ipoint g - 'Bool_t' 0 'kFALSE' fromInput", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPointReal",1198,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"I - 'Int_t' 10 - ipoint g - 'Bool_t' 0 'kFALSE' fromInput", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPointComplex",1538,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 8, 
"i - 'Int_t' 0 - ipoint d - 'Double_t' 1 - re "
"d - 'Double_t' 1 - im g - 'Bool_t' 0 'kFALSE' fromInput", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPointComplex",1538,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 8, 
"I - 'Int_t' 10 - ipoint d - 'Double_t' 1 - re "
"d - 'Double_t' 1 - im g - 'Bool_t' 0 'kFALSE' fromInput", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPointsReal",1313,(G__InterfaceMethod) NULL,68, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "g - 'Bool_t' 0 'kFALSE' fromInput", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPointsComplex",1653,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 8, 
"D - 'Double_t' 0 - re D - 'Double_t' 0 - im "
"g - 'Bool_t' 0 'kFALSE' fromInput", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPointsComplex",1653,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 8, 
"D - 'Double_t' 0 - data g - 'Bool_t' 0 'kFALSE' fromInput", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPoint",822,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - ipoint d - 'Double_t' 0 - re "
"d - 'Double_t' 0 '0' im", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPoint",822,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"I - 'Int_t' 10 - ipoint d - 'Double_t' 0 - re "
"d - 'Double_t' 0 '0' im", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPoints",937,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "D - 'Double_t' 10 - data", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPointComplex",1550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - ipoint u 'TComplex' - 1 - c", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPointsComplex",1665,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"D - 'Double_t' 10 - re D - 'Double_t' 10 - im", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Transform",956,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__FFTW_113_0_27, 85, G__get_linked_tagnum(&G__G__FFTWLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TFFTComplexReal::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__FFTW_113_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TFFTComplexReal::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__FFTW_113_0_29, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TFFTComplexReal::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__FFTW_113_0_30, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TFFTComplexReal::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__FFTWLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__FFTW_113_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__FFTW_113_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TFFTComplexReal::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__FFTW_113_0_36, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TFFTComplexReal::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__FFTW_113_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TFFTComplexReal::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__FFTW_113_0_38, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TFFTComplexReal::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TFFTComplexReal", 1424, G__G__FFTW_113_0_39, (int) ('i'), G__get_linked_tagnum(&G__G__FFTWLN_TFFTComplexReal), -1, 0, 1, 1, 1, 0, "u 'TFFTComplexReal' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TFFTComplexReal", 1550, G__G__FFTW_113_0_40, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__FFTW_113_0_41, (int) ('u'), G__get_linked_tagnum(&G__G__FFTWLN_TFFTComplexReal), -1, 1, 1, 1, 1, 0, "u 'TFFTComplexReal' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTFFTReal(void) {
   /* TFFTReal */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__FFTWLN_TFFTReal));
   G__memfunc_setup("MapOptions",1034,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "I - 'Int_t' 10 - kind", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MapFlag",664,(G__InterfaceMethod) NULL, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 2, 0, "C - 'Option_t' 10 - flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TFFTReal",696,G__G__FFTW_114_0_3, 105, G__get_linked_tagnum(&G__G__FFTWLN_TFFTReal), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TFFTReal",696,G__G__FFTW_114_0_4, 105, G__get_linked_tagnum(&G__G__FFTWLN_TFFTReal), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - n g - 'Bool_t' 0 'kFALSE' inPlace", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TFFTReal",696,G__G__FFTW_114_0_5, 105, G__get_linked_tagnum(&G__G__FFTWLN_TFFTReal), -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - ndim I - 'Int_t' 0 - n "
"g - 'Bool_t' 0 'kFALSE' inPlace", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"C - 'Option_t' 10 - flags i - 'Int_t' 0 - sign "
"I - 'Int_t' 10 - kind", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSize",699,G__G__FFTW_114_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetN",366,(G__InterfaceMethod) NULL,73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNdim",680,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetType",706,(G__InterfaceMethod) NULL,67, -1, G__defined_typename("Option_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSign",689,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTransformFlag",1622,(G__InterfaceMethod) NULL,67, -1, G__defined_typename("Option_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsInplace",888,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPoints",925,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 8, 
"D - 'Double_t' 0 - data g - 'Bool_t' 0 'kFALSE' fromInput", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPointReal",1198,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - ipoint g - 'Bool_t' 0 'kFALSE' fromInput", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPointReal",1198,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"I - 'Int_t' 10 - ipoint g - 'Bool_t' 0 'kFALSE' fromInput", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPointComplex",1538,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 8, 
"I - 'Int_t' 10 - ipoint d - 'Double_t' 1 - re "
"d - 'Double_t' 1 - im g - 'Bool_t' 0 'kFALSE' fromInput", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPointComplex",1538,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 8, 
"i - 'Int_t' 0 - ipoint d - 'Double_t' 1 - re "
"d - 'Double_t' 1 - im g - 'Bool_t' 0 'kFALSE' fromInput", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPointsReal",1313,(G__InterfaceMethod) NULL,68, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "g - 'Bool_t' 0 'kFALSE' fromInput", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPointsComplex",1653,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 8, 
"D - 'Double_t' 0 - - D - 'Double_t' 0 - - "
"g - 'Bool_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPointsComplex",1653,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 8, 
"D - 'Double_t' 0 - - g - 'Bool_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPoint",822,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - ipoint d - 'Double_t' 0 - re "
"d - 'Double_t' 0 '0' im", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPoint",822,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"I - 'Int_t' 10 - ipoint d - 'Double_t' 0 - re "
"d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPoints",937,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "D - 'Double_t' 10 - data", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPointComplex",1550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - - u 'TComplex' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPointsComplex",1665,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"D - 'Double_t' 10 - - D - 'Double_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Transform",956,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__FFTW_114_0_28, 85, G__get_linked_tagnum(&G__G__FFTWLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TFFTReal::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__FFTW_114_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TFFTReal::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__FFTW_114_0_30, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TFFTReal::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__FFTW_114_0_31, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TFFTReal::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__FFTWLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__FFTW_114_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__FFTW_114_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TFFTReal::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__FFTW_114_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TFFTReal::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__FFTW_114_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TFFTReal::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__FFTW_114_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TFFTReal::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TFFTReal", 696, G__G__FFTW_114_0_40, (int) ('i'), G__get_linked_tagnum(&G__G__FFTWLN_TFFTReal), -1, 0, 1, 1, 1, 0, "u 'TFFTReal' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TFFTReal", 822, G__G__FFTW_114_0_41, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__FFTW_114_0_42, (int) ('u'), G__get_linked_tagnum(&G__G__FFTWLN_TFFTReal), -1, 1, 1, 1, 1, 0, "u 'TFFTReal' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTFFTRealComplex(void) {
   /* TFFTRealComplex */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__FFTWLN_TFFTRealComplex));
   G__memfunc_setup("MapFlag",664,(G__InterfaceMethod) NULL, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 2, 0, "C - 'Option_t' 10 - flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TFFTRealComplex",1424,G__G__FFTW_115_0_2, 105, G__get_linked_tagnum(&G__G__FFTWLN_TFFTRealComplex), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TFFTRealComplex",1424,G__G__FFTW_115_0_3, 105, G__get_linked_tagnum(&G__G__FFTWLN_TFFTRealComplex), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - n g - 'Bool_t' 0 - inPlace", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TFFTRealComplex",1424,G__G__FFTW_115_0_4, 105, G__get_linked_tagnum(&G__G__FFTWLN_TFFTRealComplex), -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - ndim I - 'Int_t' 0 - n "
"g - 'Bool_t' 0 - inPlace", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"C - 'Option_t' 10 - flags i - 'Int_t' 0 - - "
"I - 'Int_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSize",699,G__G__FFTW_115_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetN",366,(G__InterfaceMethod) NULL,73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNdim",680,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetType",706,(G__InterfaceMethod) NULL,67, -1, G__defined_typename("Option_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSign",689,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTransformFlag",1622,(G__InterfaceMethod) NULL,67, -1, G__defined_typename("Option_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsInplace",888,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPoints",925,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 8, 
"D - 'Double_t' 0 - data g - 'Bool_t' 0 'kFALSE' fromInput", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPointReal",1198,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - ipoint g - 'Bool_t' 0 'kFALSE' fromInput", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPointReal",1198,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"I - 'Int_t' 10 - ipoint g - 'Bool_t' 0 'kFALSE' fromInput", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPointComplex",1538,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 8, 
"i - 'Int_t' 0 - ipoint d - 'Double_t' 1 - re "
"d - 'Double_t' 1 - im g - 'Bool_t' 0 'kFALSE' fromInput", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPointComplex",1538,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 8, 
"I - 'Int_t' 10 - ipoint d - 'Double_t' 1 - re "
"d - 'Double_t' 1 - im g - 'Bool_t' 0 'kFALSE' fromInput", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPointsReal",1313,(G__InterfaceMethod) NULL,68, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "g - 'Bool_t' 0 'kFALSE' fromInput", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPointsComplex",1653,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 8, 
"D - 'Double_t' 0 - re D - 'Double_t' 0 - im "
"g - 'Bool_t' 0 'kFALSE' fromInput", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPointsComplex",1653,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 8, 
"D - 'Double_t' 0 - data g - 'Bool_t' 0 'kFALSE' fromInput", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPoint",822,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - ipoint d - 'Double_t' 0 - re "
"d - 'Double_t' 0 '0' im", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPoint",822,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"I - 'Int_t' 10 - ipoint d - 'Double_t' 0 - re "
"d - 'Double_t' 0 '0' im", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPoints",937,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "D - 'Double_t' 10 - data", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPointComplex",1550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - ipoint u 'TComplex' - 1 - c", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPointsComplex",1665,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"D - 'Double_t' 10 - re D - 'Double_t' 10 - im", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Transform",956,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__FFTW_115_0_27, 85, G__get_linked_tagnum(&G__G__FFTWLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TFFTRealComplex::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__FFTW_115_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TFFTRealComplex::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__FFTW_115_0_29, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TFFTRealComplex::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__FFTW_115_0_30, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TFFTRealComplex::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__FFTWLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__FFTW_115_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__FFTW_115_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TFFTRealComplex::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__FFTW_115_0_36, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TFFTRealComplex::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__FFTW_115_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TFFTRealComplex::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__FFTW_115_0_38, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TFFTRealComplex::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TFFTRealComplex", 1424, G__G__FFTW_115_0_39, (int) ('i'), G__get_linked_tagnum(&G__G__FFTWLN_TFFTRealComplex), -1, 0, 1, 1, 1, 0, "u 'TFFTRealComplex' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TFFTRealComplex", 1550, G__G__FFTW_115_0_40, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__FFTW_115_0_41, (int) ('u'), G__get_linked_tagnum(&G__G__FFTWLN_TFFTRealComplex), -1, 1, 1, 1, 1, 0, "u 'TFFTRealComplex' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__FFTW() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__FFTW() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__FFTW() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__FFTWLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__FFTWLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__FFTWLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__FFTWLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__FFTWLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__FFTWLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__FFTWLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__G__FFTWLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__FFTWLN_TComplex = { "TComplex" , 99 , -1 };
G__linked_taginfo G__G__FFTWLN_TVirtualFFT = { "TVirtualFFT" , 99 , -1 };
G__linked_taginfo G__G__FFTWLN_TFFTComplex = { "TFFTComplex" , 99 , -1 };
G__linked_taginfo G__G__FFTWLN_TFFTComplexReal = { "TFFTComplexReal" , 99 , -1 };
G__linked_taginfo G__G__FFTWLN_TFFTReal = { "TFFTReal" , 99 , -1 };
G__linked_taginfo G__G__FFTWLN_TFFTRealComplex = { "TFFTRealComplex" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__FFTW() {
  G__G__FFTWLN_TClass.tagnum = -1 ;
  G__G__FFTWLN_TBuffer.tagnum = -1 ;
  G__G__FFTWLN_TMemberInspector.tagnum = -1 ;
  G__G__FFTWLN_TObject.tagnum = -1 ;
  G__G__FFTWLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__FFTWLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__FFTWLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__G__FFTWLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__FFTWLN_TComplex.tagnum = -1 ;
  G__G__FFTWLN_TVirtualFFT.tagnum = -1 ;
  G__G__FFTWLN_TFFTComplex.tagnum = -1 ;
  G__G__FFTWLN_TFFTComplexReal.tagnum = -1 ;
  G__G__FFTWLN_TFFTReal.tagnum = -1 ;
  G__G__FFTWLN_TFFTRealComplex.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__FFTW() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__FFTWLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__FFTWLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__FFTWLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__FFTWLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__FFTWLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__FFTWLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__FFTWLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__FFTWLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__FFTWLN_TComplex);
   G__get_linked_tagnum_fwd(&G__G__FFTWLN_TVirtualFFT);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__FFTWLN_TFFTComplex),sizeof(TFFTComplex),-1,324864,(char*)NULL,G__setup_memvarTFFTComplex,G__setup_memfuncTFFTComplex);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__FFTWLN_TFFTComplexReal),sizeof(TFFTComplexReal),-1,324864,(char*)NULL,G__setup_memvarTFFTComplexReal,G__setup_memfuncTFFTComplexReal);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__FFTWLN_TFFTReal),sizeof(TFFTReal),-1,324864,(char*)NULL,G__setup_memvarTFFTReal,G__setup_memfuncTFFTReal);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__FFTWLN_TFFTRealComplex),sizeof(TFFTRealComplex),-1,324864,(char*)NULL,G__setup_memvarTFFTRealComplex,G__setup_memfuncTFFTRealComplex);
}
extern "C" void G__cpp_setupG__FFTW(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__FFTW()");
  G__set_cpp_environmentG__FFTW();
  G__cpp_setup_tagtableG__FFTW();

  G__cpp_setup_inheritanceG__FFTW();

  G__cpp_setup_typetableG__FFTW();

  G__cpp_setup_memvarG__FFTW();

  G__cpp_setup_memfuncG__FFTW();
  G__cpp_setup_globalG__FFTW();
  G__cpp_setup_funcG__FFTW();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__FFTW();
  return;
}
class G__cpp_setup_initG__FFTW {
  public:
    G__cpp_setup_initG__FFTW() { G__add_setup_func("G__FFTW",(G__incsetup)(&G__cpp_setupG__FFTW)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__FFTW() { G__remove_setup_func("G__FFTW"); }
};
G__cpp_setup_initG__FFTW G__cpp_setup_initializerG__FFTW;

