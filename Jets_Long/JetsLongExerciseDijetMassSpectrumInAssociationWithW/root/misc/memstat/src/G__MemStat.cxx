//
// File generated by core/utils/src/rootcint_tmp at Fri Nov  4 16:31:26 2011

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME miscdImemstatdIsrcdIG__MemStat
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__MemStat.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace memstat {
   namespace ROOT {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void memstat_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("memstat", 0 /*version*/, "include/TMemStatMng.h", 28,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &memstat_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void memstat_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

namespace ROOT {
   void TMemStat_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TMemStat(void *p = 0);
   static void *newArray_TMemStat(Long_t size, void *p);
   static void delete_TMemStat(void *p);
   static void deleteArray_TMemStat(void *p);
   static void destruct_TMemStat(void *p);
   static void streamer_TMemStat(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TMemStat*)
   {
      ::TMemStat *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TMemStat >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TMemStat", ::TMemStat::Class_Version(), "include/TMemStat.h", 14,
                  typeid(::TMemStat), DefineBehavior(ptr, ptr),
                  &::TMemStat::Dictionary, isa_proxy, 0,
                  sizeof(::TMemStat) );
      instance.SetNew(&new_TMemStat);
      instance.SetNewArray(&newArray_TMemStat);
      instance.SetDelete(&delete_TMemStat);
      instance.SetDeleteArray(&deleteArray_TMemStat);
      instance.SetDestructor(&destruct_TMemStat);
      instance.SetStreamerFunc(&streamer_TMemStat);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TMemStat*)
   {
      return GenerateInitInstanceLocal((::TMemStat*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TMemStat*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void memstatcLcLTMemStatMng_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void streamer_memstatcLcLTMemStatMng(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::memstat::TMemStatMng*)
   {
      ::memstat::TMemStatMng *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::memstat::TMemStatMng >(0);
      static ::ROOT::TGenericClassInfo 
         instance("memstat::TMemStatMng", ::memstat::TMemStatMng::Class_Version(), "include/TMemStatMng.h", 74,
                  typeid(::memstat::TMemStatMng), DefineBehavior(ptr, ptr),
                  &::memstat::TMemStatMng::Dictionary, isa_proxy, 0,
                  sizeof(::memstat::TMemStatMng) );
      instance.SetStreamerFunc(&streamer_memstatcLcLTMemStatMng);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::memstat::TMemStatMng*)
   {
      return GenerateInitInstanceLocal((::memstat::TMemStatMng*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::memstat::TMemStatMng*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TMemStat::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMemStat::Class_Name()
{
   return "TMemStat";
}

//______________________________________________________________________________
const char *TMemStat::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMemStat*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMemStat::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMemStat*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMemStat::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMemStat*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMemStat::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMemStat*)0x0)->GetClass();
   return fgIsA;
}

      namespace memstat {
//______________________________________________________________________________
TClass *TMemStatMng::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMemStatMng::Class_Name()
{
   return "memstat::TMemStatMng";
}

//______________________________________________________________________________
const char *TMemStatMng::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::memstat::TMemStatMng*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMemStatMng::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::memstat::TMemStatMng*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMemStatMng::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::memstat::TMemStatMng*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMemStatMng::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::memstat::TMemStatMng*)0x0)->GetClass();
   return fgIsA;
}

} // namespace memstat
//______________________________________________________________________________
void TMemStat::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMemStat.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void TMemStat::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TMemStat.
      TClass *R__cl = ::TMemStat::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsActive", &fIsActive);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TMemStat(void *p) {
      return  p ? new(p) ::TMemStat : new ::TMemStat;
   }
   static void *newArray_TMemStat(Long_t nElements, void *p) {
      return p ? new(p) ::TMemStat[nElements] : new ::TMemStat[nElements];
   }
   // Wrapper around operator delete
   static void delete_TMemStat(void *p) {
      delete ((::TMemStat*)p);
   }
   static void deleteArray_TMemStat(void *p) {
      delete [] ((::TMemStat*)p);
   }
   static void destruct_TMemStat(void *p) {
      typedef ::TMemStat current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TMemStat(TBuffer &buf, void *obj) {
      ((::TMemStat*)obj)->::TMemStat::Streamer(buf);
   }
} // end of namespace ROOT for class ::TMemStat

      namespace memstat {
//______________________________________________________________________________
void TMemStatMng::Streamer(TBuffer &R__b)
{
   // Stream an object of class memstat::TMemStatMng.

   TObject::Streamer(R__b);
}

} // namespace memstat
//______________________________________________________________________________
      namespace memstat {
void TMemStatMng::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class memstat::TMemStatMng.
      TClass *R__cl = ::memstat::TMemStatMng::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPreviousMallocHook", &fPreviousMallocHook);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPreviousFreeHook", &fPreviousFreeHook);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDumpFile", &fDumpFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDumpTree", &fDumpTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUseGNUBuiltinBacktrace", &fUseGNUBuiltinBacktrace);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeStamp", &fTimeStamp);
      R__insp.InspectMember(fTimeStamp, "fTimeStamp.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBeginTime", &fBeginTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPos", &fPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimems", &fTimems);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNBytes", &fNBytes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBtID", &fBtID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxCalls", &fMaxCalls);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBufferSize", &fBufferSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBufN", &fBufN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBufPos", &fBufPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBufTimems", &fBufTimems);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBufNBytes", &fBufNBytes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBufBtID", &fBufBtID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIndex", &fIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMustWrite", &fMustWrite);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFAddrs", (void*)&fFAddrs);
      R__insp.InspectMember("memstat::TMemStatFAddrContainer", (void*)&fFAddrs, "fFAddrs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFAddrsList", &fFAddrsList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHbtids", &fHbtids);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBTChecksums", (void*)&fBTChecksums);
      R__insp.InspectMember("memstat::TMemStatMng::CRCSet_t", (void*)&fBTChecksums, "fBTChecksums.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBTCount", &fBTCount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBTIDCount", &fBTIDCount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSysInfo", &fSysInfo);
      TObject::ShowMembers(R__insp);
}

} // namespace memstat
namespace ROOT {
   // Wrapper around a custom streamer member function.
   static void streamer_memstatcLcLTMemStatMng(TBuffer &buf, void *obj) {
      ((::memstat::TMemStatMng*)obj)->::memstat::TMemStatMng::Streamer(buf);
   }
} // end of namespace ROOT for class ::memstat::TMemStatMng

/********************************************************
* misc/memstat/src/G__MemStat.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__MemStat();

extern "C" void G__set_cpp_environmentG__MemStat() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("TMemStatHelpers.h");
  G__add_compiledheader("TMemStat.h");
  G__add_compiledheader("TMemStatBacktrace.h");
  G__add_compiledheader("TMemStatDef.h");
  G__add_compiledheader("TMemStatMng.h");
  G__add_compiledheader("TMemStatHook.h");
  G__cpp_reset_tagtableG__MemStat();
}
#include <new>
extern "C" int G__cpp_dllrevG__MemStat() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* memstat */
static int G__G__MemStat_116_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = memstat::dig2bytes((Long64_t) G__Longlong(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MemStat_116_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 107, (long) memstat::getBacktrace((void**) G__int(libp->para[0]), (size_t) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 107, (long) memstat::getBacktrace((void**) G__int(libp->para[0]), (size_t) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MemStat_116_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) memstat::getSymbols((void*) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, *(TString*) libp->para[2].ref, *(TString*) libp->para[3].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MemStat_116_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      memstat::getSymbolFullInfo((void*) G__int(libp->para[0]), (TString*) G__int(libp->para[1])
, (const char *const) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      memstat::getSymbolFullInfo((void*) G__int(libp->para[0]), (TString*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MemStat_116_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      memstat::demangle((char*) G__int(libp->para[0]), *(TString*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MemStat_116_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) memstat::operator<(*(memstat::SCustomDigest*) libp->para[0].ref, *(memstat::SCustomDigest*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMemStat */
static int G__G__MemStat_120_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMemStat* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TMemStat(
(Option_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TMemStat(
(Option_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TMemStat((Option_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TMemStat((Option_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TMemStat((Option_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TMemStat((Option_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TMemStat[n];
       } else {
         p = new((void*) gvp) TMemStat[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TMemStat;
       } else {
         p = new((void*) gvp) TMemStat;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MemStatLN_TMemStat));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MemStat_120_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TMemStat::Close();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MemStat_120_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMemStat*) G__getstructoffset())->Disable();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MemStat_120_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMemStat*) G__getstructoffset())->Enable();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MemStat_120_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      TMemStat::Show((Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      TMemStat::Show((Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      TMemStat::Show((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      TMemStat::Show();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MemStat_120_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TMemStat::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MemStat_120_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMemStat::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MemStat_120_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TMemStat::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MemStat_120_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TMemStat::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MemStat_120_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMemStat*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MemStat_120_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMemStat::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MemStat_120_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMemStat::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MemStat_120_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMemStat::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MemStat_120_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMemStat::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__MemStat_120_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TMemStat* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TMemStat(*(TMemStat*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MemStatLN_TMemStat));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMemStat G__TTMemStat;
static int G__G__MemStat_120_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TMemStat*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TMemStat*) (soff+(sizeof(TMemStat)*i)))->~G__TTMemStat();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TMemStat*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TMemStat*) (soff))->~G__TTMemStat();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__MemStat_120_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMemStat* dest = (TMemStat*) G__getstructoffset();
   *dest = *(TMemStat*) libp->para[0].ref;
   const TMemStat& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* memstat::TMemStatMng */
static int G__G__MemStat_142_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((memstat::TMemStatMng*) G__getstructoffset())->Enable();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MemStat_142_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((memstat::TMemStatMng*) G__getstructoffset())->Disable();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MemStat_142_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) memstat::TMemStatMng::GetInstance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MemStat_142_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      memstat::TMemStatMng::Close();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MemStat_142_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((memstat::TMemStatMng*) G__getstructoffset())->SetBufferSize((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MemStat_142_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((memstat::TMemStatMng*) G__getstructoffset())->SetMaxCalls((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MemStat_142_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((memstat::TMemStatMng*) G__getstructoffset())->SetUseGNUBuiltinBacktrace((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MemStat_142_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) memstat::TMemStatMng::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MemStat_142_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) memstat::TMemStatMng::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MemStat_142_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) memstat::TMemStatMng::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MemStat_142_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      memstat::TMemStatMng::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MemStat_142_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((memstat::TMemStatMng*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MemStat_142_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) memstat::TMemStatMng::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MemStat_142_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) memstat::TMemStatMng::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MemStat_142_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) memstat::TMemStatMng::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MemStat_142_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) memstat::TMemStatMng::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__MemStat_142_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   memstat::TMemStatMng* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new memstat::TMemStatMng(*(memstat::TMemStatMng*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MemStatLN_memstatcLcLTMemStatMng));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__MemStat_142_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   memstat::TMemStatMng* dest = (memstat::TMemStatMng*) G__getstructoffset();
   *dest = *(memstat::TMemStatMng*) libp->para[0].ref;
   const memstat::TMemStatMng& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* memstat */

/* TMemStat */

/* memstat::TMemStatMng */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__MemStat {
 public:
  G__Sizep2memfuncG__MemStat(): p(&G__Sizep2memfuncG__MemStat::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__MemStat::*p)();
};

size_t G__get_sizep2memfuncG__MemStat()
{
  G__Sizep2memfuncG__MemStat a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__MemStat() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MemStatLN_TMemStat))) {
     TMemStat *G__Lderived;
     G__Lderived=(TMemStat*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MemStatLN_TMemStat),G__get_linked_tagnum(&G__G__MemStatLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MemStatLN_memstatcLcLTMemStatMng))) {
     memstat::TMemStatMng *G__Lderived;
     G__Lderived=(memstat::TMemStatMng*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MemStatLN_memstatcLcLTMemStatMng),G__get_linked_tagnum(&G__G__MemStatLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__MemStat() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("Long64_t",110,-1,0,-1);
   G__setnewtype(-1,"Portable signed long integer 8 bytes",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__MemStatLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__MemStatLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__MemStatLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__MemStatLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__MemStatLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__G__MemStatLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__MemStatLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__MemStatLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__MemStatLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__MemStatLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<ULong_t,Int_t>",117,G__get_linked_tagnum(&G__G__MemStatLN_maplEunsignedsPlongcOintcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned long,int>",117,G__get_linked_tagnum(&G__G__MemStatLN_maplEunsignedsPlongcOintcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned long,int,less<unsigned long> >",117,G__get_linked_tagnum(&G__G__MemStatLN_maplEunsignedsPlongcOintcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<SCustomDigest,Int_t>",117,G__get_linked_tagnum(&G__G__MemStatLN_maplEmemstatcLcLSCustomDigestcOintcOlesslEmemstatcLcLSCustomDigestgRcOallocatorlEpairlEconstsPmemstatcLcLSCustomDigestcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<memstat::SCustomDigest,int>",117,G__get_linked_tagnum(&G__G__MemStatLN_maplEmemstatcLcLSCustomDigestcOintcOlesslEmemstatcLcLSCustomDigestgRcOallocatorlEpairlEconstsPmemstatcLcLSCustomDigestcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<memstat::SCustomDigest,int,less<memstat::SCustomDigest> >",117,G__get_linked_tagnum(&G__G__MemStatLN_maplEmemstatcLcLSCustomDigestcOintcOlesslEmemstatcLcLSCustomDigestgRcOallocatorlEpairlEconstsPmemstatcLcLSCustomDigestcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("CRCSet_t",117,G__get_linked_tagnum(&G__G__MemStatLN_maplEmemstatcLcLSCustomDigestcOintcOlesslEmemstatcLcLSCustomDigestgRcOallocatorlEpairlEconstsPmemstatcLcLSCustomDigestcOintgRsPgRsPgR),0,G__get_linked_tagnum(&G__G__MemStatLN_memstatcLcLTMemStatMng));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* memstat */
static void G__setup_memvarmemstat(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MemStatLN_memstat));
   {
   G__memvar_setup((void*)(&memstat::g_BTStackLevel),107,0,1,-1,G__defined_typename("size_t"),-1,1,"g_BTStackLevel=",0,(char*)NULL);
   G__memvar_setup((void*)(&memstat::g_digestSize),114,0,1,-1,G__defined_typename("UShort_t"),-1,1,"g_digestSize=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMemStat */
static void G__setup_memvarTMemStat(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MemStatLN_TMemStat));
   { TMemStat *p; p=(TMemStat*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsActive=",0,"is object attached to MemStat");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MemStatLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* memstat::TMemStatMng */
static void G__setup_memvarmemstatcLcLTMemStatMng(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MemStatLN_memstatcLcLTMemStatMng));
   { memstat::TMemStatMng *p; p=(memstat::TMemStatMng*)0x1000; if (p) { }
   G__memvar_setup((void*)0,89,0,0,-1,G__defined_typename("MallocHookFunc_t"),-1,2,"fPreviousMallocHook=",0,"!old malloc function");
   G__memvar_setup((void*)0,89,0,0,-1,G__defined_typename("FreeHookFunc_t"),-1,2,"fPreviousFreeHook=",0,"!old free function");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MemStatLN_TFile),-1,-1,2,"fDumpFile=",0,"!file to dump current information");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MemStatLN_TTree),-1,-1,2,"fDumpTree=",0,"!tree to dump information");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MemStatLN_memstatcLcLTMemStatMng),-1,-2,2,"fgInstance=",0,"pointer to instance");
   G__memvar_setup((void*)0,89,0,0,-1,-1,-2,2,"fgStackTop=",0,"stack top pointer");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fUseGNUBuiltinBacktrace=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MemStatLN_TTimeStamp),-1,-1,2,"fTimeStamp=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fBeginTime=",0,"time when monitoring starts");
   G__memvar_setup((void*)0,109,0,0,-1,G__defined_typename("ULong64_t"),-1,2,"fPos=",0,"position in memory where alloc/free happens");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTimems=",0,"10000*(current time - begin time)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNBytes=",0,"number of bytes allocated/freed");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fBtID=",0,"back trace identifier");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMaxCalls=",0,"max number of malloc/frees to register in the output Tree");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fBufferSize=",0,"max number of malloc/free to keep in the buffer");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fBufN=",0,"current number of alloc or free in the buffer");
   G__memvar_setup((void*)0,77,0,0,-1,G__defined_typename("ULong64_t"),-1,2,"fBufPos=",0,"position in memory where alloc/free happens");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fBufTimems=",0,"10000*(current time - begin time)");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fBufNBytes=",0,"number of bytes allocated/freed");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fBufBtID=",0,"back trace identifier");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fIndex=",0,"array to sort fBufPos");
   G__memvar_setup((void*)0,71,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fMustWrite=",0,"flag to write or not the entry");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MemStatLN_memstatcLcLTMemStatFAddrContainer),-1,-1,4,"fFAddrs=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MemStatLN_TObjArray),-1,-1,4,"fFAddrsList=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MemStatLN_TH1I),-1,-1,4,"fHbtids=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MemStatLN_maplEmemstatcLcLSCustomDigestcOintcOlesslEmemstatcLcLSCustomDigestgRcOallocatorlEpairlEconstsPmemstatcLcLSCustomDigestcOintgRsPgRsPgR),G__defined_typename("CRCSet_t"),-1,4,"fBTChecksums=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fBTCount=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fBTIDCount=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MemStatLN_TNamed),-1,-1,4,"fSysInfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MemStatLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__MemStat() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncmemstat(void) {
   /* memstat */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MemStatLN_memstat));
   G__memfunc_setup("dig2bytes",909,G__G__MemStat_116_0_1, 117, G__get_linked_tagnum(&G__G__MemStatLN_string), -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - bytes", (char*)NULL, (void*) G__func2void( (string (*)(Long64_t))(&memstat::dig2bytes) ), 0);
   G__memfunc_setup("getBacktrace",1216,G__G__MemStat_116_0_2, 107, -1, G__defined_typename("size_t"), 0, 3, 1, 1, 0, 
"Y - - 2 - _trace k - 'size_t' 0 - _size "
"g - 'Bool_t' 0 'kFALSE' _bUseGNUBuiltinBacktrace", (char*)NULL, (void*) G__func2void( (size_t (*)(void**, size_t, Bool_t))(&memstat::getBacktrace) ), 0);
   G__memfunc_setup("getSymbols",1065,G__G__MemStat_116_0_3, 105, -1, -1, 0, 4, 1, 1, 0, 
"Y - - 0 - _pAddr u 'TString' - 1 - _strInfo "
"u 'TString' - 1 - _strLib u 'TString' - 1 - _strSymbol", (char*)NULL, (void*) G__func2void( (int (*)(void*, TString&, TString&, TString&))(&memstat::getSymbols) ), 0);
   G__memfunc_setup("getSymbolFullInfo",1749,G__G__MemStat_116_0_4, 121, -1, -1, 0, 3, 1, 1, 0, 
"Y - - 0 - _pAddr U 'TString' - 0 - _retInfo "
"C - - 50 '\" | \"' _seporator", (char*)NULL, (void*) G__func2void( (void (*)(void*, TString*, const char *const))(&memstat::getSymbolFullInfo) ), 0);
   G__memfunc_setup("demangle",829,G__G__MemStat_116_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 0 - _codeInfo u 'TString' - 1 - _str", (char*)NULL, (void*) G__func2void( (void (*)(char*, TString&))(&memstat::demangle) ), 0);
   G__memfunc_setup("operator<",936,G__G__MemStat_116_0_6, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'memstat::SCustomDigest' - 11 - a u 'memstat::SCustomDigest' - 11 - b", (char*)NULL, (void*) G__func2void( (bool (*)(const memstat::SCustomDigest&, const memstat::SCustomDigest&))(&memstat::operator<) ), 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMemStat(void) {
   /* TMemStat */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MemStatLN_TMemStat));
   G__memfunc_setup("TMemStat",783,G__G__MemStat_120_0_1, 105, G__get_linked_tagnum(&G__G__MemStatLN_TMemStat), -1, 0, 3, 1, 1, 0, 
"C - 'Option_t' 10 '\"read\"' option i - 'Int_t' 0 '10000' buffersize "
"i - 'Int_t' 0 '5000000' maxcalls", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Close",502,G__G__MemStat_120_0_2, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TMemStat::Close) ), 0);
   G__memfunc_setup("Disable",692,G__G__MemStat_120_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Enable",583,G__G__MemStat_120_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Show",417,G__G__MemStat_120_0_5, 121, -1, -1, 0, 3, 3, 1, 0, 
"d - 'Double_t' 0 '0.1' update i - 'Int_t' 0 '20' nbigleaks "
"C - - 10 '\"*\"' fname", (char*)NULL, (void*) G__func2void( (void (*)(Double_t, Int_t, const char*))(&TMemStat::Show) ), 0);
   G__memfunc_setup("Class",502,G__G__MemStat_120_0_6, 85, G__get_linked_tagnum(&G__G__MemStatLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TMemStat::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__MemStat_120_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMemStat::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__MemStat_120_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TMemStat::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__MemStat_120_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TMemStat::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__MemStatLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__MemStat_120_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__MemStat_120_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMemStat::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__MemStat_120_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TMemStat::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__MemStat_120_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMemStat::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__MemStat_120_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TMemStat::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TMemStat", 783, G__G__MemStat_120_0_18, (int) ('i'), G__get_linked_tagnum(&G__G__MemStatLN_TMemStat), -1, 0, 1, 1, 1, 0, "u 'TMemStat' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TMemStat", 909, G__G__MemStat_120_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__MemStat_120_0_20, (int) ('u'), G__get_linked_tagnum(&G__G__MemStatLN_TMemStat), -1, 1, 1, 1, 1, 0, "u 'TMemStat' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncmemstatcLcLTMemStatMng(void) {
   /* memstat::TMemStatMng */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MemStatLN_memstatcLcLTMemStatMng));
   G__memfunc_setup("TMemStatMng",1073,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__MemStatLN_memstatcLcLTMemStatMng), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Enable",583,G__G__MemStat_142_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", "enable memory statistic", (void*) NULL, 0);
   G__memfunc_setup("Disable",692,G__G__MemStat_142_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", "Disable memory statistic", (void*) NULL, 0);
   G__memfunc_setup("GetInstance",1109,G__G__MemStat_142_0_4, 85, G__get_linked_tagnum(&G__G__MemStatLN_memstatcLcLTMemStatMng), -1, 0, 0, 3, 1, 0, "", "get instance of class - ONLY ONE INSTANCE", (void*) G__func2void( (memstat::TMemStatMng* (*)())(&memstat::TMemStatMng::GetInstance) ), 0);
   G__memfunc_setup("Close",502,G__G__MemStat_142_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", "close MemStatManager", (void*) G__func2void( (void (*)())(&memstat::TMemStatMng::Close) ), 0);
   G__memfunc_setup("SetBufferSize",1313,G__G__MemStat_142_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - buffersize", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMaxCalls",1089,G__G__MemStat_142_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - maxcalls", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetUseGNUBuiltinBacktrace",2458,G__G__MemStat_142_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - newVal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddPointer",1002,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"Y - - 0 - ptr i - 'Int_t' 0 - size", "add pointer to the table", (void*) NULL, 0);
   G__memfunc_setup("FillTree",791,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AllocHook",892,(G__InterfaceMethod) NULL, 89, -1, -1, 0, 2, 3, 2, 0, 
"k - 'size_t' 0 - size Y - - 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FreeHook",787,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 3, 2, 0, 
"Y - - 0 - ptr Y - - 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MacAllocHook",1165,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 3, 2, 0, 
"Y - - 0 - ptr k - 'size_t' 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MacFreeHook",1060,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 3, 2, 0, "Y - - 0 - ptr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("generateBTID",1134,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 2, 0, 
"B - 'UChar_t' 0 - CRCdigest i - 'Int_t' 0 - stackEntries "
"Y - - 2 - stackPointers", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__MemStat_142_0_17, 85, G__get_linked_tagnum(&G__G__MemStatLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&memstat::TMemStatMng::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__MemStat_142_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&memstat::TMemStatMng::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__MemStat_142_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&memstat::TMemStatMng::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__MemStat_142_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&memstat::TMemStatMng::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__MemStatLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__MemStat_142_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__MemStat_142_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&memstat::TMemStatMng::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__MemStat_142_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&memstat::TMemStatMng::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__MemStat_142_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&memstat::TMemStatMng::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__MemStat_142_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&memstat::TMemStatMng::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TMemStatMng", 1073, G__G__MemStat_142_0_29, (int) ('i'), G__get_linked_tagnum(&G__G__MemStatLN_memstatcLcLTMemStatMng), -1, 0, 1, 1, 1, 0, "u 'memstat::TMemStatMng' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__MemStat_142_0_30, (int) ('u'), G__get_linked_tagnum(&G__G__MemStatLN_memstatcLcLTMemStatMng), -1, 1, 1, 1, 1, 0, "u 'memstat::TMemStatMng' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__MemStat() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__MemStat() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__MemStat() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__MemStatLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__MemStatLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__MemStatLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__MemStatLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__MemStatLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__MemStatLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__MemStatLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__G__MemStatLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__MemStatLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__MemStatLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__G__MemStatLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__G__MemStatLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__MemStatLN_memstat = { "memstat" , 110 , -1 };
G__linked_taginfo G__G__MemStatLN_TMemStat = { "TMemStat" , 99 , -1 };
G__linked_taginfo G__G__MemStatLN_TTimeStamp = { "TTimeStamp" , 99 , -1 };
G__linked_taginfo G__G__MemStatLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__G__MemStatLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__G__MemStatLN_TH1I = { "TH1I" , 99 , -1 };
G__linked_taginfo G__G__MemStatLN_memstatcLcLTMemStatFAddrContainer = { "memstat::TMemStatFAddrContainer" , 99 , -1 };
G__linked_taginfo G__G__MemStatLN_maplEunsignedsPlongcOintcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOintgRsPgRsPgR = { "map<unsigned long,int,less<unsigned long>,allocator<pair<const unsigned long,int> > >" , 99 , -1 };
G__linked_taginfo G__G__MemStatLN_memstatcLcLSCustomDigest = { "memstat::SCustomDigest" , 115 , -1 };
G__linked_taginfo G__G__MemStatLN_memstatcLcLTMemStatMng = { "memstat::TMemStatMng" , 99 , -1 };
G__linked_taginfo G__G__MemStatLN_maplEmemstatcLcLSCustomDigestcOintcOlesslEmemstatcLcLSCustomDigestgRcOallocatorlEpairlEconstsPmemstatcLcLSCustomDigestcOintgRsPgRsPgR = { "map<memstat::SCustomDigest,int,less<memstat::SCustomDigest>,allocator<pair<const memstat::SCustomDigest,int> > >" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__MemStat() {
  G__G__MemStatLN_TClass.tagnum = -1 ;
  G__G__MemStatLN_TBuffer.tagnum = -1 ;
  G__G__MemStatLN_TMemberInspector.tagnum = -1 ;
  G__G__MemStatLN_TObject.tagnum = -1 ;
  G__G__MemStatLN_TNamed.tagnum = -1 ;
  G__G__MemStatLN_TString.tagnum = -1 ;
  G__G__MemStatLN_string.tagnum = -1 ;
  G__G__MemStatLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__MemStatLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__MemStatLN_TObjArray.tagnum = -1 ;
  G__G__MemStatLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__G__MemStatLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__MemStatLN_memstat.tagnum = -1 ;
  G__G__MemStatLN_TMemStat.tagnum = -1 ;
  G__G__MemStatLN_TTimeStamp.tagnum = -1 ;
  G__G__MemStatLN_TTree.tagnum = -1 ;
  G__G__MemStatLN_TFile.tagnum = -1 ;
  G__G__MemStatLN_TH1I.tagnum = -1 ;
  G__G__MemStatLN_memstatcLcLTMemStatFAddrContainer.tagnum = -1 ;
  G__G__MemStatLN_maplEunsignedsPlongcOintcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOintgRsPgRsPgR.tagnum = -1 ;
  G__G__MemStatLN_memstatcLcLSCustomDigest.tagnum = -1 ;
  G__G__MemStatLN_memstatcLcLTMemStatMng.tagnum = -1 ;
  G__G__MemStatLN_maplEmemstatcLcLSCustomDigestcOintcOlesslEmemstatcLcLSCustomDigestgRcOallocatorlEpairlEconstsPmemstatcLcLSCustomDigestcOintgRsPgRsPgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__MemStat() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__MemStatLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__MemStatLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__MemStatLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__MemStatLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__MemStatLN_TNamed);
   G__get_linked_tagnum_fwd(&G__G__MemStatLN_TString);
   G__get_linked_tagnum_fwd(&G__G__MemStatLN_string);
   G__get_linked_tagnum_fwd(&G__G__MemStatLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__MemStatLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__MemStatLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__G__MemStatLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__MemStatLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__MemStatLN_memstat),0,-1,0,(char*)NULL,G__setup_memvarmemstat,G__setup_memfuncmemstat);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__MemStatLN_TMemStat),sizeof(TMemStat),-1,29952,"a user interface class of MemStat",G__setup_memvarTMemStat,G__setup_memfuncTMemStat);
   G__get_linked_tagnum_fwd(&G__G__MemStatLN_TTimeStamp);
   G__get_linked_tagnum_fwd(&G__G__MemStatLN_TTree);
   G__get_linked_tagnum_fwd(&G__G__MemStatLN_TFile);
   G__get_linked_tagnum_fwd(&G__G__MemStatLN_TH1I);
   G__get_linked_tagnum_fwd(&G__G__MemStatLN_memstatcLcLTMemStatFAddrContainer);
   G__get_linked_tagnum_fwd(&G__G__MemStatLN_maplEunsignedsPlongcOintcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__MemStatLN_memstatcLcLSCustomDigest);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__MemStatLN_memstatcLcLTMemStatMng),sizeof(memstat::TMemStatMng),-1,29952,"a manager of memstat sessions.",G__setup_memvarmemstatcLcLTMemStatMng,G__setup_memfuncmemstatcLcLTMemStatMng);
   G__get_linked_tagnum_fwd(&G__G__MemStatLN_maplEmemstatcLcLSCustomDigestcOintcOlesslEmemstatcLcLSCustomDigestgRcOallocatorlEpairlEconstsPmemstatcLcLSCustomDigestcOintgRsPgRsPgR);
}
extern "C" void G__cpp_setupG__MemStat(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__MemStat()");
  G__set_cpp_environmentG__MemStat();
  G__cpp_setup_tagtableG__MemStat();

  G__cpp_setup_inheritanceG__MemStat();

  G__cpp_setup_typetableG__MemStat();

  G__cpp_setup_memvarG__MemStat();

  G__cpp_setup_memfuncG__MemStat();
  G__cpp_setup_globalG__MemStat();
  G__cpp_setup_funcG__MemStat();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__MemStat();
  return;
}
class G__cpp_setup_initG__MemStat {
  public:
    G__cpp_setup_initG__MemStat() { G__add_setup_func("G__MemStat",(G__incsetup)(&G__cpp_setupG__MemStat)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__MemStat() { G__remove_setup_func("G__MemStat"); }
};
G__cpp_setup_initG__MemStat G__cpp_setup_initializerG__MemStat;

