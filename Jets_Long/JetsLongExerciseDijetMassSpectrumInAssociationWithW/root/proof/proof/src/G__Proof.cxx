//
// File generated by core/utils/src/rootcint_tmp at Fri Nov  4 16:31:24 2011

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME proofdIproofdIsrcdIG__Proof
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__Proof.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< ::TDSetElement*, ::TString > pairlETDSetElementmUcOTStringgR;
      #else
      class pairlETDSetElementmUcOTStringgR  {
         public:
         //friend XX;
         ::TDSetElement* first; //
         ::TString second; //
      };
      #endif

   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TCondorSlave_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TCondorSlave(void *p = 0);
   static void *newArray_TCondorSlave(Long_t size, void *p);
   static void delete_TCondorSlave(void *p);
   static void deleteArray_TCondorSlave(void *p);
   static void destruct_TCondorSlave(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TCondorSlave*)
   {
      ::TCondorSlave *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TCondorSlave >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TCondorSlave", ::TCondorSlave::Class_Version(), "include/TCondor.h", 38,
                  typeid(::TCondorSlave), DefineBehavior(ptr, ptr),
                  &::TCondorSlave::Dictionary, isa_proxy, 4,
                  sizeof(::TCondorSlave) );
      instance.SetNew(&new_TCondorSlave);
      instance.SetNewArray(&newArray_TCondorSlave);
      instance.SetDelete(&delete_TCondorSlave);
      instance.SetDeleteArray(&deleteArray_TCondorSlave);
      instance.SetDestructor(&destruct_TCondorSlave);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TCondorSlave*)
   {
      return GenerateInitInstanceLocal((::TCondorSlave*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TCondorSlave*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TCondor_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TCondor(void *p = 0);
   static void *newArray_TCondor(Long_t size, void *p);
   static void delete_TCondor(void *p);
   static void deleteArray_TCondor(void *p);
   static void destruct_TCondor(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TCondor*)
   {
      ::TCondor *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TCondor >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TCondor", ::TCondor::Class_Version(), "include/TCondor.h", 56,
                  typeid(::TCondor), DefineBehavior(ptr, ptr),
                  &::TCondor::Dictionary, isa_proxy, 4,
                  sizeof(::TCondor) );
      instance.SetNew(&new_TCondor);
      instance.SetNewArray(&newArray_TCondor);
      instance.SetDelete(&delete_TCondor);
      instance.SetDeleteArray(&deleteArray_TCondor);
      instance.SetDestructor(&destruct_TCondor);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TCondor*)
   {
      return GenerateInitInstanceLocal((::TCondor*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TCondor*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TDSet_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TDSet(void *p = 0);
   static void *newArray_TDSet(Long_t size, void *p);
   static void delete_TDSet(void *p);
   static void deleteArray_TDSet(void *p);
   static void destruct_TDSet(void *p);
   static void streamer_TDSet(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TDSet*)
   {
      ::TDSet *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TDSet >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TDSet", ::TDSet::Class_Version(), "include/TDSet.h", 148,
                  typeid(::TDSet), DefineBehavior(ptr, ptr),
                  &::TDSet::Dictionary, isa_proxy, 1,
                  sizeof(::TDSet) );
      instance.SetNew(&new_TDSet);
      instance.SetNewArray(&newArray_TDSet);
      instance.SetDelete(&delete_TDSet);
      instance.SetDeleteArray(&deleteArray_TDSet);
      instance.SetDestructor(&destruct_TDSet);
      instance.SetStreamerFunc(&streamer_TDSet);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TDSet*)
   {
      return GenerateInitInstanceLocal((::TDSet*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TDSet*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TProof_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TProof(void *p);
   static void deleteArray_TProof(void *p);
   static void destruct_TProof(void *p);
   static void streamer_TProof(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TProof*)
   {
      ::TProof *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TProof >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TProof", ::TProof::Class_Version(), "include/TProof.h", 327,
                  typeid(::TProof), DefineBehavior(ptr, ptr),
                  &::TProof::Dictionary, isa_proxy, 0,
                  sizeof(::TProof) );
      instance.SetDelete(&delete_TProof);
      instance.SetDeleteArray(&deleteArray_TProof);
      instance.SetDestructor(&destruct_TProof);
      instance.SetStreamerFunc(&streamer_TProof);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TProof*)
   {
      return GenerateInitInstanceLocal((::TProof*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TProof*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TProofChain_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TProofChain(void *p = 0);
   static void *newArray_TProofChain(Long_t size, void *p);
   static void delete_TProofChain(void *p);
   static void deleteArray_TProofChain(void *p);
   static void destruct_TProofChain(void *p);
   static void directoryAutoAdd_TProofChain(void *p, TDirectory *dir);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TProofChain*)
   {
      ::TProofChain *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TProofChain >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TProofChain", ::TProofChain::Class_Version(), "include/TProofChain.h", 34,
                  typeid(::TProofChain), DefineBehavior(ptr, ptr),
                  &::TProofChain::Dictionary, isa_proxy, 4,
                  sizeof(::TProofChain) );
      instance.SetNew(&new_TProofChain);
      instance.SetNewArray(&newArray_TProofChain);
      instance.SetDelete(&delete_TProofChain);
      instance.SetDeleteArray(&deleteArray_TProofChain);
      instance.SetDestructor(&destruct_TProofChain);
      instance.SetDirectoryAutoAdd(&directoryAutoAdd_TProofChain);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TProofChain*)
   {
      return GenerateInitInstanceLocal((::TProofChain*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TProofChain*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TDSetElement_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TDSetElement(void *p = 0);
   static void *newArray_TDSetElement(Long_t size, void *p);
   static void delete_TDSetElement(void *p);
   static void deleteArray_TDSetElement(void *p);
   static void destruct_TDSetElement(void *p);
   static void streamer_TDSetElement(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TDSetElement*)
   {
      ::TDSetElement *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TDSetElement >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TDSetElement", ::TDSetElement::Class_Version(), "include/TDSet.h", 67,
                  typeid(::TDSetElement), DefineBehavior(ptr, ptr),
                  &::TDSetElement::Dictionary, isa_proxy, 1,
                  sizeof(::TDSetElement) );
      instance.SetNew(&new_TDSetElement);
      instance.SetNewArray(&newArray_TDSetElement);
      instance.SetDelete(&delete_TDSetElement);
      instance.SetDeleteArray(&deleteArray_TDSetElement);
      instance.SetDestructor(&destruct_TDSetElement);
      instance.SetStreamerFunc(&streamer_TDSetElement);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TDSetElement*)
   {
      return GenerateInitInstanceLocal((::TDSetElement*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TDSetElement*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void pairlETDSetElementmUcOTStringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void pairlETDSetElementmUcOTStringgR_Dictionary();
   static void *new_pairlETDSetElementmUcOTStringgR(void *p = 0);
   static void *newArray_pairlETDSetElementmUcOTStringgR(Long_t size, void *p);
   static void delete_pairlETDSetElementmUcOTStringgR(void *p);
   static void deleteArray_pairlETDSetElementmUcOTStringgR(void *p);
   static void destruct_pairlETDSetElementmUcOTStringgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const pair<TDSetElement*,TString>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<TDSetElement*,TString> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(pair<TDSetElement*,TString>),0);
      static ::ROOT::TGenericClassInfo 
         instance("pair<TDSetElement*,TString>", "prec_stl/utility", 17,
                  typeid(pair<TDSetElement*,TString>), DefineBehavior(ptr, ptr),
                  &pairlETDSetElementmUcOTStringgR_ShowMembers, &pairlETDSetElementmUcOTStringgR_Dictionary, isa_proxy, 0,
                  sizeof(pair<TDSetElement*,TString>) );
      instance.SetNew(&new_pairlETDSetElementmUcOTStringgR);
      instance.SetNewArray(&newArray_pairlETDSetElementmUcOTStringgR);
      instance.SetDelete(&delete_pairlETDSetElementmUcOTStringgR);
      instance.SetDeleteArray(&deleteArray_pairlETDSetElementmUcOTStringgR);
      instance.SetDestructor(&destruct_pairlETDSetElementmUcOTStringgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const pair<TDSetElement*,TString>*)
   {
      return GenerateInitInstanceLocal((pair<TDSetElement*,TString>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const pair<TDSetElement*,TString>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlETDSetElementmUcOTStringgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const pair<TDSetElement*,TString>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void TProofServ_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TProofServ(void *p);
   static void deleteArray_TProofServ(void *p);
   static void destruct_TProofServ(void *p);
   static void streamer_TProofServ(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TProofServ*)
   {
      ::TProofServ *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TProofServ >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TProofServ", ::TProofServ::Class_Version(), "include/TProofServ.h", 73,
                  typeid(::TProofServ), DefineBehavior(ptr, ptr),
                  &::TProofServ::Dictionary, isa_proxy, 0,
                  sizeof(::TProofServ) );
      instance.SetDelete(&delete_TProofServ);
      instance.SetDeleteArray(&deleteArray_TProofServ);
      instance.SetDestructor(&destruct_TProofServ);
      instance.SetStreamerFunc(&streamer_TProofServ);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TProofServ*)
   {
      return GenerateInitInstanceLocal((::TProofServ*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TProofServ*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TDSetProxy_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TDSetProxy(void *p = 0);
   static void *newArray_TDSetProxy(Long_t size, void *p);
   static void delete_TDSetProxy(void *p);
   static void deleteArray_TDSetProxy(void *p);
   static void destruct_TDSetProxy(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TDSetProxy*)
   {
      ::TDSetProxy *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TDSetProxy >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TDSetProxy", ::TDSetProxy::Class_Version(), "include/TDSetProxy.h", 31,
                  typeid(::TDSetProxy), DefineBehavior(ptr, ptr),
                  &::TDSetProxy::Dictionary, isa_proxy, 4,
                  sizeof(::TDSetProxy) );
      instance.SetNew(&new_TDSetProxy);
      instance.SetNewArray(&newArray_TDSetProxy);
      instance.SetDelete(&delete_TDSetProxy);
      instance.SetDeleteArray(&deleteArray_TDSetProxy);
      instance.SetDestructor(&destruct_TDSetProxy);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TDSetProxy*)
   {
      return GenerateInitInstanceLocal((::TDSetProxy*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TDSetProxy*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TDataSetManager_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TDataSetManager(void *p = 0);
   static void *newArray_TDataSetManager(Long_t size, void *p);
   static void delete_TDataSetManager(void *p);
   static void deleteArray_TDataSetManager(void *p);
   static void destruct_TDataSetManager(void *p);
   static void streamer_TDataSetManager(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TDataSetManager*)
   {
      ::TDataSetManager *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TDataSetManager >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TDataSetManager", ::TDataSetManager::Class_Version(), "include/TDataSetManager.h", 46,
                  typeid(::TDataSetManager), DefineBehavior(ptr, ptr),
                  &::TDataSetManager::Dictionary, isa_proxy, 0,
                  sizeof(::TDataSetManager) );
      instance.SetNew(&new_TDataSetManager);
      instance.SetNewArray(&newArray_TDataSetManager);
      instance.SetDelete(&delete_TDataSetManager);
      instance.SetDeleteArray(&deleteArray_TDataSetManager);
      instance.SetDestructor(&destruct_TDataSetManager);
      instance.SetStreamerFunc(&streamer_TDataSetManager);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TDataSetManager*)
   {
      return GenerateInitInstanceLocal((::TDataSetManager*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TDataSetManager*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TDataSetManagerFile_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TDataSetManagerFile(void *p = 0);
   static void *newArray_TDataSetManagerFile(Long_t size, void *p);
   static void delete_TDataSetManagerFile(void *p);
   static void deleteArray_TDataSetManagerFile(void *p);
   static void destruct_TDataSetManagerFile(void *p);
   static void streamer_TDataSetManagerFile(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TDataSetManagerFile*)
   {
      ::TDataSetManagerFile *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TDataSetManagerFile >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TDataSetManagerFile", ::TDataSetManagerFile::Class_Version(), "include/TDataSetManagerFile.h", 32,
                  typeid(::TDataSetManagerFile), DefineBehavior(ptr, ptr),
                  &::TDataSetManagerFile::Dictionary, isa_proxy, 0,
                  sizeof(::TDataSetManagerFile) );
      instance.SetNew(&new_TDataSetManagerFile);
      instance.SetNewArray(&newArray_TDataSetManagerFile);
      instance.SetDelete(&delete_TDataSetManagerFile);
      instance.SetDeleteArray(&deleteArray_TDataSetManagerFile);
      instance.SetDestructor(&destruct_TDataSetManagerFile);
      instance.SetStreamerFunc(&streamer_TDataSetManagerFile);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TDataSetManagerFile*)
   {
      return GenerateInitInstanceLocal((::TDataSetManagerFile*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TDataSetManagerFile*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TProofDesc_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TProofDesc(void *p = 0);
   static void *newArray_TProofDesc(Long_t size, void *p);
   static void delete_TProofDesc(void *p);
   static void deleteArray_TProofDesc(void *p);
   static void destruct_TProofDesc(void *p);
   static void streamer_TProofDesc(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TProofDesc*)
   {
      ::TProofDesc *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TProofDesc >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TProofDesc", ::TProofDesc::Class_Version(), "include/TProofMgr.h", 136,
                  typeid(::TProofDesc), DefineBehavior(ptr, ptr),
                  &::TProofDesc::Dictionary, isa_proxy, 0,
                  sizeof(::TProofDesc) );
      instance.SetNew(&new_TProofDesc);
      instance.SetNewArray(&newArray_TProofDesc);
      instance.SetDelete(&delete_TProofDesc);
      instance.SetDeleteArray(&deleteArray_TProofDesc);
      instance.SetDestructor(&destruct_TProofDesc);
      instance.SetStreamerFunc(&streamer_TProofDesc);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TProofDesc*)
   {
      return GenerateInitInstanceLocal((::TProofDesc*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TProofDesc*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TProofLog_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TProofLog(void *p);
   static void deleteArray_TProofLog(void *p);
   static void destruct_TProofLog(void *p);
   static void streamer_TProofLog(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TProofLog*)
   {
      ::TProofLog *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TProofLog >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TProofLog", ::TProofLog::Class_Version(), "include/TProofLog.h", 38,
                  typeid(::TProofLog), DefineBehavior(ptr, ptr),
                  &::TProofLog::Dictionary, isa_proxy, 0,
                  sizeof(::TProofLog) );
      instance.SetDelete(&delete_TProofLog);
      instance.SetDeleteArray(&deleteArray_TProofLog);
      instance.SetDestructor(&destruct_TProofLog);
      instance.SetStreamerFunc(&streamer_TProofLog);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TProofLog*)
   {
      return GenerateInitInstanceLocal((::TProofLog*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TProofLog*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TProofMgr_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TProofMgr(void *p);
   static void deleteArray_TProofMgr(void *p);
   static void destruct_TProofMgr(void *p);
   static void streamer_TProofMgr(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TProofMgr*)
   {
      ::TProofMgr *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TProofMgr >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TProofMgr", ::TProofMgr::Class_Version(), "include/TProofMgr.h", 47,
                  typeid(::TProofMgr), DefineBehavior(ptr, ptr),
                  &::TProofMgr::Dictionary, isa_proxy, 0,
                  sizeof(::TProofMgr) );
      instance.SetDelete(&delete_TProofMgr);
      instance.SetDeleteArray(&deleteArray_TProofMgr);
      instance.SetDestructor(&destruct_TProofMgr);
      instance.SetStreamerFunc(&streamer_TProofMgr);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TProofMgr*)
   {
      return GenerateInitInstanceLocal((::TProofMgr*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TProofMgr*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TProofDebug_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TProofDebug_Dictionary();
   static void *new_TProofDebug(void *p = 0);
   static void *newArray_TProofDebug(Long_t size, void *p);
   static void delete_TProofDebug(void *p);
   static void deleteArray_TProofDebug(void *p);
   static void destruct_TProofDebug(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TProofDebug*)
   {
      ::TProofDebug *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TProofDebug),0);
      static ::ROOT::TGenericClassInfo 
         instance("TProofDebug", "include/TProofDebug.h", 28,
                  typeid(::TProofDebug), DefineBehavior(ptr, ptr),
                  0, &TProofDebug_Dictionary, isa_proxy, 0,
                  sizeof(::TProofDebug) );
      instance.SetNew(&new_TProofDebug);
      instance.SetNewArray(&newArray_TProofDebug);
      instance.SetDelete(&delete_TProofDebug);
      instance.SetDeleteArray(&deleteArray_TProofDebug);
      instance.SetDestructor(&destruct_TProofDebug);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TProofDebug*)
   {
      return GenerateInitInstanceLocal((::TProofDebug*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TProofDebug*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TProofDebug_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::TProofDebug*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void TProofOutputList_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TProofOutputList(void *p = 0);
   static void *newArray_TProofOutputList(Long_t size, void *p);
   static void delete_TProofOutputList(void *p);
   static void deleteArray_TProofOutputList(void *p);
   static void destruct_TProofOutputList(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TProofOutputList*)
   {
      ::TProofOutputList *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TProofOutputList >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TProofOutputList", ::TProofOutputList::Class_Version(), "include/TProofOutputList.h", 28,
                  typeid(::TProofOutputList), DefineBehavior(ptr, ptr),
                  &::TProofOutputList::Dictionary, isa_proxy, 4,
                  sizeof(::TProofOutputList) );
      instance.SetNew(&new_TProofOutputList);
      instance.SetNewArray(&newArray_TProofOutputList);
      instance.SetDelete(&delete_TProofOutputList);
      instance.SetDeleteArray(&deleteArray_TProofOutputList);
      instance.SetDestructor(&destruct_TProofOutputList);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TProofOutputList*)
   {
      return GenerateInitInstanceLocal((::TProofOutputList*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TProofOutputList*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TVirtualProofPlayer_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TVirtualProofPlayer(void *p);
   static void deleteArray_TVirtualProofPlayer(void *p);
   static void destruct_TVirtualProofPlayer(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TVirtualProofPlayer*)
   {
      ::TVirtualProofPlayer *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TVirtualProofPlayer >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TVirtualProofPlayer", ::TVirtualProofPlayer::Class_Version(), "include/TVirtualProofPlayer.h", 47,
                  typeid(::TVirtualProofPlayer), DefineBehavior(ptr, ptr),
                  &::TVirtualProofPlayer::Dictionary, isa_proxy, 4,
                  sizeof(::TVirtualProofPlayer) );
      instance.SetDelete(&delete_TVirtualProofPlayer);
      instance.SetDeleteArray(&deleteArray_TVirtualProofPlayer);
      instance.SetDestructor(&destruct_TVirtualProofPlayer);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TVirtualProofPlayer*)
   {
      return GenerateInitInstanceLocal((::TVirtualProofPlayer*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TVirtualProofPlayer*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSlave_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TSlave(void *p);
   static void deleteArray_TSlave(void *p);
   static void destruct_TSlave(void *p);
   static void streamer_TSlave(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSlave*)
   {
      ::TSlave *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSlave >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSlave", ::TSlave::Class_Version(), "include/TSlave.h", 50,
                  typeid(::TSlave), DefineBehavior(ptr, ptr),
                  &::TSlave::Dictionary, isa_proxy, 0,
                  sizeof(::TSlave) );
      instance.SetDelete(&delete_TSlave);
      instance.SetDeleteArray(&deleteArray_TSlave);
      instance.SetDestructor(&destruct_TSlave);
      instance.SetStreamerFunc(&streamer_TSlave);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSlave*)
   {
      return GenerateInitInstanceLocal((::TSlave*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSlave*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TProofProgressInfo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TProofProgressInfo(void *p = 0);
   static void *newArray_TProofProgressInfo(Long_t size, void *p);
   static void delete_TProofProgressInfo(void *p);
   static void deleteArray_TProofProgressInfo(void *p);
   static void destruct_TProofProgressInfo(void *p);
   static void streamer_TProofProgressInfo(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TProofProgressInfo*)
   {
      ::TProofProgressInfo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TProofProgressInfo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TProofProgressInfo", ::TProofProgressInfo::Class_Version(), "include/TProof.h", 178,
                  typeid(::TProofProgressInfo), DefineBehavior(ptr, ptr),
                  &::TProofProgressInfo::Dictionary, isa_proxy, 0,
                  sizeof(::TProofProgressInfo) );
      instance.SetNew(&new_TProofProgressInfo);
      instance.SetNewArray(&newArray_TProofProgressInfo);
      instance.SetDelete(&delete_TProofProgressInfo);
      instance.SetDeleteArray(&deleteArray_TProofProgressInfo);
      instance.SetDestructor(&destruct_TProofProgressInfo);
      instance.SetStreamerFunc(&streamer_TProofProgressInfo);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TProofProgressInfo*)
   {
      return GenerateInitInstanceLocal((::TProofProgressInfo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TProofProgressInfo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSlaveInfo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSlaveInfo(void *p = 0);
   static void *newArray_TSlaveInfo(Long_t size, void *p);
   static void delete_TSlaveInfo(void *p);
   static void deleteArray_TSlaveInfo(void *p);
   static void destruct_TSlaveInfo(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSlaveInfo*)
   {
      ::TSlaveInfo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSlaveInfo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSlaveInfo", ::TSlaveInfo::Class_Version(), "include/TProof.h", 229,
                  typeid(::TSlaveInfo), DefineBehavior(ptr, ptr),
                  &::TSlaveInfo::Dictionary, isa_proxy, 4,
                  sizeof(::TSlaveInfo) );
      instance.SetNew(&new_TSlaveInfo);
      instance.SetNewArray(&newArray_TSlaveInfo);
      instance.SetDelete(&delete_TSlaveInfo);
      instance.SetDeleteArray(&deleteArray_TSlaveInfo);
      instance.SetDestructor(&destruct_TSlaveInfo);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSlaveInfo*)
   {
      return GenerateInitInstanceLocal((::TSlaveInfo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSlaveInfo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TMergerInfo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TMergerInfo(void *p);
   static void deleteArray_TMergerInfo(void *p);
   static void destruct_TMergerInfo(void *p);
   static void streamer_TMergerInfo(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TMergerInfo*)
   {
      ::TMergerInfo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TMergerInfo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TMergerInfo", ::TMergerInfo::Class_Version(), "include/TProof.h", 262,
                  typeid(::TMergerInfo), DefineBehavior(ptr, ptr),
                  &::TMergerInfo::Dictionary, isa_proxy, 0,
                  sizeof(::TMergerInfo) );
      instance.SetDelete(&delete_TMergerInfo);
      instance.SetDeleteArray(&deleteArray_TMergerInfo);
      instance.SetDestructor(&destruct_TMergerInfo);
      instance.SetStreamerFunc(&streamer_TMergerInfo);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TMergerInfo*)
   {
      return GenerateInitInstanceLocal((::TMergerInfo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TMergerInfo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TProofLite_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TProofLite(void *p);
   static void deleteArray_TProofLite(void *p);
   static void destruct_TProofLite(void *p);
   static void streamer_TProofLite(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TProofLite*)
   {
      ::TProofLite *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TProofLite >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TProofLite", ::TProofLite::Class_Version(), "include/TProofLite.h", 41,
                  typeid(::TProofLite), DefineBehavior(ptr, ptr),
                  &::TProofLite::Dictionary, isa_proxy, 0,
                  sizeof(::TProofLite) );
      instance.SetDelete(&delete_TProofLite);
      instance.SetDeleteArray(&deleteArray_TProofLite);
      instance.SetDestructor(&destruct_TProofLite);
      instance.SetStreamerFunc(&streamer_TProofLite);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TProofLite*)
   {
      return GenerateInitInstanceLocal((::TProofLite*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TProofLite*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSlaveLite_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TSlaveLite(void *p);
   static void deleteArray_TSlaveLite(void *p);
   static void destruct_TSlaveLite(void *p);
   static void streamer_TSlaveLite(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSlaveLite*)
   {
      ::TSlaveLite *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSlaveLite >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSlaveLite", ::TSlaveLite::Class_Version(), "include/TSlaveLite.h", 33,
                  typeid(::TSlaveLite), DefineBehavior(ptr, ptr),
                  &::TSlaveLite::Dictionary, isa_proxy, 0,
                  sizeof(::TSlaveLite) );
      instance.SetDelete(&delete_TSlaveLite);
      instance.SetDeleteArray(&deleteArray_TSlaveLite);
      instance.SetDestructor(&destruct_TSlaveLite);
      instance.SetStreamerFunc(&streamer_TSlaveLite);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSlaveLite*)
   {
      return GenerateInitInstanceLocal((::TSlaveLite*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSlaveLite*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TProofCondor_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TProofCondor(void *p);
   static void deleteArray_TProofCondor(void *p);
   static void destruct_TProofCondor(void *p);
   static void streamer_TProofCondor(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TProofCondor*)
   {
      ::TProofCondor *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TProofCondor >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TProofCondor", ::TProofCondor::Class_Version(), "include/TProofCondor.h", 37,
                  typeid(::TProofCondor), DefineBehavior(ptr, ptr),
                  &::TProofCondor::Dictionary, isa_proxy, 0,
                  sizeof(::TProofCondor) );
      instance.SetDelete(&delete_TProofCondor);
      instance.SetDeleteArray(&deleteArray_TProofCondor);
      instance.SetDestructor(&destruct_TProofCondor);
      instance.SetStreamerFunc(&streamer_TProofCondor);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TProofCondor*)
   {
      return GenerateInitInstanceLocal((::TProofCondor*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TProofCondor*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TQueryResultManager_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TQueryResultManager(void *p);
   static void deleteArray_TQueryResultManager(void *p);
   static void destruct_TQueryResultManager(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TQueryResultManager*)
   {
      ::TQueryResultManager *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TQueryResultManager >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TQueryResultManager", ::TQueryResultManager::Class_Version(), "include/TQueryResultManager.h", 41,
                  typeid(::TQueryResultManager), DefineBehavior(ptr, ptr),
                  &::TQueryResultManager::Dictionary, isa_proxy, 4,
                  sizeof(::TQueryResultManager) );
      instance.SetDelete(&delete_TQueryResultManager);
      instance.SetDeleteArray(&deleteArray_TQueryResultManager);
      instance.SetDestructor(&destruct_TQueryResultManager);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TQueryResultManager*)
   {
      return GenerateInitInstanceLocal((::TQueryResultManager*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TQueryResultManager*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TProofQueryResult_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TProofQueryResult(void *p = 0);
   static void *newArray_TProofQueryResult(Long_t size, void *p);
   static void delete_TProofQueryResult(void *p);
   static void deleteArray_TProofQueryResult(void *p);
   static void destruct_TProofQueryResult(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TProofQueryResult*)
   {
      ::TProofQueryResult *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TProofQueryResult >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TProofQueryResult", ::TProofQueryResult::Class_Version(), "include/TProofQueryResult.h", 30,
                  typeid(::TProofQueryResult), DefineBehavior(ptr, ptr),
                  &::TProofQueryResult::Dictionary, isa_proxy, 4,
                  sizeof(::TProofQueryResult) );
      instance.SetNew(&new_TProofQueryResult);
      instance.SetNewArray(&newArray_TProofQueryResult);
      instance.SetDelete(&delete_TProofQueryResult);
      instance.SetDeleteArray(&deleteArray_TProofQueryResult);
      instance.SetDestructor(&destruct_TProofQueryResult);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TProofQueryResult*)
   {
      return GenerateInitInstanceLocal((::TProofQueryResult*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TProofQueryResult*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TProofLogElem_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TProofLogElem(void *p);
   static void deleteArray_TProofLogElem(void *p);
   static void destruct_TProofLogElem(void *p);
   static void streamer_TProofLogElem(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TProofLogElem*)
   {
      ::TProofLogElem *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TProofLogElem >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TProofLogElem", ::TProofLogElem::Class_Version(), "include/TProofLog.h", 85,
                  typeid(::TProofLogElem), DefineBehavior(ptr, ptr),
                  &::TProofLogElem::Dictionary, isa_proxy, 0,
                  sizeof(::TProofLogElem) );
      instance.SetDelete(&delete_TProofLogElem);
      instance.SetDeleteArray(&deleteArray_TProofLogElem);
      instance.SetDestructor(&destruct_TProofLogElem);
      instance.SetStreamerFunc(&streamer_TProofLogElem);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TProofLogElem*)
   {
      return GenerateInitInstanceLocal((::TProofLogElem*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TProofLogElem*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TProofMgrLite_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TProofMgrLite(void *p);
   static void deleteArray_TProofMgrLite(void *p);
   static void destruct_TProofMgrLite(void *p);
   static void streamer_TProofMgrLite(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TProofMgrLite*)
   {
      ::TProofMgrLite *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TProofMgrLite >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TProofMgrLite", ::TProofMgrLite::Class_Version(), "include/TProofMgrLite.h", 31,
                  typeid(::TProofMgrLite), DefineBehavior(ptr, ptr),
                  &::TProofMgrLite::Dictionary, isa_proxy, 0,
                  sizeof(::TProofMgrLite) );
      instance.SetDelete(&delete_TProofMgrLite);
      instance.SetDeleteArray(&deleteArray_TProofMgrLite);
      instance.SetDestructor(&destruct_TProofMgrLite);
      instance.SetStreamerFunc(&streamer_TProofMgrLite);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TProofMgrLite*)
   {
      return GenerateInitInstanceLocal((::TProofMgrLite*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TProofMgrLite*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TProofResourcesStatic_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TProofResourcesStatic(void *p = 0);
   static void *newArray_TProofResourcesStatic(Long_t size, void *p);
   static void delete_TProofResourcesStatic(void *p);
   static void deleteArray_TProofResourcesStatic(void *p);
   static void destruct_TProofResourcesStatic(void *p);
   static void streamer_TProofResourcesStatic(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TProofResourcesStatic*)
   {
      ::TProofResourcesStatic *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TProofResourcesStatic >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TProofResourcesStatic", ::TProofResourcesStatic::Class_Version(), "include/TProofResourcesStatic.h", 41,
                  typeid(::TProofResourcesStatic), DefineBehavior(ptr, ptr),
                  &::TProofResourcesStatic::Dictionary, isa_proxy, 0,
                  sizeof(::TProofResourcesStatic) );
      instance.SetNew(&new_TProofResourcesStatic);
      instance.SetNewArray(&newArray_TProofResourcesStatic);
      instance.SetDelete(&delete_TProofResourcesStatic);
      instance.SetDeleteArray(&deleteArray_TProofResourcesStatic);
      instance.SetDestructor(&destruct_TProofResourcesStatic);
      instance.SetStreamerFunc(&streamer_TProofResourcesStatic);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TProofResourcesStatic*)
   {
      return GenerateInitInstanceLocal((::TProofResourcesStatic*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TProofResourcesStatic*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TProofNodeInfo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TProofNodeInfo(void *p = 0);
   static void *newArray_TProofNodeInfo(Long_t size, void *p);
   static void delete_TProofNodeInfo(void *p);
   static void deleteArray_TProofNodeInfo(void *p);
   static void destruct_TProofNodeInfo(void *p);
   static void streamer_TProofNodeInfo(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TProofNodeInfo*)
   {
      ::TProofNodeInfo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TProofNodeInfo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TProofNodeInfo", ::TProofNodeInfo::Class_Version(), "include/TProofNodeInfo.h", 36,
                  typeid(::TProofNodeInfo), DefineBehavior(ptr, ptr),
                  &::TProofNodeInfo::Dictionary, isa_proxy, 0,
                  sizeof(::TProofNodeInfo) );
      instance.SetNew(&new_TProofNodeInfo);
      instance.SetNewArray(&newArray_TProofNodeInfo);
      instance.SetDelete(&delete_TProofNodeInfo);
      instance.SetDeleteArray(&deleteArray_TProofNodeInfo);
      instance.SetDestructor(&destruct_TProofNodeInfo);
      instance.SetStreamerFunc(&streamer_TProofNodeInfo);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TProofNodeInfo*)
   {
      return GenerateInitInstanceLocal((::TProofNodeInfo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TProofNodeInfo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TProofProgressStatus_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TProofProgressStatus(void *p = 0);
   static void *newArray_TProofProgressStatus(Long_t size, void *p);
   static void delete_TProofProgressStatus(void *p);
   static void deleteArray_TProofProgressStatus(void *p);
   static void destruct_TProofProgressStatus(void *p);
   static void streamer_TProofProgressStatus(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TProofProgressStatus*)
   {
      ::TProofProgressStatus *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TProofProgressStatus >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TProofProgressStatus", ::TProofProgressStatus::Class_Version(), "include/TProofProgressStatus.h", 27,
                  typeid(::TProofProgressStatus), DefineBehavior(ptr, ptr),
                  &::TProofProgressStatus::Dictionary, isa_proxy, 0,
                  sizeof(::TProofProgressStatus) );
      instance.SetNew(&new_TProofProgressStatus);
      instance.SetNewArray(&newArray_TProofProgressStatus);
      instance.SetDelete(&delete_TProofProgressStatus);
      instance.SetDeleteArray(&deleteArray_TProofProgressStatus);
      instance.SetDestructor(&destruct_TProofProgressStatus);
      instance.SetStreamerFunc(&streamer_TProofProgressStatus);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TProofProgressStatus*)
   {
      return GenerateInitInstanceLocal((::TProofProgressStatus*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TProofProgressStatus*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TProofResources_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TProofResources(void *p);
   static void deleteArray_TProofResources(void *p);
   static void destruct_TProofResources(void *p);
   static void streamer_TProofResources(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TProofResources*)
   {
      ::TProofResources *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TProofResources >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TProofResources", ::TProofResources::Class_Version(), "include/TProofResources.h", 36,
                  typeid(::TProofResources), DefineBehavior(ptr, ptr),
                  &::TProofResources::Dictionary, isa_proxy, 0,
                  sizeof(::TProofResources) );
      instance.SetDelete(&delete_TProofResources);
      instance.SetDeleteArray(&deleteArray_TProofResources);
      instance.SetDestructor(&destruct_TProofResources);
      instance.SetStreamerFunc(&streamer_TProofResources);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TProofResources*)
   {
      return GenerateInitInstanceLocal((::TProofResources*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TProofResources*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TProofServLite_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TProofServLite(void *p);
   static void deleteArray_TProofServLite(void *p);
   static void destruct_TProofServLite(void *p);
   static void streamer_TProofServLite(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TProofServLite*)
   {
      ::TProofServLite *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TProofServLite >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TProofServLite", ::TProofServLite::Class_Version(), "include/TProofServLite.h", 32,
                  typeid(::TProofServLite), DefineBehavior(ptr, ptr),
                  &::TProofServLite::Dictionary, isa_proxy, 0,
                  sizeof(::TProofServLite) );
      instance.SetDelete(&delete_TProofServLite);
      instance.SetDeleteArray(&deleteArray_TProofServLite);
      instance.SetDestructor(&destruct_TProofServLite);
      instance.SetStreamerFunc(&streamer_TProofServLite);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TProofServLite*)
   {
      return GenerateInitInstanceLocal((::TProofServLite*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TProofServLite*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TProofSuperMaster_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TProofSuperMaster(void *p);
   static void deleteArray_TProofSuperMaster(void *p);
   static void destruct_TProofSuperMaster(void *p);
   static void streamer_TProofSuperMaster(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TProofSuperMaster*)
   {
      ::TProofSuperMaster *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TProofSuperMaster >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TProofSuperMaster", ::TProofSuperMaster::Class_Version(), "include/TProofSuperMaster.h", 37,
                  typeid(::TProofSuperMaster), DefineBehavior(ptr, ptr),
                  &::TProofSuperMaster::Dictionary, isa_proxy, 0,
                  sizeof(::TProofSuperMaster) );
      instance.SetDelete(&delete_TProofSuperMaster);
      instance.SetDeleteArray(&deleteArray_TProofSuperMaster);
      instance.SetDestructor(&destruct_TProofSuperMaster);
      instance.SetStreamerFunc(&streamer_TProofSuperMaster);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TProofSuperMaster*)
   {
      return GenerateInitInstanceLocal((::TProofSuperMaster*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TProofSuperMaster*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TCondorSlave::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TCondorSlave::Class_Name()
{
   return "TCondorSlave";
}

//______________________________________________________________________________
const char *TCondorSlave::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCondorSlave*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TCondorSlave::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCondorSlave*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TCondorSlave::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCondorSlave*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TCondorSlave::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCondorSlave*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TCondor::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TCondor::Class_Name()
{
   return "TCondor";
}

//______________________________________________________________________________
const char *TCondor::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCondor*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TCondor::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCondor*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TCondor::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCondor*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TCondor::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCondor*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSet::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSet::Class_Name()
{
   return "TDSet";
}

//______________________________________________________________________________
const char *TDSet::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TDSet*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSet::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TDSet*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSet::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TDSet*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSet::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TDSet*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TProof::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TProof::Class_Name()
{
   return "TProof";
}

//______________________________________________________________________________
const char *TProof::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProof*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TProof::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProof*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TProof::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProof*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TProof::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProof*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TProofChain::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TProofChain::Class_Name()
{
   return "TProofChain";
}

//______________________________________________________________________________
const char *TProofChain::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofChain*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TProofChain::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofChain*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TProofChain::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofChain*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TProofChain::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofChain*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSetElement::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSetElement::Class_Name()
{
   return "TDSetElement";
}

//______________________________________________________________________________
const char *TDSetElement::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TDSetElement*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSetElement::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TDSetElement*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSetElement::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TDSetElement*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSetElement::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TDSetElement*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TProofServ::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TProofServ::Class_Name()
{
   return "TProofServ";
}

//______________________________________________________________________________
const char *TProofServ::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofServ*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TProofServ::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofServ*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TProofServ::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofServ*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TProofServ::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofServ*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSetProxy::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSetProxy::Class_Name()
{
   return "TDSetProxy";
}

//______________________________________________________________________________
const char *TDSetProxy::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TDSetProxy*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSetProxy::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TDSetProxy*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSetProxy::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TDSetProxy*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSetProxy::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TDSetProxy*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDataSetManager::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDataSetManager::Class_Name()
{
   return "TDataSetManager";
}

//______________________________________________________________________________
const char *TDataSetManager::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TDataSetManager*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDataSetManager::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TDataSetManager*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDataSetManager::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TDataSetManager*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDataSetManager::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TDataSetManager*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDataSetManagerFile::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDataSetManagerFile::Class_Name()
{
   return "TDataSetManagerFile";
}

//______________________________________________________________________________
const char *TDataSetManagerFile::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TDataSetManagerFile*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDataSetManagerFile::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TDataSetManagerFile*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDataSetManagerFile::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TDataSetManagerFile*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDataSetManagerFile::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TDataSetManagerFile*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TProofDesc::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TProofDesc::Class_Name()
{
   return "TProofDesc";
}

//______________________________________________________________________________
const char *TProofDesc::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofDesc*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TProofDesc::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofDesc*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TProofDesc::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofDesc*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TProofDesc::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofDesc*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TProofLog::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TProofLog::Class_Name()
{
   return "TProofLog";
}

//______________________________________________________________________________
const char *TProofLog::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofLog*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TProofLog::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofLog*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TProofLog::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofLog*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TProofLog::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofLog*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TProofMgr::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TProofMgr::Class_Name()
{
   return "TProofMgr";
}

//______________________________________________________________________________
const char *TProofMgr::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofMgr*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TProofMgr::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofMgr*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TProofMgr::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofMgr*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TProofMgr::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofMgr*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TProofOutputList::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TProofOutputList::Class_Name()
{
   return "TProofOutputList";
}

//______________________________________________________________________________
const char *TProofOutputList::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofOutputList*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TProofOutputList::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofOutputList*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TProofOutputList::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofOutputList*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TProofOutputList::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofOutputList*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TVirtualProofPlayer::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TVirtualProofPlayer::Class_Name()
{
   return "TVirtualProofPlayer";
}

//______________________________________________________________________________
const char *TVirtualProofPlayer::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TVirtualProofPlayer*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TVirtualProofPlayer::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TVirtualProofPlayer*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TVirtualProofPlayer::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TVirtualProofPlayer*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TVirtualProofPlayer::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TVirtualProofPlayer*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSlave::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSlave::Class_Name()
{
   return "TSlave";
}

//______________________________________________________________________________
const char *TSlave::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSlave*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSlave::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSlave*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSlave::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSlave*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSlave::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSlave*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TProofProgressInfo::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TProofProgressInfo::Class_Name()
{
   return "TProofProgressInfo";
}

//______________________________________________________________________________
const char *TProofProgressInfo::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofProgressInfo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TProofProgressInfo::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofProgressInfo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TProofProgressInfo::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofProgressInfo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TProofProgressInfo::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofProgressInfo*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSlaveInfo::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSlaveInfo::Class_Name()
{
   return "TSlaveInfo";
}

//______________________________________________________________________________
const char *TSlaveInfo::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSlaveInfo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSlaveInfo::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSlaveInfo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSlaveInfo::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSlaveInfo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSlaveInfo::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSlaveInfo*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMergerInfo::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMergerInfo::Class_Name()
{
   return "TMergerInfo";
}

//______________________________________________________________________________
const char *TMergerInfo::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMergerInfo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMergerInfo::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMergerInfo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMergerInfo::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMergerInfo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMergerInfo::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMergerInfo*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TProofLite::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TProofLite::Class_Name()
{
   return "TProofLite";
}

//______________________________________________________________________________
const char *TProofLite::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofLite*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TProofLite::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofLite*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TProofLite::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofLite*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TProofLite::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofLite*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSlaveLite::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSlaveLite::Class_Name()
{
   return "TSlaveLite";
}

//______________________________________________________________________________
const char *TSlaveLite::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSlaveLite*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSlaveLite::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSlaveLite*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSlaveLite::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSlaveLite*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSlaveLite::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSlaveLite*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TProofCondor::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TProofCondor::Class_Name()
{
   return "TProofCondor";
}

//______________________________________________________________________________
const char *TProofCondor::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofCondor*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TProofCondor::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofCondor*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TProofCondor::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofCondor*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TProofCondor::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofCondor*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TQueryResultManager::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TQueryResultManager::Class_Name()
{
   return "TQueryResultManager";
}

//______________________________________________________________________________
const char *TQueryResultManager::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TQueryResultManager*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TQueryResultManager::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TQueryResultManager*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TQueryResultManager::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TQueryResultManager*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TQueryResultManager::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TQueryResultManager*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TProofQueryResult::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TProofQueryResult::Class_Name()
{
   return "TProofQueryResult";
}

//______________________________________________________________________________
const char *TProofQueryResult::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofQueryResult*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TProofQueryResult::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofQueryResult*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TProofQueryResult::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofQueryResult*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TProofQueryResult::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofQueryResult*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TProofLogElem::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TProofLogElem::Class_Name()
{
   return "TProofLogElem";
}

//______________________________________________________________________________
const char *TProofLogElem::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofLogElem*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TProofLogElem::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofLogElem*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TProofLogElem::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofLogElem*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TProofLogElem::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofLogElem*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TProofMgrLite::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TProofMgrLite::Class_Name()
{
   return "TProofMgrLite";
}

//______________________________________________________________________________
const char *TProofMgrLite::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofMgrLite*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TProofMgrLite::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofMgrLite*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TProofMgrLite::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofMgrLite*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TProofMgrLite::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofMgrLite*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TProofResourcesStatic::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TProofResourcesStatic::Class_Name()
{
   return "TProofResourcesStatic";
}

//______________________________________________________________________________
const char *TProofResourcesStatic::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofResourcesStatic*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TProofResourcesStatic::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofResourcesStatic*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TProofResourcesStatic::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofResourcesStatic*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TProofResourcesStatic::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofResourcesStatic*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TProofNodeInfo::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TProofNodeInfo::Class_Name()
{
   return "TProofNodeInfo";
}

//______________________________________________________________________________
const char *TProofNodeInfo::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofNodeInfo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TProofNodeInfo::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofNodeInfo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TProofNodeInfo::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofNodeInfo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TProofNodeInfo::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofNodeInfo*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TProofProgressStatus::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TProofProgressStatus::Class_Name()
{
   return "TProofProgressStatus";
}

//______________________________________________________________________________
const char *TProofProgressStatus::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofProgressStatus*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TProofProgressStatus::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofProgressStatus*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TProofProgressStatus::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofProgressStatus*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TProofProgressStatus::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofProgressStatus*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TProofResources::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TProofResources::Class_Name()
{
   return "TProofResources";
}

//______________________________________________________________________________
const char *TProofResources::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofResources*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TProofResources::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofResources*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TProofResources::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofResources*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TProofResources::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofResources*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TProofServLite::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TProofServLite::Class_Name()
{
   return "TProofServLite";
}

//______________________________________________________________________________
const char *TProofServLite::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofServLite*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TProofServLite::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofServLite*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TProofServLite::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofServLite*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TProofServLite::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofServLite*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TProofSuperMaster::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TProofSuperMaster::Class_Name()
{
   return "TProofSuperMaster";
}

//______________________________________________________________________________
const char *TProofSuperMaster::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofSuperMaster*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TProofSuperMaster::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofSuperMaster*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TProofSuperMaster::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofSuperMaster*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TProofSuperMaster::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofSuperMaster*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TDSet::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TDSet.
      TClass *R__cl = ::TDSet::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsTree", &fIsTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEntryList", &fEntryList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fProofChain", &fProofChain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDir", &fDir);
      R__insp.InspectMember(fDir, "fDir.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fType", &fType);
      R__insp.InspectMember(fType, "fType.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fObjName", &fObjName);
      R__insp.InspectMember(fObjName, "fObjName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fElements", &fElements);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIterator", &fIterator);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCurrent", &fCurrent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSrvMaps", &fSrvMaps);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSrvMapsIter", &fSrvMapsIter);
      TNamed::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TDSet(void *p) {
      return  p ? new(p) ::TDSet : new ::TDSet;
   }
   static void *newArray_TDSet(Long_t nElements, void *p) {
      return p ? new(p) ::TDSet[nElements] : new ::TDSet[nElements];
   }
   // Wrapper around operator delete
   static void delete_TDSet(void *p) {
      delete ((::TDSet*)p);
   }
   static void deleteArray_TDSet(void *p) {
      delete [] ((::TDSet*)p);
   }
   static void destruct_TDSet(void *p) {
      typedef ::TDSet current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TDSet(TBuffer &buf, void *obj) {
      ((::TDSet*)obj)->::TDSet::Streamer(buf);
   }
} // end of namespace ROOT for class ::TDSet

//______________________________________________________________________________
void TDSetElement::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TDSetElement.
      TClass *R__cl = ::TDSetElement::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDirectory", &fDirectory);
      R__insp.InspectMember(fDirectory, "fDirectory.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFirst", &fFirst);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNum", &fNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMsd", &fMsd);
      R__insp.InspectMember(fMsd, "fMsd.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTDSetOffset", &fTDSetOffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEntryList", &fEntryList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fValid", &fValid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEntries", &fEntries);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFriends", &fFriends);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDataSet", &fDataSet);
      R__insp.InspectMember(fDataSet, "fDataSet.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fAssocObjList", &fAssocObjList);
      TNamed::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TDSetElement(void *p) {
      return  p ? new(p) ::TDSetElement : new ::TDSetElement;
   }
   static void *newArray_TDSetElement(Long_t nElements, void *p) {
      return p ? new(p) ::TDSetElement[nElements] : new ::TDSetElement[nElements];
   }
   // Wrapper around operator delete
   static void delete_TDSetElement(void *p) {
      delete ((::TDSetElement*)p);
   }
   static void deleteArray_TDSetElement(void *p) {
      delete [] ((::TDSetElement*)p);
   }
   static void destruct_TDSetElement(void *p) {
      typedef ::TDSetElement current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TDSetElement(TBuffer &buf, void *obj) {
      ((::TDSetElement*)obj)->::TDSetElement::Streamer(buf);
   }
} // end of namespace ROOT for class ::TDSetElement

//______________________________________________________________________________
void TProofChain::Streamer(TBuffer &R__b)
{
   // Stream an object of class TProofChain.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TProofChain::Class(),this);
   } else {
      R__b.WriteClassBuffer(TProofChain::Class(),this);
   }
}

//______________________________________________________________________________
void TProofChain::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TProofChain.
      TClass *R__cl = ::TProofChain::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChain", &fChain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSet", &fSet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDrawFeedback", &fDrawFeedback);
      TChain::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TProofChain(void *p) {
      return  p ? new(p) ::TProofChain : new ::TProofChain;
   }
   static void *newArray_TProofChain(Long_t nElements, void *p) {
      return p ? new(p) ::TProofChain[nElements] : new ::TProofChain[nElements];
   }
   // Wrapper around operator delete
   static void delete_TProofChain(void *p) {
      delete ((::TProofChain*)p);
   }
   static void deleteArray_TProofChain(void *p) {
      delete [] ((::TProofChain*)p);
   }
   static void destruct_TProofChain(void *p) {
      typedef ::TProofChain current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around the directory auto add.
   static void directoryAutoAdd_TProofChain(void *p, TDirectory *dir) {
      ((::TProofChain*)p)->DirectoryAutoAdd(dir);
   }
} // end of namespace ROOT for class ::TProofChain

//______________________________________________________________________________
void TProofMgr::Streamer(TBuffer &R__b)
{
   // Stream an object of class TProofMgr.

   TNamed::Streamer(R__b);
}

//______________________________________________________________________________
void TProofMgr::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TProofMgr.
      TClass *R__cl = ::TProofMgr::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRemoteProtocol", &fRemoteProtocol);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fServType", &fServType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSessions", &fSessions);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUrl", &fUrl);
      R__insp.InspectMember(fUrl, "fUrl.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIntHandler", &fIntHandler);
      TNamed::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TProofMgr(void *p) {
      delete ((::TProofMgr*)p);
   }
   static void deleteArray_TProofMgr(void *p) {
      delete [] ((::TProofMgr*)p);
   }
   static void destruct_TProofMgr(void *p) {
      typedef ::TProofMgr current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TProofMgr(TBuffer &buf, void *obj) {
      ((::TProofMgr*)obj)->::TProofMgr::Streamer(buf);
   }
} // end of namespace ROOT for class ::TProofMgr

//______________________________________________________________________________
void TProofMgrLite::Streamer(TBuffer &R__b)
{
   // Stream an object of class TProofMgrLite.

   TProofMgr::Streamer(R__b);
}

//______________________________________________________________________________
void TProofMgrLite::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TProofMgrLite.
      TClass *R__cl = ::TProofMgrLite::IsA();
      if (R__cl || R__insp.IsA()) { }
      TProofMgr::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TProofMgrLite(void *p) {
      delete ((::TProofMgrLite*)p);
   }
   static void deleteArray_TProofMgrLite(void *p) {
      delete [] ((::TProofMgrLite*)p);
   }
   static void destruct_TProofMgrLite(void *p) {
      typedef ::TProofMgrLite current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TProofMgrLite(TBuffer &buf, void *obj) {
      ((::TProofMgrLite*)obj)->::TProofMgrLite::Streamer(buf);
   }
} // end of namespace ROOT for class ::TProofMgrLite

//______________________________________________________________________________
void TProofDesc::Streamer(TBuffer &R__b)
{
   // Stream an object of class TProofDesc.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> fLocalId;
      R__b >> fStatus;
      R__b >> fProof;
      R__b >> fRemoteId;
      fUrl.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, TProofDesc::IsA());
   } else {
      R__c = R__b.WriteVersion(TProofDesc::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << fLocalId;
      R__b << fStatus;
      R__b << fProof;
      R__b << fRemoteId;
      fUrl.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TProofDesc::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TProofDesc.
      TClass *R__cl = ::TProofDesc::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLocalId", &fLocalId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStatus", &fStatus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fProof", &fProof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRemoteId", &fRemoteId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUrl", &fUrl);
      R__insp.InspectMember(fUrl, "fUrl.");
      TNamed::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TProofDesc(void *p) {
      return  p ? new(p) ::TProofDesc : new ::TProofDesc;
   }
   static void *newArray_TProofDesc(Long_t nElements, void *p) {
      return p ? new(p) ::TProofDesc[nElements] : new ::TProofDesc[nElements];
   }
   // Wrapper around operator delete
   static void delete_TProofDesc(void *p) {
      delete ((::TProofDesc*)p);
   }
   static void deleteArray_TProofDesc(void *p) {
      delete [] ((::TProofDesc*)p);
   }
   static void destruct_TProofDesc(void *p) {
      typedef ::TProofDesc current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TProofDesc(TBuffer &buf, void *obj) {
      ((::TProofDesc*)obj)->::TProofDesc::Streamer(buf);
   }
} // end of namespace ROOT for class ::TProofDesc

//______________________________________________________________________________
void TProof::Streamer(TBuffer &R__b)
{
   // Stream an object of class TProof.

   TNamed::Streamer(R__b);
   TQObject::Streamer(R__b);
}

//______________________________________________________________________________
void TProof::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TProof.
      TClass *R__cl = ::TProof::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fValid", &fValid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaster", &fMaster);
      R__insp.InspectMember(fMaster, "fMaster.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWorkDir", &fWorkDir);
      R__insp.InspectMember(fWorkDir, "fWorkDir.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGroup", &fGroup);
      R__insp.InspectMember(fGroup, "fGroup.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLogLevel", &fLogLevel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStatus", &fStatus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCheckFileStatus", &fCheckFileStatus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRecvMessages", &fRecvMessages);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSlaveInfo", &fSlaveInfo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSendGroupView", &fSendGroupView);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fActiveSlaves", &fActiveSlaves);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fInactiveSlaves", &fInactiveSlaves);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fUniqueSlaves", &fUniqueSlaves);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fAllUniqueSlaves", &fAllUniqueSlaves);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNonUniqueMasters", &fNonUniqueMasters);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fActiveMonitor", &fActiveMonitor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fUniqueMonitor", &fUniqueMonitor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fAllUniqueMonitor", &fAllUniqueMonitor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCurrentMonitor", &fCurrentMonitor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBytesRead", &fBytesRead);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRealTime", &fRealTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCpuTime", &fCpuTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIntHandler", &fIntHandler);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fProgressDialog", &fProgressDialog);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fProgressDialogStarted", &fProgressDialogStarted);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPlayer", &fPlayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFeedback", &fFeedback);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChains", &fChains);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFileMap", (void*)&fFileMap);
      R__insp.InspectMember("TProof::FileMap_t", (void*)&fFileMap, "fFileMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDSet", &fDSet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNotIdle", &fNotIdle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSync", &fSync);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunStatus", &fRunStatus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsWaiting", &fIsWaiting);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRedirLog", &fRedirLog);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLogFileName", &fLogFileName);
      R__insp.InspectMember(fLogFileName, "fLogFileName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLogFileW", &fLogFileW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLogFileR", &fLogFileR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLogToWindowOnly", &fLogToWindowOnly);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMergePrg", (void*)&fMergePrg);
      R__insp.InspectMember("TProofMergePrg", (void*)&fMergePrg, "fMergePrg.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fWaitingSlaves", &fWaitingSlaves);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fQueries", &fQueries);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOtherQueries", &fOtherQueries);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDrawQueries", &fDrawQueries);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxDrawQueries", &fMaxDrawQueries);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSeqNum", &fSeqNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSessionID", &fSessionID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEndMaster", &fEndMaster);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPackageDir", &fPackageDir);
      R__insp.InspectMember(fPackageDir, "fPackageDir.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGlobalPackageDirList", &fGlobalPackageDirList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPackageLock", &fPackageLock);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEnabledPackagesOnClient", &fEnabledPackagesOnClient);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fInputData", &fInputData);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInputDataFile", &fInputDataFile);
      R__insp.InspectMember(fInputDataFile, "fInputDataFile.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOutputList", &fOutputList);
      R__insp.InspectMember(fOutputList, "fOutputList.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPrintProgress", &fPrintProgress);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCloseMutex", &fCloseMutex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLoadedMacros", &fLoadedMacros);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMergersSet", &fMergersSet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMergersCount", &fMergersCount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWorkersToMerge", &fWorkersToMerge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLastAssignedMerger", &fLastAssignedMerger);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMergers", &fMergers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFinalizationRunning", &fFinalizationRunning);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRedirectNext", &fRedirectNext);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMasterServ", &fMasterServ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUrl", &fUrl);
      R__insp.InspectMember(fUrl, "fUrl.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fConfFile", &fConfFile);
      R__insp.InspectMember(fConfFile, "fConfFile.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fConfDir", &fConfDir);
      R__insp.InspectMember(fConfDir, "fConfDir.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fImage", &fImage);
      R__insp.InspectMember(fImage, "fImage.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fProtocol", &fProtocol);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSlaves", &fSlaves);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBadSlaves", &fBadSlaves);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fAllMonitor", &fAllMonitor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDataReady", &fDataReady);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBytesReady", &fBytesReady);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTotalBytes", &fTotalBytes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fAvailablePackages", &fAvailablePackages);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEnabledPackages", &fEnabledPackages);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRunningDSets", &fRunningDSets);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCollectTimeout", &fCollectTimeout);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDataPoolUrl", &fDataPoolUrl);
      R__insp.InspectMember(fDataPoolUrl, "fDataPoolUrl.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fServType", &fServType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fManager", &fManager);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQueryMode", &fQueryMode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDynamicStartup", &fDynamicStartup);
      TNamed::ShowMembers(R__insp);
      TQObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TProof(void *p) {
      delete ((::TProof*)p);
   }
   static void deleteArray_TProof(void *p) {
      delete [] ((::TProof*)p);
   }
   static void destruct_TProof(void *p) {
      typedef ::TProof current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TProof(TBuffer &buf, void *obj) {
      ((::TProof*)obj)->::TProof::Streamer(buf);
   }
} // end of namespace ROOT for class ::TProof

//______________________________________________________________________________
void TProofCondor::Streamer(TBuffer &R__b)
{
   // Stream an object of class TProofCondor.

   TProof::Streamer(R__b);
}

//______________________________________________________________________________
void TProofCondor::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TProofCondor.
      TClass *R__cl = ::TProofCondor::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCondor", &fCondor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTimer", &fTimer);
      TProof::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TProofCondor(void *p) {
      delete ((::TProofCondor*)p);
   }
   static void deleteArray_TProofCondor(void *p) {
      delete [] ((::TProofCondor*)p);
   }
   static void destruct_TProofCondor(void *p) {
      typedef ::TProofCondor current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TProofCondor(TBuffer &buf, void *obj) {
      ((::TProofCondor*)obj)->::TProofCondor::Streamer(buf);
   }
} // end of namespace ROOT for class ::TProofCondor

//______________________________________________________________________________
void TProofLite::Streamer(TBuffer &R__b)
{
   // Stream an object of class TProofLite.

   TProof::Streamer(R__b);
}

//______________________________________________________________________________
void TProofLite::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TProofLite.
      TClass *R__cl = ::TProofLite::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNWorkers", &fNWorkers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSandbox", &fSandbox);
      R__insp.InspectMember(fSandbox, "fSandbox.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCacheDir", &fCacheDir);
      R__insp.InspectMember(fCacheDir, "fCacheDir.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQueryDir", &fQueryDir);
      R__insp.InspectMember(fQueryDir, "fQueryDir.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDataSetDir", &fDataSetDir);
      R__insp.InspectMember(fDataSetDir, "fDataSetDir.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSockPath", &fSockPath);
      R__insp.InspectMember(fSockPath, "fSockPath.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fServSock", &fServSock);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fForkStartup", &fForkStartup);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVarExp", &fVarExp);
      R__insp.InspectMember(fVarExp, "fVarExp.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSelection", &fSelection);
      R__insp.InspectMember(fSelection, "fSelection.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCacheLock", &fCacheLock);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fQueryLock", &fQueryLock);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fQMgr", &fQMgr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDataSetManager", &fDataSetManager);
      TProof::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TProofLite(void *p) {
      delete ((::TProofLite*)p);
   }
   static void deleteArray_TProofLite(void *p) {
      delete [] ((::TProofLite*)p);
   }
   static void destruct_TProofLite(void *p) {
      typedef ::TProofLite current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TProofLite(TBuffer &buf, void *obj) {
      ((::TProofLite*)obj)->::TProofLite::Streamer(buf);
   }
} // end of namespace ROOT for class ::TProofLite

//______________________________________________________________________________
void TProofSuperMaster::Streamer(TBuffer &R__b)
{
   // Stream an object of class TProofSuperMaster.

   TProof::Streamer(R__b);
}

//______________________________________________________________________________
void TProofSuperMaster::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TProofSuperMaster.
      TClass *R__cl = ::TProofSuperMaster::IsA();
      if (R__cl || R__insp.IsA()) { }
      TProof::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TProofSuperMaster(void *p) {
      delete ((::TProofSuperMaster*)p);
   }
   static void deleteArray_TProofSuperMaster(void *p) {
      delete [] ((::TProofSuperMaster*)p);
   }
   static void destruct_TProofSuperMaster(void *p) {
      typedef ::TProofSuperMaster current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TProofSuperMaster(TBuffer &buf, void *obj) {
      ((::TProofSuperMaster*)obj)->::TProofSuperMaster::Streamer(buf);
   }
} // end of namespace ROOT for class ::TProofSuperMaster

//______________________________________________________________________________
void TSlaveInfo::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSlaveInfo.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSlaveInfo::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSlaveInfo::Class(),this);
   }
}

//______________________________________________________________________________
void TSlaveInfo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSlaveInfo.
      TClass *R__cl = ::TSlaveInfo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOrdinal", &fOrdinal);
      R__insp.InspectMember(fOrdinal, "fOrdinal.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHostName", &fHostName);
      R__insp.InspectMember(fHostName, "fHostName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMsd", &fMsd);
      R__insp.InspectMember(fMsd, "fMsd.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDataDir", &fDataDir);
      R__insp.InspectMember(fDataDir, "fDataDir.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPerfIndex", &fPerfIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSysInfo", &fSysInfo);
      R__insp.InspectMember(fSysInfo, "fSysInfo.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStatus", &fStatus);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSlaveInfo(void *p) {
      return  p ? new(p) ::TSlaveInfo : new ::TSlaveInfo;
   }
   static void *newArray_TSlaveInfo(Long_t nElements, void *p) {
      return p ? new(p) ::TSlaveInfo[nElements] : new ::TSlaveInfo[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSlaveInfo(void *p) {
      delete ((::TSlaveInfo*)p);
   }
   static void deleteArray_TSlaveInfo(void *p) {
      delete [] ((::TSlaveInfo*)p);
   }
   static void destruct_TSlaveInfo(void *p) {
      typedef ::TSlaveInfo current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSlaveInfo

//______________________________________________________________________________
void TProofServ::Streamer(TBuffer &R__b)
{
   // Stream an object of class TProofServ.

   TApplication::Streamer(R__b);
}

//______________________________________________________________________________
void TProofServ::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TProofServ.
      TClass *R__cl = ::TProofServ::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fService", &fService);
      R__insp.InspectMember(fService, "fService.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUser", &fUser);
      R__insp.InspectMember(fUser, "fUser.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGroup", &fGroup);
      R__insp.InspectMember(fGroup, "fGroup.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fConfDir", &fConfDir);
      R__insp.InspectMember(fConfDir, "fConfDir.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fConfFile", &fConfFile);
      R__insp.InspectMember(fConfFile, "fConfFile.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWorkDir", &fWorkDir);
      R__insp.InspectMember(fWorkDir, "fWorkDir.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fImage", &fImage);
      R__insp.InspectMember(fImage, "fImage.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSessionTag", &fSessionTag);
      R__insp.InspectMember(fSessionTag, "fSessionTag.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTopSessionTag", &fTopSessionTag);
      R__insp.InspectMember(fTopSessionTag, "fTopSessionTag.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSessionDir", &fSessionDir);
      R__insp.InspectMember(fSessionDir, "fSessionDir.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPackageDir", &fPackageDir);
      R__insp.InspectMember(fPackageDir, "fPackageDir.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGlobalPackageDirList", &fGlobalPackageDirList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCacheDir", &fCacheDir);
      R__insp.InspectMember(fCacheDir, "fCacheDir.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQueryDir", &fQueryDir);
      R__insp.InspectMember(fQueryDir, "fQueryDir.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDataSetDir", &fDataSetDir);
      R__insp.InspectMember(fDataSetDir, "fDataSetDir.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDataDir", &fDataDir);
      R__insp.InspectMember(fDataDir, "fDataDir.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAdminPath", &fAdminPath);
      R__insp.InspectMember(fAdminPath, "fAdminPath.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPackageLock", &fPackageLock);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCacheLock", &fCacheLock);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fQueryLock", &fQueryLock);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fArchivePath", &fArchivePath);
      R__insp.InspectMember(fArchivePath, "fArchivePath.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSocket", &fSocket);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fProof", &fProof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPlayer", &fPlayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLogFile", &fLogFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLogFileDes", &fLogFileDes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLogFileMaxSize", &fLogFileMaxSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEnabledPackages", &fEnabledPackages);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fProtocol", &fProtocol);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOrdinal", &fOrdinal);
      R__insp.InspectMember(fOrdinal, "fOrdinal.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGroupId", &fGroupId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGroupSize", &fGroupSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLogLevel", &fLogLevel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNcmd", &fNcmd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGroupPriority", &fGroupPriority);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEndMaster", &fEndMaster);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMasterServ", &fMasterServ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInterrupt", &fInterrupt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRealTime", &fRealTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCpuTime", &fCpuTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLatency", &fLatency);
      R__insp.InspectMember(fLatency, "fLatency.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCompute", &fCompute);
      R__insp.InspectMember(fCompute, "fCompute.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQuerySeqNum", &fQuerySeqNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTotSessions", &fTotSessions);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fActSessions", &fActSessions);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEffSessions", &fEffSessions);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fInputHandler", &fInputHandler);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fQMgr", &fQMgr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fWaitingQueries", &fWaitingQueries);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIdle", &fIdle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fQMtx", &fQMtx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fQueuedMsg", &fQueuedMsg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPrefix", &fPrefix);
      R__insp.InspectMember(fPrefix, "fPrefix.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRealTimeLog", &fRealTimeLog);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fShutdownTimer", &fShutdownTimer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fReaperTimer", &fReaperTimer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIdleTOTimer", &fIdleTOTimer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInflateFactor", &fInflateFactor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCompressMsg", &fCompressMsg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDataSetManager", &fDataSetManager);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSendLogToMaster", &fSendLogToMaster);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMergingSocket", &fMergingSocket);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMergingMonitor", &fMergingMonitor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMergedWorkers", &fMergedWorkers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxQueries", &fMaxQueries);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxBoxSize", &fMaxBoxSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHWMBoxSize", &fHWMBoxSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMsgSizeHWM", &fMsgSizeHWM);
      TApplication::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TProofServ(void *p) {
      delete ((::TProofServ*)p);
   }
   static void deleteArray_TProofServ(void *p) {
      delete [] ((::TProofServ*)p);
   }
   static void destruct_TProofServ(void *p) {
      typedef ::TProofServ current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TProofServ(TBuffer &buf, void *obj) {
      ((::TProofServ*)obj)->::TProofServ::Streamer(buf);
   }
} // end of namespace ROOT for class ::TProofServ

//______________________________________________________________________________
void TProofServLite::Streamer(TBuffer &R__b)
{
   // Stream an object of class TProofServLite.

   TProofServ::Streamer(R__b);
}

//______________________________________________________________________________
void TProofServLite::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TProofServLite.
      TClass *R__cl = ::TProofServLite::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fInterruptHandler", &fInterruptHandler);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSockPath", &fSockPath);
      R__insp.InspectMember(fSockPath, "fSockPath.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTerminated", &fTerminated);
      TProofServ::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TProofServLite(void *p) {
      delete ((::TProofServLite*)p);
   }
   static void deleteArray_TProofServLite(void *p) {
      delete [] ((::TProofServLite*)p);
   }
   static void destruct_TProofServLite(void *p) {
      typedef ::TProofServLite current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TProofServLite(TBuffer &buf, void *obj) {
      ((::TProofServLite*)obj)->::TProofServLite::Streamer(buf);
   }
} // end of namespace ROOT for class ::TProofServLite

namespace ROOT {
   // Wrappers around operator new
   static void *new_TProofDebug(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TProofDebug : new ::TProofDebug;
   }
   static void *newArray_TProofDebug(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TProofDebug[nElements] : new ::TProofDebug[nElements];
   }
   // Wrapper around operator delete
   static void delete_TProofDebug(void *p) {
      delete ((::TProofDebug*)p);
   }
   static void deleteArray_TProofDebug(void *p) {
      delete [] ((::TProofDebug*)p);
   }
   static void destruct_TProofDebug(void *p) {
      typedef ::TProofDebug current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TProofDebug

//______________________________________________________________________________
void TProofLog::Streamer(TBuffer &R__b)
{
   // Stream an object of class TProofLog.

   TNamed::Streamer(R__b);
   TQObject::Streamer(R__b);
}

//______________________________________________________________________________
void TProofLog::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TProofLog.
      TClass *R__cl = ::TProofLog::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMgr", &fMgr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFILE", &fFILE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fElem", &fElem);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStartTime", &fStartTime);
      R__insp.InspectMember(fStartTime, "fStartTime.");
      TNamed::ShowMembers(R__insp);
      TQObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TProofLog(void *p) {
      delete ((::TProofLog*)p);
   }
   static void deleteArray_TProofLog(void *p) {
      delete [] ((::TProofLog*)p);
   }
   static void destruct_TProofLog(void *p) {
      typedef ::TProofLog current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TProofLog(TBuffer &buf, void *obj) {
      ((::TProofLog*)obj)->::TProofLog::Streamer(buf);
   }
} // end of namespace ROOT for class ::TProofLog

//______________________________________________________________________________
void TProofLogElem::Streamer(TBuffer &R__b)
{
   // Stream an object of class TProofLogElem.

   TNamed::Streamer(R__b);
}

//______________________________________________________________________________
void TProofLogElem::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TProofLogElem.
      TClass *R__cl = ::TProofLogElem::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLogger", &fLogger);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMacro", &fMacro);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSize", &fSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFrom", &fFrom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTo", &fTo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRole", &fRole);
      R__insp.InspectMember(fRole, "fRole.");
      TNamed::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TProofLogElem(void *p) {
      delete ((::TProofLogElem*)p);
   }
   static void deleteArray_TProofLogElem(void *p) {
      delete [] ((::TProofLogElem*)p);
   }
   static void destruct_TProofLogElem(void *p) {
      typedef ::TProofLogElem current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TProofLogElem(TBuffer &buf, void *obj) {
      ((::TProofLogElem*)obj)->::TProofLogElem::Streamer(buf);
   }
} // end of namespace ROOT for class ::TProofLogElem

//______________________________________________________________________________
void TSlave::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSlave.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void TSlave::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSlave.
      TClass *R__cl = ::TSlave::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fName", &fName);
      R__insp.InspectMember(fName, "fName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fImage", &fImage);
      R__insp.InspectMember(fImage, "fImage.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fProofWorkDir", &fProofWorkDir);
      R__insp.InspectMember(fProofWorkDir, "fProofWorkDir.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWorkDir", &fWorkDir);
      R__insp.InspectMember(fWorkDir, "fWorkDir.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUser", &fUser);
      R__insp.InspectMember(fUser, "fUser.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGroup", &fGroup);
      R__insp.InspectMember(fGroup, "fGroup.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPort", &fPort);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOrdinal", &fOrdinal);
      R__insp.InspectMember(fOrdinal, "fOrdinal.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPerfIdx", &fPerfIdx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fProtocol", &fProtocol);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSocket", &fSocket);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fProof", &fProof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fInput", &fInput);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBytesRead", &fBytesRead);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRealTime", &fRealTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCpuTime", &fCpuTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSlaveType", &fSlaveType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStatus", &fStatus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fParallel", &fParallel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMsd", &fMsd);
      R__insp.InspectMember(fMsd, "fMsd.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSessionTag", &fSessionTag);
      R__insp.InspectMember(fSessionTag, "fSessionTag.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fROOTVers", &fROOTVers);
      R__insp.InspectMember(fROOTVers, "fROOTVers.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fArchComp", &fArchComp);
      R__insp.InspectMember(fArchComp, "fArchComp.");
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TSlave(void *p) {
      delete ((::TSlave*)p);
   }
   static void deleteArray_TSlave(void *p) {
      delete [] ((::TSlave*)p);
   }
   static void destruct_TSlave(void *p) {
      typedef ::TSlave current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TSlave(TBuffer &buf, void *obj) {
      ((::TSlave*)obj)->::TSlave::Streamer(buf);
   }
} // end of namespace ROOT for class ::TSlave

//______________________________________________________________________________
void TSlaveLite::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSlaveLite.

   TSlave::Streamer(R__b);
}

//______________________________________________________________________________
void TSlaveLite::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSlaveLite.
      TClass *R__cl = ::TSlaveLite::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fValid", &fValid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIntHandler", &fIntHandler);
      TSlave::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TSlaveLite(void *p) {
      delete ((::TSlaveLite*)p);
   }
   static void deleteArray_TSlaveLite(void *p) {
      delete [] ((::TSlaveLite*)p);
   }
   static void destruct_TSlaveLite(void *p) {
      typedef ::TSlaveLite current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TSlaveLite(TBuffer &buf, void *obj) {
      ((::TSlaveLite*)obj)->::TSlaveLite::Streamer(buf);
   }
} // end of namespace ROOT for class ::TSlaveLite

//______________________________________________________________________________
void TVirtualProofPlayer::Streamer(TBuffer &R__b)
{
   // Stream an object of class TVirtualProofPlayer.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TVirtualProofPlayer::Class(),this);
   } else {
      R__b.WriteClassBuffer(TVirtualProofPlayer::Class(),this);
   }
}

//______________________________________________________________________________
void TVirtualProofPlayer::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TVirtualProofPlayer.
      TClass *R__cl = ::TVirtualProofPlayer::IsA();
      if (R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp);
      TQObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TVirtualProofPlayer(void *p) {
      delete ((::TVirtualProofPlayer*)p);
   }
   static void deleteArray_TVirtualProofPlayer(void *p) {
      delete [] ((::TVirtualProofPlayer*)p);
   }
   static void destruct_TVirtualProofPlayer(void *p) {
      typedef ::TVirtualProofPlayer current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TVirtualProofPlayer

//______________________________________________________________________________
void TProofQueryResult::Streamer(TBuffer &R__b)
{
   // Stream an object of class TProofQueryResult.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TProofQueryResult::Class(),this);
   } else {
      R__b.WriteClassBuffer(TProofQueryResult::Class(),this);
   }
}

//______________________________________________________________________________
void TProofQueryResult::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TProofQueryResult.
      TClass *R__cl = ::TProofQueryResult::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStartLog", &fStartLog);
      TQueryResult::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TProofQueryResult(void *p) {
      return  p ? new(p) ::TProofQueryResult : new ::TProofQueryResult;
   }
   static void *newArray_TProofQueryResult(Long_t nElements, void *p) {
      return p ? new(p) ::TProofQueryResult[nElements] : new ::TProofQueryResult[nElements];
   }
   // Wrapper around operator delete
   static void delete_TProofQueryResult(void *p) {
      delete ((::TProofQueryResult*)p);
   }
   static void deleteArray_TProofQueryResult(void *p) {
      delete [] ((::TProofQueryResult*)p);
   }
   static void destruct_TProofQueryResult(void *p) {
      typedef ::TProofQueryResult current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TProofQueryResult

//______________________________________________________________________________
void TQueryResultManager::Streamer(TBuffer &R__b)
{
   // Stream an object of class TQueryResultManager.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TQueryResultManager::Class(),this);
   } else {
      R__b.WriteClassBuffer(TQueryResultManager::Class(),this);
   }
}

//______________________________________________________________________________
void TQueryResultManager::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TQueryResultManager.
      TClass *R__cl = ::TQueryResultManager::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQueryDir", &fQueryDir);
      R__insp.InspectMember(fQueryDir, "fQueryDir.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSessionTag", &fSessionTag);
      R__insp.InspectMember(fSessionTag, "fSessionTag.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSessionDir", &fSessionDir);
      R__insp.InspectMember(fSessionDir, "fSessionDir.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSeqNum", &fSeqNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDrawQueries", &fDrawQueries);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fKeptQueries", &fKeptQueries);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fQueries", &fQueries);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPreviousQueries", &fPreviousQueries);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLock", &fLock);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLogFile", &fLogFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCompute", &fCompute);
      R__insp.InspectMember(fCompute, "fCompute.");
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TQueryResultManager(void *p) {
      delete ((::TQueryResultManager*)p);
   }
   static void deleteArray_TQueryResultManager(void *p) {
      delete [] ((::TQueryResultManager*)p);
   }
   static void destruct_TQueryResultManager(void *p) {
      typedef ::TQueryResultManager current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TQueryResultManager

//______________________________________________________________________________
void TDSetProxy::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSetProxy.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TDSetProxy::Class(),this);
   } else {
      R__b.WriteClassBuffer(TDSetProxy::Class(),this);
   }
}

//______________________________________________________________________________
void TDSetProxy::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TDSetProxy.
      TClass *R__cl = ::TDSetProxy::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fServ", &fServ);
      TDSet::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TDSetProxy(void *p) {
      return  p ? new(p) ::TDSetProxy : new ::TDSetProxy;
   }
   static void *newArray_TDSetProxy(Long_t nElements, void *p) {
      return p ? new(p) ::TDSetProxy[nElements] : new ::TDSetProxy[nElements];
   }
   // Wrapper around operator delete
   static void delete_TDSetProxy(void *p) {
      delete ((::TDSetProxy*)p);
   }
   static void deleteArray_TDSetProxy(void *p) {
      delete [] ((::TDSetProxy*)p);
   }
   static void destruct_TDSetProxy(void *p) {
      typedef ::TDSetProxy current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSetProxy

//______________________________________________________________________________
void TCondor::Streamer(TBuffer &R__b)
{
   // Stream an object of class TCondor.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TCondor::Class(),this);
   } else {
      R__b.WriteClassBuffer(TCondor::Class(),this);
   }
}

//______________________________________________________________________________
void TCondor::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TCondor.
      TClass *R__cl = ::TCondor::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fValid", &fValid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPool", &fPool);
      R__insp.InspectMember(fPool, "fPool.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fState", &fState);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fClaims", &fClaims);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TCondor(void *p) {
      return  p ? new(p) ::TCondor : new ::TCondor;
   }
   static void *newArray_TCondor(Long_t nElements, void *p) {
      return p ? new(p) ::TCondor[nElements] : new ::TCondor[nElements];
   }
   // Wrapper around operator delete
   static void delete_TCondor(void *p) {
      delete ((::TCondor*)p);
   }
   static void deleteArray_TCondor(void *p) {
      delete [] ((::TCondor*)p);
   }
   static void destruct_TCondor(void *p) {
      typedef ::TCondor current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TCondor

//______________________________________________________________________________
void TCondorSlave::Streamer(TBuffer &R__b)
{
   // Stream an object of class TCondorSlave.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TCondorSlave::Class(),this);
   } else {
      R__b.WriteClassBuffer(TCondorSlave::Class(),this);
   }
}

//______________________________________________________________________________
void TCondorSlave::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TCondorSlave.
      TClass *R__cl = ::TCondorSlave::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHostname", &fHostname);
      R__insp.InspectMember(fHostname, "fHostname.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPort", &fPort);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPerfIdx", &fPerfIdx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fImage", &fImage);
      R__insp.InspectMember(fImage, "fImage.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fClaimID", &fClaimID);
      R__insp.InspectMember(fClaimID, "fClaimID.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOrdinal", &fOrdinal);
      R__insp.InspectMember(fOrdinal, "fOrdinal.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWorkDir", &fWorkDir);
      R__insp.InspectMember(fWorkDir, "fWorkDir.");
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TCondorSlave(void *p) {
      return  p ? new(p) ::TCondorSlave : new ::TCondorSlave;
   }
   static void *newArray_TCondorSlave(Long_t nElements, void *p) {
      return p ? new(p) ::TCondorSlave[nElements] : new ::TCondorSlave[nElements];
   }
   // Wrapper around operator delete
   static void delete_TCondorSlave(void *p) {
      delete ((::TCondorSlave*)p);
   }
   static void deleteArray_TCondorSlave(void *p) {
      delete [] ((::TCondorSlave*)p);
   }
   static void destruct_TCondorSlave(void *p) {
      typedef ::TCondorSlave current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TCondorSlave

//______________________________________________________________________________
void TProofNodeInfo::Streamer(TBuffer &R__b)
{
   // Stream an object of class TProofNodeInfo.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      void *ptr_fNodeType = (void*)&fNodeType;
      R__b >> *reinterpret_cast<Int_t*>(ptr_fNodeType);
      fNodeName.Streamer(R__b);
      fWorkDir.Streamer(R__b);
      fOrdinal.Streamer(R__b);
      fImage.Streamer(R__b);
      fId.Streamer(R__b);
      fConfig.Streamer(R__b);
      fMsd.Streamer(R__b);
      R__b >> fPort;
      R__b >> fPerfIndex;
      R__b.CheckByteCount(R__s, R__c, TProofNodeInfo::IsA());
   } else {
      R__c = R__b.WriteVersion(TProofNodeInfo::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << (Int_t)fNodeType;
      fNodeName.Streamer(R__b);
      fWorkDir.Streamer(R__b);
      fOrdinal.Streamer(R__b);
      fImage.Streamer(R__b);
      fId.Streamer(R__b);
      fConfig.Streamer(R__b);
      fMsd.Streamer(R__b);
      R__b << fPort;
      R__b << fPerfIndex;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TProofNodeInfo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TProofNodeInfo.
      TClass *R__cl = ::TProofNodeInfo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNodeType", &fNodeType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNodeName", &fNodeName);
      R__insp.InspectMember(fNodeName, "fNodeName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWorkDir", &fWorkDir);
      R__insp.InspectMember(fWorkDir, "fWorkDir.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOrdinal", &fOrdinal);
      R__insp.InspectMember(fOrdinal, "fOrdinal.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fImage", &fImage);
      R__insp.InspectMember(fImage, "fImage.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fId", &fId);
      R__insp.InspectMember(fId, "fId.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fConfig", &fConfig);
      R__insp.InspectMember(fConfig, "fConfig.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMsd", &fMsd);
      R__insp.InspectMember(fMsd, "fMsd.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPort", &fPort);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPerfIndex", &fPerfIndex);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TProofNodeInfo(void *p) {
      return  p ? new(p) ::TProofNodeInfo : new ::TProofNodeInfo;
   }
   static void *newArray_TProofNodeInfo(Long_t nElements, void *p) {
      return p ? new(p) ::TProofNodeInfo[nElements] : new ::TProofNodeInfo[nElements];
   }
   // Wrapper around operator delete
   static void delete_TProofNodeInfo(void *p) {
      delete ((::TProofNodeInfo*)p);
   }
   static void deleteArray_TProofNodeInfo(void *p) {
      delete [] ((::TProofNodeInfo*)p);
   }
   static void destruct_TProofNodeInfo(void *p) {
      typedef ::TProofNodeInfo current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TProofNodeInfo(TBuffer &buf, void *obj) {
      ((::TProofNodeInfo*)obj)->::TProofNodeInfo::Streamer(buf);
   }
} // end of namespace ROOT for class ::TProofNodeInfo

//______________________________________________________________________________
void TProofResources::Streamer(TBuffer &R__b)
{
   // Stream an object of class TProofResources.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void TProofResources::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TProofResources.
      TClass *R__cl = ::TProofResources::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fValid", &fValid);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TProofResources(void *p) {
      delete ((::TProofResources*)p);
   }
   static void deleteArray_TProofResources(void *p) {
      delete [] ((::TProofResources*)p);
   }
   static void destruct_TProofResources(void *p) {
      typedef ::TProofResources current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TProofResources(TBuffer &buf, void *obj) {
      ((::TProofResources*)obj)->::TProofResources::Streamer(buf);
   }
} // end of namespace ROOT for class ::TProofResources

//______________________________________________________________________________
void TProofResourcesStatic::Streamer(TBuffer &R__b)
{
   // Stream an object of class TProofResourcesStatic.

   TProofResources::Streamer(R__b);
}

//______________________________________________________________________________
void TProofResourcesStatic::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TProofResourcesStatic.
      TClass *R__cl = ::TProofResourcesStatic::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMaster", &fMaster);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSubmasterList", &fSubmasterList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fWorkerList", &fWorkerList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFoundMaster", &fFoundMaster);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFileName", &fFileName);
      R__insp.InspectMember(fFileName, "fFileName.");
      TProofResources::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TProofResourcesStatic(void *p) {
      return  p ? new(p) ::TProofResourcesStatic : new ::TProofResourcesStatic;
   }
   static void *newArray_TProofResourcesStatic(Long_t nElements, void *p) {
      return p ? new(p) ::TProofResourcesStatic[nElements] : new ::TProofResourcesStatic[nElements];
   }
   // Wrapper around operator delete
   static void delete_TProofResourcesStatic(void *p) {
      delete ((::TProofResourcesStatic*)p);
   }
   static void deleteArray_TProofResourcesStatic(void *p) {
      delete [] ((::TProofResourcesStatic*)p);
   }
   static void destruct_TProofResourcesStatic(void *p) {
      typedef ::TProofResourcesStatic current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TProofResourcesStatic(TBuffer &buf, void *obj) {
      ((::TProofResourcesStatic*)obj)->::TProofResourcesStatic::Streamer(buf);
   }
} // end of namespace ROOT for class ::TProofResourcesStatic

//______________________________________________________________________________
void TProofProgressStatus::Streamer(TBuffer &R__b)
{
   // Stream an object of class TProofProgressStatus.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> fLastEntries;
      R__b >> fEntries;
      R__b >> fBytesRead;
      R__b >> fReadCalls;
      R__b >> fLearnTime;
      R__b >> fLastProcTime;
      R__b >> fProcTime;
      R__b >> fCPUTime;
      R__b >> fLastUpdate;
      R__b.CheckByteCount(R__s, R__c, TProofProgressStatus::IsA());
   } else {
      R__c = R__b.WriteVersion(TProofProgressStatus::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << fLastEntries;
      R__b << fEntries;
      R__b << fBytesRead;
      R__b << fReadCalls;
      R__b << fLearnTime;
      R__b << fLastProcTime;
      R__b << fProcTime;
      R__b << fCPUTime;
      R__b << fLastUpdate;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TProofProgressStatus::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TProofProgressStatus.
      TClass *R__cl = ::TProofProgressStatus::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLastEntries", &fLastEntries);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEntries", &fEntries);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBytesRead", &fBytesRead);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fReadCalls", &fReadCalls);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLearnTime", &fLearnTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLastProcTime", &fLastProcTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fProcTime", &fProcTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCPUTime", &fCPUTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLastUpdate", &fLastUpdate);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TProofProgressStatus(void *p) {
      return  p ? new(p) ::TProofProgressStatus : new ::TProofProgressStatus;
   }
   static void *newArray_TProofProgressStatus(Long_t nElements, void *p) {
      return p ? new(p) ::TProofProgressStatus[nElements] : new ::TProofProgressStatus[nElements];
   }
   // Wrapper around operator delete
   static void delete_TProofProgressStatus(void *p) {
      delete ((::TProofProgressStatus*)p);
   }
   static void deleteArray_TProofProgressStatus(void *p) {
      delete [] ((::TProofProgressStatus*)p);
   }
   static void destruct_TProofProgressStatus(void *p) {
      typedef ::TProofProgressStatus current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TProofProgressStatus(TBuffer &buf, void *obj) {
      ((::TProofProgressStatus*)obj)->::TProofProgressStatus::Streamer(buf);
   }
} // end of namespace ROOT for class ::TProofProgressStatus

//______________________________________________________________________________
void TMergerInfo::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMergerInfo.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void TMergerInfo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TMergerInfo.
      TClass *R__cl = ::TMergerInfo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMerger", &fMerger);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPort", &fPort);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMergedObjects", &fMergedObjects);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWorkersToMerge", &fWorkersToMerge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMergedWorkers", &fMergedWorkers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fWorkers", &fWorkers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsActive", &fIsActive);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TMergerInfo(void *p) {
      delete ((::TMergerInfo*)p);
   }
   static void deleteArray_TMergerInfo(void *p) {
      delete [] ((::TMergerInfo*)p);
   }
   static void destruct_TMergerInfo(void *p) {
      typedef ::TMergerInfo current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TMergerInfo(TBuffer &buf, void *obj) {
      ((::TMergerInfo*)obj)->::TMergerInfo::Streamer(buf);
   }
} // end of namespace ROOT for class ::TMergerInfo

//______________________________________________________________________________
void TProofProgressInfo::Streamer(TBuffer &R__b)
{
   // Stream an object of class TProofProgressInfo.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> fTotal;
      R__b >> fProcessed;
      R__b >> fBytesRead;
      R__b >> fInitTime;
      R__b >> fProcTime;
      R__b >> fEvtRateI;
      R__b >> fMBRateI;
      R__b >> fActWorkers;
      R__b >> fTotSessions;
      R__b >> fEffSessions;
      R__b.CheckByteCount(R__s, R__c, TProofProgressInfo::IsA());
   } else {
      R__c = R__b.WriteVersion(TProofProgressInfo::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << fTotal;
      R__b << fProcessed;
      R__b << fBytesRead;
      R__b << fInitTime;
      R__b << fProcTime;
      R__b << fEvtRateI;
      R__b << fMBRateI;
      R__b << fActWorkers;
      R__b << fTotSessions;
      R__b << fEffSessions;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TProofProgressInfo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TProofProgressInfo.
      TClass *R__cl = ::TProofProgressInfo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTotal", &fTotal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fProcessed", &fProcessed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBytesRead", &fBytesRead);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInitTime", &fInitTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fProcTime", &fProcTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEvtRateI", &fEvtRateI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMBRateI", &fMBRateI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fActWorkers", &fActWorkers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTotSessions", &fTotSessions);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEffSessions", &fEffSessions);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TProofProgressInfo(void *p) {
      return  p ? new(p) ::TProofProgressInfo : new ::TProofProgressInfo;
   }
   static void *newArray_TProofProgressInfo(Long_t nElements, void *p) {
      return p ? new(p) ::TProofProgressInfo[nElements] : new ::TProofProgressInfo[nElements];
   }
   // Wrapper around operator delete
   static void delete_TProofProgressInfo(void *p) {
      delete ((::TProofProgressInfo*)p);
   }
   static void deleteArray_TProofProgressInfo(void *p) {
      delete [] ((::TProofProgressInfo*)p);
   }
   static void destruct_TProofProgressInfo(void *p) {
      typedef ::TProofProgressInfo current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TProofProgressInfo(TBuffer &buf, void *obj) {
      ((::TProofProgressInfo*)obj)->::TProofProgressInfo::Streamer(buf);
   }
} // end of namespace ROOT for class ::TProofProgressInfo

//______________________________________________________________________________
void TProofOutputList::Streamer(TBuffer &R__b)
{
   // Stream an object of class TProofOutputList.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TProofOutputList::Class(),this);
   } else {
      R__b.WriteClassBuffer(TProofOutputList::Class(),this);
   }
}

//______________________________________________________________________________
void TProofOutputList::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TProofOutputList.
      TClass *R__cl = ::TProofOutputList::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDontShow", &fDontShow);
      TList::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TProofOutputList(void *p) {
      return  p ? new(p) ::TProofOutputList : new ::TProofOutputList;
   }
   static void *newArray_TProofOutputList(Long_t nElements, void *p) {
      return p ? new(p) ::TProofOutputList[nElements] : new ::TProofOutputList[nElements];
   }
   // Wrapper around operator delete
   static void delete_TProofOutputList(void *p) {
      delete ((::TProofOutputList*)p);
   }
   static void deleteArray_TProofOutputList(void *p) {
      delete [] ((::TProofOutputList*)p);
   }
   static void destruct_TProofOutputList(void *p) {
      typedef ::TProofOutputList current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TProofOutputList

//______________________________________________________________________________
void TDataSetManager::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDataSetManager.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void TDataSetManager::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TDataSetManager.
      TClass *R__cl = ::TDataSetManager::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGroup", &fGroup);
      R__insp.InspectMember(fGroup, "fGroup.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUser", &fUser);
      R__insp.InspectMember(fUser, "fUser.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCommonUser", &fCommonUser);
      R__insp.InspectMember(fCommonUser, "fCommonUser.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCommonGroup", &fCommonGroup);
      R__insp.InspectMember(fCommonGroup, "fCommonGroup.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBase", &fBase);
      R__insp.InspectMember(fBase, "fBase.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGroupQuota", &fGroupQuota);
      R__insp.InspectMember(fGroupQuota, "fGroupQuota.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGroupUsed", &fGroupUsed);
      R__insp.InspectMember(fGroupUsed, "fGroupUsed.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUserUsed", &fUserUsed);
      R__insp.InspectMember(fUserUsed, "fUserUsed.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAvgFileSize", &fAvgFileSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNTouchedFiles", &fNTouchedFiles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNOpenedFiles", &fNOpenedFiles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNDisappearedFiles", &fNDisappearedFiles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGroupConfigFile", &fGroupConfigFile);
      R__insp.InspectMember(fGroupConfigFile, "fGroupConfigFile.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMTimeGroupConfig", &fMTimeGroupConfig);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TDataSetManager(void *p) {
      return  p ? new(p) ::TDataSetManager : new ::TDataSetManager;
   }
   static void *newArray_TDataSetManager(Long_t nElements, void *p) {
      return p ? new(p) ::TDataSetManager[nElements] : new ::TDataSetManager[nElements];
   }
   // Wrapper around operator delete
   static void delete_TDataSetManager(void *p) {
      delete ((::TDataSetManager*)p);
   }
   static void deleteArray_TDataSetManager(void *p) {
      delete [] ((::TDataSetManager*)p);
   }
   static void destruct_TDataSetManager(void *p) {
      typedef ::TDataSetManager current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TDataSetManager(TBuffer &buf, void *obj) {
      ((::TDataSetManager*)obj)->::TDataSetManager::Streamer(buf);
   }
} // end of namespace ROOT for class ::TDataSetManager

//______________________________________________________________________________
void TDataSetManagerFile::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDataSetManagerFile.

   TDataSetManager::Streamer(R__b);
}

//______________________________________________________________________________
void TDataSetManagerFile::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TDataSetManagerFile.
      TClass *R__cl = ::TDataSetManagerFile::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDataSetDir", &fDataSetDir);
      R__insp.InspectMember(fDataSetDir, "fDataSetDir.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMSSUrl", &fMSSUrl);
      R__insp.InspectMember(fMSSUrl, "fMSSUrl.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStageOpts", &fStageOpts);
      R__insp.InspectMember(fStageOpts, "fStageOpts.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDataSetLockFile", &fDataSetLockFile);
      R__insp.InspectMember(fDataSetLockFile, "fDataSetLockFile.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLockFileTimeLimit", &fLockFileTimeLimit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fListFile", &fListFile);
      R__insp.InspectMember(fListFile, "fListFile.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsRemote", &fIsRemote);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUseCache", &fUseCache);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLocalCacheDir", &fLocalCacheDir);
      R__insp.InspectMember(fLocalCacheDir, "fLocalCacheDir.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCacheUpdatePeriod", &fCacheUpdatePeriod);
      TDataSetManager::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TDataSetManagerFile(void *p) {
      return  p ? new(p) ::TDataSetManagerFile : new ::TDataSetManagerFile;
   }
   static void *newArray_TDataSetManagerFile(Long_t nElements, void *p) {
      return p ? new(p) ::TDataSetManagerFile[nElements] : new ::TDataSetManagerFile[nElements];
   }
   // Wrapper around operator delete
   static void delete_TDataSetManagerFile(void *p) {
      delete ((::TDataSetManagerFile*)p);
   }
   static void deleteArray_TDataSetManagerFile(void *p) {
      delete [] ((::TDataSetManagerFile*)p);
   }
   static void destruct_TDataSetManagerFile(void *p) {
      typedef ::TDataSetManagerFile current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TDataSetManagerFile(TBuffer &buf, void *obj) {
      ((::TDataSetManagerFile*)obj)->::TDataSetManagerFile::Streamer(buf);
   }
} // end of namespace ROOT for class ::TDataSetManagerFile

//______________________________________________________________________________
namespace ROOT {
   void pairlETDSetElementmUcOTStringgR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class pair<TDSetElement*,TString>.
      typedef ::ROOT::Shadow::pairlETDSetElementmUcOTStringgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const pair<TDSetElement*,TString>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*first", &sobj->first);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "second", &sobj->second);
      R__insp.InspectMember(sobj->second, "second.");
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_pairlETDSetElementmUcOTStringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<TDSetElement*,TString> : new pair<TDSetElement*,TString>;
   }
   static void *newArray_pairlETDSetElementmUcOTStringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<TDSetElement*,TString>[nElements] : new pair<TDSetElement*,TString>[nElements];
   }
   // Wrapper around operator delete
   static void delete_pairlETDSetElementmUcOTStringgR(void *p) {
      delete ((pair<TDSetElement*,TString>*)p);
   }
   static void deleteArray_pairlETDSetElementmUcOTStringgR(void *p) {
      delete [] ((pair<TDSetElement*,TString>*)p);
   }
   static void destruct_pairlETDSetElementmUcOTStringgR(void *p) {
      typedef pair<TDSetElement*,TString> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<TDSetElement*,TString>

namespace ROOT {
   void listlEpairlETDSetElementmUcOTStringgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void listlEpairlETDSetElementmUcOTStringgRsPgR_Dictionary();
   static void *new_listlEpairlETDSetElementmUcOTStringgRsPgR(void *p = 0);
   static void *newArray_listlEpairlETDSetElementmUcOTStringgRsPgR(Long_t size, void *p);
   static void delete_listlEpairlETDSetElementmUcOTStringgRsPgR(void *p);
   static void deleteArray_listlEpairlETDSetElementmUcOTStringgRsPgR(void *p);
   static void destruct_listlEpairlETDSetElementmUcOTStringgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const list<pair<TDSetElement*,TString> >*)
   {
      list<pair<TDSetElement*,TString> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(list<pair<TDSetElement*,TString> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("list<pair<TDSetElement*,TString> >", -2, "prec_stl/list", 44,
                  typeid(list<pair<TDSetElement*,TString> >), DefineBehavior(ptr, ptr),
                  0, &listlEpairlETDSetElementmUcOTStringgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(list<pair<TDSetElement*,TString> >) );
      instance.SetNew(&new_listlEpairlETDSetElementmUcOTStringgRsPgR);
      instance.SetNewArray(&newArray_listlEpairlETDSetElementmUcOTStringgRsPgR);
      instance.SetDelete(&delete_listlEpairlETDSetElementmUcOTStringgRsPgR);
      instance.SetDeleteArray(&deleteArray_listlEpairlETDSetElementmUcOTStringgRsPgR);
      instance.SetDestructor(&destruct_listlEpairlETDSetElementmUcOTStringgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< list<pair<TDSetElement*,TString> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const list<pair<TDSetElement*,TString> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void listlEpairlETDSetElementmUcOTStringgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const list<pair<TDSetElement*,TString> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_listlEpairlETDSetElementmUcOTStringgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) list<pair<TDSetElement*,TString> > : new list<pair<TDSetElement*,TString> >;
   }
   static void *newArray_listlEpairlETDSetElementmUcOTStringgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) list<pair<TDSetElement*,TString> >[nElements] : new list<pair<TDSetElement*,TString> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_listlEpairlETDSetElementmUcOTStringgRsPgR(void *p) {
      delete ((list<pair<TDSetElement*,TString> >*)p);
   }
   static void deleteArray_listlEpairlETDSetElementmUcOTStringgRsPgR(void *p) {
      delete [] ((list<pair<TDSetElement*,TString> >*)p);
   }
   static void destruct_listlEpairlETDSetElementmUcOTStringgRsPgR(void *p) {
      typedef list<pair<TDSetElement*,TString> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class list<pair<TDSetElement*,TString> >

/********************************************************
* proof/proof/src/G__Proof.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__Proof();

extern "C" void G__set_cpp_environmentG__Proof() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("TCondor.h");
  G__add_compiledheader("TDSet.h");
  G__add_compiledheader("TDSetProxy.h");
  G__add_compiledheader("TDataSetManager.h");
  G__add_compiledheader("TDataSetManagerFile.h");
  G__add_compiledheader("TProof.h");
  G__add_compiledheader("TProofChain.h");
  G__add_compiledheader("TProofCondor.h");
  G__add_compiledheader("TProofDebug.h");
  G__add_compiledheader("TProofLite.h");
  G__add_compiledheader("TProofLog.h");
  G__add_compiledheader("TProofMgr.h");
  G__add_compiledheader("TProofMgrLite.h");
  G__add_compiledheader("TProofNodeInfo.h");
  G__add_compiledheader("TProofOutputList.h");
  G__add_compiledheader("TProofProgressStatus.h");
  G__add_compiledheader("TProofQueryResult.h");
  G__add_compiledheader("TProofResources.h");
  G__add_compiledheader("TProofResourcesStatic.h");
  G__add_compiledheader("TProofServ.h");
  G__add_compiledheader("TProofServLite.h");
  G__add_compiledheader("TProofSuperMaster.h");
  G__add_compiledheader("TQueryResultManager.h");
  G__add_compiledheader("TSlave.h");
  G__add_compiledheader("TSlaveLite.h");
  G__add_compiledheader("TVirtualProofPlayer.h");
  G__cpp_reset_tagtableG__Proof();
}
#include <new>
extern "C" int G__cpp_dllrevG__Proof() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TCondorSlave */
static int G__G__Proof_110_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCondorSlave::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_110_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCondorSlave::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_110_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TCondorSlave::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_110_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TCondorSlave::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_110_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCondorSlave*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_110_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCondorSlave::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_110_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCondorSlave::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_110_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCondorSlave::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_110_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCondorSlave::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__G__Proof_110_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCondorSlave *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TCondorSlave[n];
     } else {
       p = new((void*) gvp) TCondorSlave[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TCondorSlave;
     } else {
       p = new((void*) gvp) TCondorSlave;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_TCondorSlave));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Proof_110_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TCondorSlave* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TCondorSlave(*(TCondorSlave*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_TCondorSlave));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TCondorSlave G__TTCondorSlave;
static int G__G__Proof_110_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TCondorSlave*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TCondorSlave*) (soff+(sizeof(TCondorSlave)*i)))->~G__TTCondorSlave();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TCondorSlave*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TCondorSlave*) (soff))->~G__TTCondorSlave();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Proof_110_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCondorSlave* dest = (TCondorSlave*) G__getstructoffset();
   *dest = *(TCondorSlave*) libp->para[0].ref;
   const TCondorSlave& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TCondor */
static int G__G__Proof_111_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCondor* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TCondor((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TCondor((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TCondor[n];
       } else {
         p = new((void*) gvp) TCondor[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TCondor;
       } else {
         p = new((void*) gvp) TCondor;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_TCondor));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_111_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TCondor*) G__getstructoffset())->IsValid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_111_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TCondor*) G__getstructoffset())->GetVirtualMachines());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_111_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TCondor*) G__getstructoffset())->Claim((Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_111_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TCondor*) G__getstructoffset())->Claim((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_111_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TCondor*) G__getstructoffset())->SetState((TCondor::EState) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_111_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TCondor*) G__getstructoffset())->GetState());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_111_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TCondor*) G__getstructoffset())->Suspend());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_111_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TCondor*) G__getstructoffset())->Resume());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_111_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TCondor*) G__getstructoffset())->Release());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_111_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TCondor*) G__getstructoffset())->GetVmInfo((const char*) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, *(Int_t*) G__Intref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_111_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const TCondor*) G__getstructoffset())->GetImage((const char*) G__int(libp->para[0]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_111_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCondor::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_111_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCondor::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_111_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TCondor::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_111_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TCondor::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_111_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCondor*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_111_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCondor::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_111_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCondor::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_111_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCondor::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_111_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCondor::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Proof_111_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TCondor* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TCondor(*(TCondor*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_TCondor));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TCondor G__TTCondor;
static int G__G__Proof_111_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TCondor*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TCondor*) (soff+(sizeof(TCondor)*i)))->~G__TTCondor();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TCondor*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TCondor*) (soff))->~G__TTCondor();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Proof_111_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCondor* dest = (TCondor*) G__getstructoffset();
   *dest = *(TCondor*) libp->para[0].ref;
   const TCondor& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSet */
static int G__G__Proof_116_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TDSet* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TDSet[n];
     } else {
       p = new((void*) gvp) TDSet[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TDSet;
     } else {
       p = new((void*) gvp) TDSet;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_TDSet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_116_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TDSet* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TDSet(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TDSet(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TDSet(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TDSet(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TDSet((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TDSet((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TDSet((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TDSet((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_TDSet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_116_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TDSet* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TDSet(*(TChain*) libp->para[0].ref, (Bool_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TDSet(*(TChain*) libp->para[0].ref, (Bool_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TDSet(*(TChain*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) TDSet(*(TChain*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_TDSet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_116_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      G__letint(result7, 103, (long) ((TDSet*) G__getstructoffset())->Add((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Long64_t) G__Longlong(libp->para[3])
, (Long64_t) G__Longlong(libp->para[4]), (const char*) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 103, (long) ((TDSet*) G__getstructoffset())->Add((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Long64_t) G__Longlong(libp->para[3])
, (Long64_t) G__Longlong(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 103, (long) ((TDSet*) G__getstructoffset())->Add((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Long64_t) G__Longlong(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 103, (long) ((TDSet*) G__getstructoffset())->Add((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((TDSet*) G__getstructoffset())->Add((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((TDSet*) G__getstructoffset())->Add((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_116_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TDSet*) G__getstructoffset())->Add((TDSet*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_116_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 103, (long) ((TDSet*) G__getstructoffset())->Add((TCollection*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]), (TCollection*) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 103, (long) ((TDSet*) G__getstructoffset())->Add((TCollection*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((TDSet*) G__getstructoffset())->Add((TCollection*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((TDSet*) G__getstructoffset())->Add((TCollection*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_116_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((TDSet*) G__getstructoffset())->Add((TFileInfo*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((TDSet*) G__getstructoffset())->Add((TFileInfo*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_116_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDSet*) G__getstructoffset())->AddFriend((TDSet*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_116_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letLonglong(result7, 110, (G__int64) ((TDSet*) G__getstructoffset())->Process((const char*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2]), (Long64_t) G__Longlong(libp->para[3])
, (TObject*) G__int(libp->para[4])));
      break;
   case 4:
      G__letLonglong(result7, 110, (G__int64) ((TDSet*) G__getstructoffset())->Process((const char*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2]), (Long64_t) G__Longlong(libp->para[3])));
      break;
   case 3:
      G__letLonglong(result7, 110, (G__int64) ((TDSet*) G__getstructoffset())->Process((const char*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2])));
      break;
   case 2:
      G__letLonglong(result7, 110, (G__int64) ((TDSet*) G__getstructoffset())->Process((const char*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])));
      break;
   case 1:
      G__letLonglong(result7, 110, (G__int64) ((TDSet*) G__getstructoffset())->Process((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_116_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letLonglong(result7, 110, (G__int64) ((TDSet*) G__getstructoffset())->Draw((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2]), (Long64_t) G__Longlong(libp->para[3])
, (Long64_t) G__Longlong(libp->para[4])));
      break;
   case 4:
      G__letLonglong(result7, 110, (G__int64) ((TDSet*) G__getstructoffset())->Draw((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2]), (Long64_t) G__Longlong(libp->para[3])));
      break;
   case 3:
      G__letLonglong(result7, 110, (G__int64) ((TDSet*) G__getstructoffset())->Draw((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2])));
      break;
   case 2:
      G__letLonglong(result7, 110, (G__int64) ((TDSet*) G__getstructoffset())->Draw((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_116_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letLonglong(result7, 110, (G__int64) ((TDSet*) G__getstructoffset())->Draw((const char*) G__int(libp->para[0]), *(TCut*) libp->para[1].ref
, (Option_t*) G__int(libp->para[2]), (Long64_t) G__Longlong(libp->para[3])
, (Long64_t) G__Longlong(libp->para[4])));
      break;
   case 4:
      G__letLonglong(result7, 110, (G__int64) ((TDSet*) G__getstructoffset())->Draw((const char*) G__int(libp->para[0]), *(TCut*) libp->para[1].ref
, (Option_t*) G__int(libp->para[2]), (Long64_t) G__Longlong(libp->para[3])));
      break;
   case 3:
      G__letLonglong(result7, 110, (G__int64) ((TDSet*) G__getstructoffset())->Draw((const char*) G__int(libp->para[0]), *(TCut*) libp->para[1].ref
, (Option_t*) G__int(libp->para[2])));
      break;
   case 2:
      G__letLonglong(result7, 110, (G__int64) ((TDSet*) G__getstructoffset())->Draw((const char*) G__int(libp->para[0]), *(TCut*) libp->para[1].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_116_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((TDSet*) G__getstructoffset())->ExportFileList((const char*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((TDSet*) G__getstructoffset())->ExportFileList((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_116_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDSet*) G__getstructoffset())->SetObjName((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_116_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDSet*) G__getstructoffset())->SetDirectory((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_116_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TDSet*) G__getstructoffset())->IsTree());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_116_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TDSet*) G__getstructoffset())->IsValid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_116_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TDSet*) G__getstructoffset())->ElementsValid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_116_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TDSet*) G__getstructoffset())->GetType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_116_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TDSet*) G__getstructoffset())->GetObjName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_116_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TDSet*) G__getstructoffset())->GetDirectory());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_116_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TDSet*) G__getstructoffset())->GetListOfElements());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_116_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TDSet*) G__getstructoffset())->GetNumOfFiles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_116_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((TDSet*) G__getstructoffset())->Remove((TDSetElement*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((TDSet*) G__getstructoffset())->Remove((TDSetElement*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_116_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDSet*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_116_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((TDSet*) G__getstructoffset())->Next((Long64_t) G__Longlong(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((TDSet*) G__getstructoffset())->Next());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_116_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TDSet*) G__getstructoffset())->Current());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_116_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) TDSet::GetEntries((Bool_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), *(TString*) libp->para[3].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_116_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDSet*) G__getstructoffset())->AddInput((TObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_116_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDSet*) G__getstructoffset())->ClearInput();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_116_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TDSet*) G__getstructoffset())->GetOutput((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_116_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TDSet*) G__getstructoffset())->GetOutputList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_116_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDSet*) G__getstructoffset())->StartViewer();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_116_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TDSet*) G__getstructoffset())->GetTreeHeader((TProof*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_116_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDSet*) G__getstructoffset())->SetEntryList((TObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_116_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TDSet*) G__getstructoffset())->GetEntryList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_116_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDSet*) G__getstructoffset())->Validate();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_116_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDSet*) G__getstructoffset())->Validate((TDSet*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_116_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TDSet*) G__getstructoffset())->Lookup((Bool_t) G__int(libp->para[0]), (TList**) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TDSet*) G__getstructoffset())->Lookup((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TDSet*) G__getstructoffset())->Lookup();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_116_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDSet*) G__getstructoffset())->SetLookedUp();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_116_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TDSet*) G__getstructoffset())->SetSrvMaps((TList*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TDSet*) G__getstructoffset())->SetSrvMaps();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_116_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TDSet*) G__getstructoffset())->SetWriteV3((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TDSet*) G__getstructoffset())->SetWriteV3();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_116_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TDSet::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_116_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDSet::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_116_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TDSet::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_116_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TDSet::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_116_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDSet*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_116_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDSet::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_116_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TDSet::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_116_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDSet::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_116_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TDSet::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSet G__TTDSet;
static int G__G__Proof_116_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TDSet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TDSet*) (soff+(sizeof(TDSet)*i)))->~G__TTDSet();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TDSet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TDSet*) (soff))->~G__TTDSet();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TProof */
static int G__G__Proof_122_0_120(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TProof* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProof(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (TProofMgr*) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) TProof(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (TProofMgr*) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProof(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TProof(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProof(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TProof(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProof(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TProof(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProof((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TProof((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProof((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TProof((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_TProof));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_121(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TProof*) G__getstructoffset())->cd((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TProof*) G__getstructoffset())->cd();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_122(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->Ping());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_123(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProof*) G__getstructoffset())->Touch();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_124(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->Exec((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->Exec((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_125(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letLonglong(result7, 110, (G__int64) ((TProof*) G__getstructoffset())->Process((TDSet*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2]), (Long64_t) G__Longlong(libp->para[3])
, (Long64_t) G__Longlong(libp->para[4])));
      break;
   case 4:
      G__letLonglong(result7, 110, (G__int64) ((TProof*) G__getstructoffset())->Process((TDSet*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2]), (Long64_t) G__Longlong(libp->para[3])));
      break;
   case 3:
      G__letLonglong(result7, 110, (G__int64) ((TProof*) G__getstructoffset())->Process((TDSet*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2])));
      break;
   case 2:
      G__letLonglong(result7, 110, (G__int64) ((TProof*) G__getstructoffset())->Process((TDSet*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_126(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letLonglong(result7, 110, (G__int64) ((TProof*) G__getstructoffset())->Process((TFileCollection*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2]), (Long64_t) G__Longlong(libp->para[3])
, (Long64_t) G__Longlong(libp->para[4])));
      break;
   case 4:
      G__letLonglong(result7, 110, (G__int64) ((TProof*) G__getstructoffset())->Process((TFileCollection*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2]), (Long64_t) G__Longlong(libp->para[3])));
      break;
   case 3:
      G__letLonglong(result7, 110, (G__int64) ((TProof*) G__getstructoffset())->Process((TFileCollection*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2])));
      break;
   case 2:
      G__letLonglong(result7, 110, (G__int64) ((TProof*) G__getstructoffset())->Process((TFileCollection*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_127(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      G__letLonglong(result7, 110, (G__int64) ((TProof*) G__getstructoffset())->Process((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2]), (Long64_t) G__Longlong(libp->para[3])
, (Long64_t) G__Longlong(libp->para[4]), (TObject*) G__int(libp->para[5])));
      break;
   case 5:
      G__letLonglong(result7, 110, (G__int64) ((TProof*) G__getstructoffset())->Process((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2]), (Long64_t) G__Longlong(libp->para[3])
, (Long64_t) G__Longlong(libp->para[4])));
      break;
   case 4:
      G__letLonglong(result7, 110, (G__int64) ((TProof*) G__getstructoffset())->Process((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2]), (Long64_t) G__Longlong(libp->para[3])));
      break;
   case 3:
      G__letLonglong(result7, 110, (G__int64) ((TProof*) G__getstructoffset())->Process((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2])));
      break;
   case 2:
      G__letLonglong(result7, 110, (G__int64) ((TProof*) G__getstructoffset())->Process((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_128(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letLonglong(result7, 110, (G__int64) ((TProof*) G__getstructoffset())->Process((const char*) G__int(libp->para[0]), (Long64_t) G__Longlong(libp->para[1])
, (Option_t*) G__int(libp->para[2])));
      break;
   case 2:
      G__letLonglong(result7, 110, (G__int64) ((TProof*) G__getstructoffset())->Process((const char*) G__int(libp->para[0]), (Long64_t) G__Longlong(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_129(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      G__letLonglong(result7, 110, (G__int64) ((TProof*) G__getstructoffset())->DrawSelect((TDSet*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Option_t*) G__int(libp->para[3])
, (Long64_t) G__Longlong(libp->para[4]), (Long64_t) G__Longlong(libp->para[5])));
      break;
   case 5:
      G__letLonglong(result7, 110, (G__int64) ((TProof*) G__getstructoffset())->DrawSelect((TDSet*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Option_t*) G__int(libp->para[3])
, (Long64_t) G__Longlong(libp->para[4])));
      break;
   case 4:
      G__letLonglong(result7, 110, (G__int64) ((TProof*) G__getstructoffset())->DrawSelect((TDSet*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Option_t*) G__int(libp->para[3])));
      break;
   case 3:
      G__letLonglong(result7, 110, (G__int64) ((TProof*) G__getstructoffset())->DrawSelect((TDSet*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letLonglong(result7, 110, (G__int64) ((TProof*) G__getstructoffset())->DrawSelect((TDSet*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_130(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 7:
      G__letLonglong(result7, 110, (G__int64) ((TProof*) G__getstructoffset())->DrawSelect(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Option_t*) G__int(libp->para[3])
, (Long64_t) G__Longlong(libp->para[4]), (Long64_t) G__Longlong(libp->para[5])
, (TObject*) G__int(libp->para[6])));
      break;
   case 6:
      G__letLonglong(result7, 110, (G__int64) ((TProof*) G__getstructoffset())->DrawSelect((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Option_t*) G__int(libp->para[3])
, (Long64_t) G__Longlong(libp->para[4]), (Long64_t) G__Longlong(libp->para[5])));
      break;
   case 5:
      G__letLonglong(result7, 110, (G__int64) ((TProof*) G__getstructoffset())->DrawSelect((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Option_t*) G__int(libp->para[3])
, (Long64_t) G__Longlong(libp->para[4])));
      break;
   case 4:
      G__letLonglong(result7, 110, (G__int64) ((TProof*) G__getstructoffset())->DrawSelect((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Option_t*) G__int(libp->para[3])));
      break;
   case 3:
      G__letLonglong(result7, 110, (G__int64) ((TProof*) G__getstructoffset())->DrawSelect((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letLonglong(result7, 110, (G__int64) ((TProof*) G__getstructoffset())->DrawSelect((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_131(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->Archive((Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_132(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->Archive((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->Archive((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_133(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->CleanupSession((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_134(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letLonglong(result7, 110, (G__int64) ((TProof*) G__getstructoffset())->Finalize((Int_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letLonglong(result7, 110, (G__int64) ((TProof*) G__getstructoffset())->Finalize((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letLonglong(result7, 110, (G__int64) ((TProof*) G__getstructoffset())->Finalize());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_135(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letLonglong(result7, 110, (G__int64) ((TProof*) G__getstructoffset())->Finalize((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letLonglong(result7, 110, (G__int64) ((TProof*) G__getstructoffset())->Finalize((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_136(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->Remove((Int_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->Remove((Int_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_137(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->Remove((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->Remove((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_138(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->Retrieve((Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->Retrieve((Int_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_139(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->Retrieve((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->Retrieve((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_140(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProof*) G__getstructoffset())->DisableGoAsyn();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_141(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProof*) G__getstructoffset())->GoAsynchronous();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_142(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TProof*) G__getstructoffset())->StopProcess((Bool_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TProof*) G__getstructoffset())->StopProcess((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_144(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->SetParallel((Int_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->SetParallel((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->SetParallel());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_145(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TProof*) G__getstructoffset())->SetLogLevel((Int_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TProof*) G__getstructoffset())->SetLogLevel((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_146(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TProof*) G__getstructoffset())->Close((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TProof*) G__getstructoffset())->Close();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_148(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TProof*) G__getstructoffset())->ShowCache((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TProof*) G__getstructoffset())->ShowCache();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_149(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TProof*) G__getstructoffset())->ClearCache((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TProof*) G__getstructoffset())->ClearCache();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_150(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TProof*) G__getstructoffset())->GetListOfPackages());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_151(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TProof*) G__getstructoffset())->GetListOfEnabledPackages());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_152(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TProof*) G__getstructoffset())->ShowPackages((Bool_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TProof*) G__getstructoffset())->ShowPackages((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TProof*) G__getstructoffset())->ShowPackages();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_153(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TProof*) G__getstructoffset())->ShowEnabledPackages((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TProof*) G__getstructoffset())->ShowEnabledPackages();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_154(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->ClearPackages());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_155(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->ClearPackage((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_156(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->DownloadPackage((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->DownloadPackage((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_157(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->EnablePackage((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->EnablePackage((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_158(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->EnablePackage((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->EnablePackage((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_159(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->EnablePackage((const char*) G__int(libp->para[0]), (TList*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->EnablePackage((const char*) G__int(libp->para[0]), (TList*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_160(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->UploadPackage((const char*) G__int(libp->para[0]), (TProof::EUploadPackageOpt) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->UploadPackage((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_161(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->Load((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]), (TList*) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->Load((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->Load((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->Load((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_162(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->AddDynamicPath((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])
, (TList*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->AddDynamicPath((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->AddDynamicPath((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_163(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->AddIncludePath((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])
, (TList*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->AddIncludePath((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->AddIncludePath((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_164(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->RemoveDynamicPath((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->RemoveDynamicPath((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_165(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->RemoveIncludePath((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->RemoveIncludePath((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_166(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->UploadDataSet((const char*) G__int(libp->para[0]), (TList*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (TList*) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->UploadDataSet((const char*) G__int(libp->para[0]), (TList*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->UploadDataSet((const char*) G__int(libp->para[0]), (TList*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->UploadDataSet((const char*) G__int(libp->para[0]), (TList*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_167(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->UploadDataSet((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (TList*) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->UploadDataSet((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->UploadDataSet((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->UploadDataSet((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_168(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->UploadDataSetFromFile((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (TList*) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->UploadDataSetFromFile((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->UploadDataSetFromFile((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->UploadDataSetFromFile((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_169(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((TProof*) G__getstructoffset())->RegisterDataSet((const char*) G__int(libp->para[0]), (TFileCollection*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((TProof*) G__getstructoffset())->RegisterDataSet((const char*) G__int(libp->para[0]), (TFileCollection*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_170(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((TProof*) G__getstructoffset())->GetDataSets((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((TProof*) G__getstructoffset())->GetDataSets((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((TProof*) G__getstructoffset())->GetDataSets());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_171(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TProof*) G__getstructoffset())->ShowDataSets((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TProof*) G__getstructoffset())->ShowDataSets((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TProof*) G__getstructoffset())->ShowDataSets();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_172(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((TProof*) G__getstructoffset())->GetDataSetQuota((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((TProof*) G__getstructoffset())->GetDataSetQuota());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_173(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TProof*) G__getstructoffset())->ShowDataSetQuota((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TProof*) G__getstructoffset())->ShowDataSetQuota();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_174(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TProof*) G__getstructoffset())->ExistsDataSet((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_175(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TProof*) G__getstructoffset())->ShowDataSet((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TProof*) G__getstructoffset())->ShowDataSet((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TProof*) G__getstructoffset())->ShowDataSet();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_176(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->RemoveDataSet((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->RemoveDataSet((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_177(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->VerifyDataSet((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->VerifyDataSet((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_178(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((TProof*) G__getstructoffset())->GetDataSet((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((TProof*) G__getstructoffset())->GetDataSet((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_179(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((TProof*) G__getstructoffset())->FindDataSets((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((TProof*) G__getstructoffset())->FindDataSets((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_180(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->SetDataSetTreeName((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_181(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TProof*) G__getstructoffset())->ShowDataSetCache((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TProof*) G__getstructoffset())->ShowDataSetCache();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_182(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TProof*) G__getstructoffset())->ClearDataSetCache((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TProof*) G__getstructoffset())->ClearDataSetCache();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_183(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProof*) G__getstructoffset())->ShowData();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_184(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TProof*) G__getstructoffset())->ClearData((UInt_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TProof*) G__getstructoffset())->ClearData((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TProof*) G__getstructoffset())->ClearData();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_185(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TProof*) G__getstructoffset())->GetMaster());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_186(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TProof*) G__getstructoffset())->GetConfDir());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_187(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TProof*) G__getstructoffset())->GetConfFile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_188(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TProof*) G__getstructoffset())->GetUser());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_189(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TProof*) G__getstructoffset())->GetGroup());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_190(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TProof*) G__getstructoffset())->GetWorkDir());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_191(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TProof*) G__getstructoffset())->GetSessionTag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_192(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TProof*) G__getstructoffset())->GetImage());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_193(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TProof*) G__getstructoffset())->GetUrl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_194(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TProof*) G__getstructoffset())->GetPort());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_195(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TProof*) G__getstructoffset())->GetRemoteProtocol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_196(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TProof*) G__getstructoffset())->GetClientProtocol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_197(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TProof*) G__getstructoffset())->GetStatus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_198(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TProof*) G__getstructoffset())->GetLogLevel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_199(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TProof*) G__getstructoffset())->GetParallel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_200(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TProof*) G__getstructoffset())->GetSeqNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_201(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TProof*) G__getstructoffset())->GetSessionID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_202(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TProof*) G__getstructoffset())->GetListOfSlaveInfos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_203(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TProof*) G__getstructoffset())->UseDynamicStartup());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_204(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((const TProof*) G__getstructoffset())->GetQueryMode((Option_t*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((const TProof*) G__getstructoffset())->GetQueryMode());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_205(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProof*) G__getstructoffset())->SetQueryMode((TProof::EQueryMode) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_206(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TProof*) G__getstructoffset())->SetRealTimeLog((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TProof*) G__getstructoffset())->SetRealTimeLog();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_207(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TProof*) G__getstructoffset())->GetStatistics((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TProof*) G__getstructoffset())->GetStatistics();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_208(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((const TProof*) G__getstructoffset())->GetBytesRead());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_209(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TProof*) G__getstructoffset())->GetRealTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_210(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TProof*) G__getstructoffset())->GetCpuTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_211(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TProof*) G__getstructoffset())->IsLite());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_212(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TProof*) G__getstructoffset())->IsProofd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_214(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TProof*) G__getstructoffset())->IsMaster());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_215(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TProof*) G__getstructoffset())->IsValid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_216(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TProof*) G__getstructoffset())->IsParallel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_217(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TProof*) G__getstructoffset())->IsIdle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_218(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TProof*) G__getstructoffset())->IsWaiting());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_219(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TProof*) G__getstructoffset())->GetRunStatus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_220(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TProof*) G__getstructoffset())->GetLoadedMacros());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_221(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProof*) G__getstructoffset())->SetParameter((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_222(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProof*) G__getstructoffset())->SetParameter((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_223(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProof*) G__getstructoffset())->SetParameter((const char*) G__int(libp->para[0]), (Long_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_224(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProof*) G__getstructoffset())->SetParameter((const char*) G__int(libp->para[0]), (Long64_t) G__Longlong(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_225(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProof*) G__getstructoffset())->SetParameter((const char*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_226(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TProof*) G__getstructoffset())->GetParameter((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_227(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProof*) G__getstructoffset())->DeleteParameters((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_228(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((const TProof*) G__getstructoffset())->ShowParameters((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((const TProof*) G__getstructoffset())->ShowParameters();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_229(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProof*) G__getstructoffset())->AddInput((TObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_230(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProof*) G__getstructoffset())->ClearInput();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_231(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TProof*) G__getstructoffset())->GetInputList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_232(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TProof*) G__getstructoffset())->GetOutput((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_233(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TProof*) G__getstructoffset())->GetOutputList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_234(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TProof*) G__getstructoffset())->ShowMissingFiles((TQueryResult*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TProof*) G__getstructoffset())->ShowMissingFiles();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_235(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((TProof*) G__getstructoffset())->GetMissingFiles((TQueryResult*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((TProof*) G__getstructoffset())->GetMissingFiles());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_236(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TProof*) G__getstructoffset())->AddInputData((TObject*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TProof*) G__getstructoffset())->AddInputData((TObject*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_237(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProof*) G__getstructoffset())->SetInputDataFile((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_238(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TProof*) G__getstructoffset())->ClearInputData((TObject*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TProof*) G__getstructoffset())->ClearInputData();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_239(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProof*) G__getstructoffset())->ClearInputData((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_240(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProof*) G__getstructoffset())->AddFeedback((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_241(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProof*) G__getstructoffset())->RemoveFeedback((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_242(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProof*) G__getstructoffset())->ClearFeedback();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_243(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TProof*) G__getstructoffset())->ShowFeedback();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_244(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TProof*) G__getstructoffset())->GetFeedbackList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_245(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((TProof*) G__getstructoffset())->GetListOfQueries((Option_t*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((TProof*) G__getstructoffset())->GetListOfQueries());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_246(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->GetNumberOfQueries());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_247(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->GetNumberOfDrawQueries());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_248(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TProof*) G__getstructoffset())->GetQueryResults());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_249(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((TProof*) G__getstructoffset())->GetQueryResult((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((TProof*) G__getstructoffset())->GetQueryResult());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_250(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProof*) G__getstructoffset())->GetMaxQueries();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_251(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProof*) G__getstructoffset())->SetMaxDrawQueries((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_252(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TProof*) G__getstructoffset())->ShowQueries((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TProof*) G__getstructoffset())->ShowQueries();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_253(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TProof*) G__getstructoffset())->IsDataReady(*(Long64_t*) G__Longlongref(&libp->para[0]), *(Long64_t*) G__Longlongref(&libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_254(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TProof*) G__getstructoffset())->SetActive((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TProof*) G__getstructoffset())->SetActive();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_255(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProof*) G__getstructoffset())->LogMessage((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_256(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProof*) G__getstructoffset())->Progress((Long64_t) G__Longlong(libp->para[0]), (Long64_t) G__Longlong(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_257(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProof*) G__getstructoffset())->Progress(
(Long64_t) G__Longlong(libp->para[0]), (Long64_t) G__Longlong(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_258(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProof*) G__getstructoffset())->Progress(
(Long64_t) G__Longlong(libp->para[0]), (Long64_t) G__Longlong(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Float_t) G__double(libp->para[9]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_259(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProof*) G__getstructoffset())->Feedback((TList*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_260(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProof*) G__getstructoffset())->QueryResultReady((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_261(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProof*) G__getstructoffset())->CloseProgressDialog();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_262(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProof*) G__getstructoffset())->ResetProgressDialog((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2]), (Long64_t) G__Longlong(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_263(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProof*) G__getstructoffset())->StartupMessage((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_264(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProof*) G__getstructoffset())->DataSetStatus((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_265(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProof*) G__getstructoffset())->SendDataSetStatus((const char*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_266(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TProof*) G__getstructoffset())->GetLog((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TProof*) G__getstructoffset())->GetLog((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TProof*) G__getstructoffset())->GetLog();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_267(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TProof*) G__getstructoffset())->GetLastLog());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_268(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProof*) G__getstructoffset())->PutLog((TQueryResult*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_269(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TProof*) G__getstructoffset())->ShowLog((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TProof*) G__getstructoffset())->ShowLog();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_270(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProof*) G__getstructoffset())->ShowLog((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_271(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TProof*) G__getstructoffset())->SendingLogToWindow());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_272(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProof*) G__getstructoffset())->SendLogToWindow((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_273(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProof*) G__getstructoffset())->ResetProgressDialogStatus();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_274(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TProof*) G__getstructoffset())->GetTreeHeader((TDSet*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_275(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TProof*) G__getstructoffset())->GetOutputNames());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_276(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProof*) G__getstructoffset())->AddChain((TChain*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_277(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProof*) G__getstructoffset())->RemoveChain((TChain*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_278(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TProof*) G__getstructoffset())->CreateDrawFeedback());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_279(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProof*) G__getstructoffset())->SetDrawFeedbackOption((TDrawFeedback*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_280(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProof*) G__getstructoffset())->DeleteDrawFeedback((TDrawFeedback*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_281(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TProof*) G__getstructoffset())->Detach((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TProof*) G__getstructoffset())->Detach();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_282(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TProof*) G__getstructoffset())->SetAlias((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TProof*) G__getstructoffset())->SetAlias();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_283(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TProof*) G__getstructoffset())->GetManager());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_284(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProof*) G__getstructoffset())->SetManager((TProofMgr*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_285(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->ActivateWorker((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_286(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TProof*) G__getstructoffset())->DeactivateWorker((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_287(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TProof*) G__getstructoffset())->GetDataPoolUrl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_288(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProof*) G__getstructoffset())->SetDataPoolUrl((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_289(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProof*) G__getstructoffset())->SetPrintProgress((PrintProgress_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_290(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TProof*) G__getstructoffset())->SetProgressDialog((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TProof*) G__getstructoffset())->SetProgressDialog();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_291(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 85, (long) TProof::Open((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) TProof::Open((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) TProof::Open((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) TProof::Open((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) TProof::Open());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_292(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      TProof::LogViewer((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      TProof::LogViewer((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      TProof::LogViewer();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_293(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TProof::Mgr((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_294(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      TProof::Reset((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      TProof::Reset((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_295(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TProof::AddEnvVar((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_296(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TProof::DelEnvVar((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_297(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TProof::GetEnvVars());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_298(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TProof::ResetEnvVars();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_299(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProof::GetParameter((TCollection*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(TString*) libp->para[2].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_300(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProof::GetParameter((TCollection*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(Int_t*) G__Intref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_301(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProof::GetParameter((TCollection*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(Long_t*) G__Longref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_302(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProof::GetParameter((TCollection*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(Long64_t*) G__Longlongref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_303(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProof::GetParameter((TCollection*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_304(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TProof::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_305(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProof::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_306(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TProof::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_307(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TProof::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_311(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProof*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_312(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProof::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_313(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProof::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_314(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProof::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_122_0_315(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProof::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TProof G__TTProof;
static int G__G__Proof_122_0_316(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TProof*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TProof*) (soff+(sizeof(TProof)*i)))->~G__TTProof();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TProof*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TProof*) (soff))->~G__TTProof();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TProofChain */
static int G__G__Proof_123_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TProofChain* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofChain[n];
     } else {
       p = new((void*) gvp) TProofChain[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofChain;
     } else {
       p = new((void*) gvp) TProofChain;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_TProofChain));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_123_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TProofChain* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TProofChain((TChain*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TProofChain((TChain*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_TProofChain));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_123_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TProofChain* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TProofChain((TDSet*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TProofChain((TDSet*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_TProofChain));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_123_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TProofChain*) G__getstructoffset())->Debug());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_123_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TProofChain*) G__getstructoffset())->GetMakeClass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_123_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TProofChain*) G__getstructoffset())->GetPlayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_123_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TProofChain*) G__getstructoffset())->HasTreeHeader());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_123_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofChain*) G__getstructoffset())->Progress((Long64_t) G__Longlong(libp->para[0]), (Long64_t) G__Longlong(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_123_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letLonglong(result7, 110, (G__int64) ((TProofChain*) G__getstructoffset())->Process((TSelector*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2]), (Long64_t) G__Longlong(libp->para[3])));
      break;
   case 3:
      G__letLonglong(result7, 110, (G__int64) ((TProofChain*) G__getstructoffset())->Process((TSelector*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2])));
      break;
   case 2:
      G__letLonglong(result7, 110, (G__int64) ((TProofChain*) G__getstructoffset())->Process((TSelector*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])));
      break;
   case 1:
      G__letLonglong(result7, 110, (G__int64) ((TProofChain*) G__getstructoffset())->Process((TSelector*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_123_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofChain*) G__getstructoffset())->ConnectProof();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_123_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofChain*) G__getstructoffset())->ReleaseProof();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_123_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TProofChain::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_123_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofChain::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_123_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TProofChain::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_123_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TProofChain::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_123_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofChain*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_123_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofChain::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_123_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofChain::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_123_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofChain::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_123_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofChain::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TProofChain G__TTProofChain;
static int G__G__Proof_123_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TProofChain*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TProofChain*) (soff+(sizeof(TProofChain)*i)))->~G__TTProofChain();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TProofChain*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TProofChain*) (soff))->~G__TTProofChain();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSetElement */
static int G__G__Proof_125_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TDSetElement* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TDSetElement[n];
     } else {
       p = new((void*) gvp) TDSetElement[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TDSetElement;
     } else {
       p = new((void*) gvp) TDSetElement;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_TDSetElement));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_125_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TDSetElement* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TDSetElement(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Long64_t) G__Longlong(libp->para[3])
, (Long64_t) G__Longlong(libp->para[4]), (const char*) G__int(libp->para[5])
, (const char*) G__int(libp->para[6]));
     } else {
       p = new((void*) gvp) TDSetElement(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Long64_t) G__Longlong(libp->para[3])
, (Long64_t) G__Longlong(libp->para[4]), (const char*) G__int(libp->para[5])
, (const char*) G__int(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TDSetElement(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Long64_t) G__Longlong(libp->para[3])
, (Long64_t) G__Longlong(libp->para[4]), (const char*) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) TDSetElement(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Long64_t) G__Longlong(libp->para[3])
, (Long64_t) G__Longlong(libp->para[4]), (const char*) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TDSetElement(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Long64_t) G__Longlong(libp->para[3])
, (Long64_t) G__Longlong(libp->para[4]));
     } else {
       p = new((void*) gvp) TDSetElement(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Long64_t) G__Longlong(libp->para[3])
, (Long64_t) G__Longlong(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TDSetElement(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Long64_t) G__Longlong(libp->para[3]));
     } else {
       p = new((void*) gvp) TDSetElement(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Long64_t) G__Longlong(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TDSetElement(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TDSetElement(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TDSetElement((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TDSetElement((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TDSetElement((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TDSetElement((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_TDSetElement));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_125_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TDSetElement* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TDSetElement(*(TDSetElement*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TDSetElement(*(TDSetElement*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_TDSetElement));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_125_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TDSetElement*) G__getstructoffset())->GetListOfFriends());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_125_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDSetElement*) G__getstructoffset())->AddFriend((TDSetElement*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_125_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDSetElement*) G__getstructoffset())->DeleteFriends();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_125_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TDSetElement*) G__getstructoffset())->GetFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_125_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((const TDSetElement*) G__getstructoffset())->GetFirst());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_125_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDSetElement*) G__getstructoffset())->SetFirst((Long64_t) G__Longlong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_125_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((const TDSetElement*) G__getstructoffset())->GetNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_125_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letLonglong(result7, 110, (G__int64) ((TDSetElement*) G__getstructoffset())->GetEntries((Bool_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letLonglong(result7, 110, (G__int64) ((TDSetElement*) G__getstructoffset())->GetEntries((Bool_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letLonglong(result7, 110, (G__int64) ((TDSetElement*) G__getstructoffset())->GetEntries());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_125_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDSetElement*) G__getstructoffset())->SetEntries((Long64_t) G__Longlong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_125_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TDSetElement*) G__getstructoffset())->GetMsd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_125_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDSetElement*) G__getstructoffset())->SetNum((Long64_t) G__Longlong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_125_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TDSetElement*) G__getstructoffset())->GetValid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_125_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TDSetElement*) G__getstructoffset())->GetObjName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_125_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TDSetElement*) G__getstructoffset())->GetDirectory());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_125_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TDSetElement*) G__getstructoffset())->GetDataSet());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_125_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDSetElement*) G__getstructoffset())->SetDataSet((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_125_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDSetElement*) G__getstructoffset())->AddAssocObj((TObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_125_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TDSetElement*) G__getstructoffset())->GetListOfAssocObjs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_125_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((TDSetElement*) G__getstructoffset())->GetAssocObj((Long64_t) G__Longlong(libp->para[0]), (Bool_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((TDSetElement*) G__getstructoffset())->GetAssocObj((Long64_t) G__Longlong(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_125_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((const TDSetElement*) G__getstructoffset())->GetTDSetOffset());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_125_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDSetElement*) G__getstructoffset())->SetTDSetOffset((Long64_t) G__Longlong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_125_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((TDSetElement*) G__getstructoffset())->SetEntryList((TObject*) G__int(libp->para[0]), (Long64_t) G__Longlong(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((TDSetElement*) G__getstructoffset())->SetEntryList((TObject*) G__int(libp->para[0]), (Long64_t) G__Longlong(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TDSetElement*) G__getstructoffset())->SetEntryList((TObject*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_125_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TDSetElement*) G__getstructoffset())->GetEntryList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_125_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDSetElement*) G__getstructoffset())->Validate((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_125_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDSetElement*) G__getstructoffset())->Validate((TDSetElement*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_125_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDSetElement*) G__getstructoffset())->Invalidate();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_125_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDSetElement*) G__getstructoffset())->SetValid();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_125_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((TDSetElement*) G__getstructoffset())->Lookup((Bool_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((TDSetElement*) G__getstructoffset())->Lookup());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_125_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDSetElement*) G__getstructoffset())->SetLookedUp();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_125_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((TDSetElement*) G__getstructoffset())->GetFileInfo((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((TDSetElement*) G__getstructoffset())->GetFileInfo());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_125_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TDSetElement*) G__getstructoffset())->MergeElement((TDSetElement*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_125_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TDSetElement::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_125_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDSetElement::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_125_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TDSetElement::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_125_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TDSetElement::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_125_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDSetElement*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_125_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDSetElement::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_125_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TDSetElement::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_125_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDSetElement::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_125_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TDSetElement::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSetElement G__TTDSetElement;
static int G__G__Proof_125_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TDSetElement*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TDSetElement*) (soff+(sizeof(TDSetElement)*i)))->~G__TTDSetElement();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TDSetElement*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TDSetElement*) (soff))->~G__TTDSetElement();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<TDSetElement*,TString> */
static int G__G__Proof_126_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pair<TDSetElement*,TString>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pair<TDSetElement*,TString>[n];
     } else {
       p = new((void*) gvp) pair<TDSetElement*,TString>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pair<TDSetElement*,TString>;
     } else {
       p = new((void*) gvp) pair<TDSetElement*,TString>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_pairlETDSetElementmUcOTStringgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_126_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pair<TDSetElement*,TString>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new pair<TDSetElement*,TString>(libp->para[0].ref ? *(TDSetElement**) libp->para[0].ref : *(TDSetElement**) (void*) (&G__Mlong(libp->para[0])), *(TString*) libp->para[1].ref);
   } else {
     p = new((void*) gvp) pair<TDSetElement*,TString>(libp->para[0].ref ? *(TDSetElement**) libp->para[0].ref : *(TDSetElement**) (void*) (&G__Mlong(libp->para[0])), *(TString*) libp->para[1].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_pairlETDSetElementmUcOTStringgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Proof_126_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   pair<TDSetElement*,TString>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new pair<TDSetElement*,TString>(*(pair<TDSetElement*,TString>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_pairlETDSetElementmUcOTStringgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<TDSetElement*,TString> G__TpairlETDSetElementmUcOTStringgR;
static int G__G__Proof_126_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (pair<TDSetElement*,TString>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((pair<TDSetElement*,TString>*) (soff+(sizeof(pair<TDSetElement*,TString>)*i)))->~G__TpairlETDSetElementmUcOTStringgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (pair<TDSetElement*,TString>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((pair<TDSetElement*,TString>*) (soff))->~G__TpairlETDSetElementmUcOTStringgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > > */
static int G__G__Proof_128_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >[n];
     } else {
       p = new((void*) gvp) list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >;
     } else {
       p = new((void*) gvp) list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_listlEpairlETDSetElementmUcOTStringgRcOallocatorlEpairlETDSetElementmUcOTStringgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_128_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::iterator* pobj;
         list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::iterator xobj = ((list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >*) G__getstructoffset())->begin();
         pobj = new list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_128_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::iterator* pobj;
         list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::iterator xobj = ((list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >*) G__getstructoffset())->end();
         pobj = new list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_128_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::reverse_iterator* pobj;
         list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::reverse_iterator xobj = ((list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >*) G__getstructoffset())->rbegin();
         pobj = new list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_128_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::reverse_iterator* pobj;
         list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::reverse_iterator xobj = ((list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >*) G__getstructoffset())->rend();
         pobj = new list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_128_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_128_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_128_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_128_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<TDSetElement*,TString>& obj = ((const list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_128_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<TDSetElement*,TString>& obj = ((const list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_128_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >*) G__getstructoffset())->swap(*(list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_128_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::iterator* pobj;
         list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::iterator xobj = ((list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >*) G__getstructoffset())->insert(*((list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::iterator*) G__int(libp->para[0])), *(pair<TDSetElement*,TString>*) libp->para[1].ref);
         pobj = new list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_128_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >*) G__getstructoffset())->insert(*((list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::iterator*) G__int(libp->para[0])), (pair<TDSetElement*,TString>*) G__int(libp->para[1])
, (pair<TDSetElement*,TString>*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_128_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >*) G__getstructoffset())->insert(*((list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::iterator*) G__int(libp->para[0])), *((list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::iterator*) G__int(libp->para[1]))
, *((list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_128_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >*) G__getstructoffset())->insert(*((list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::iterator*) G__int(libp->para[0])), (list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::size_type) G__int(libp->para[1])
, *(pair<TDSetElement*,TString>*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_128_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >*) G__getstructoffset())->push_front(*(pair<TDSetElement*,TString>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_128_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >*) G__getstructoffset())->push_back(*(pair<TDSetElement*,TString>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_128_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >*) G__getstructoffset())->resize((list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_128_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >*) G__getstructoffset())->resize((list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::size_type) G__int(libp->para[0]), *((pair<TDSetElement*,TString>*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_128_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >*) G__getstructoffset())->erase(*((list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_128_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >*) G__getstructoffset())->erase(*((list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::iterator*) G__int(libp->para[0])), *((list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_128_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_128_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >*) G__getstructoffset())->pop_front();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_128_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_128_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >((list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::size_type) G__int(libp->para[0]), *(pair<TDSetElement*,TString>*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >((list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::size_type) G__int(libp->para[0]), *(pair<TDSetElement*,TString>*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >((list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >((list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_listlEpairlETDSetElementmUcOTStringgRcOallocatorlEpairlETDSetElementmUcOTStringgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_128_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >((pair<TDSetElement*,TString>*) G__int(libp->para[0]), (pair<TDSetElement*,TString>*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >((pair<TDSetElement*,TString>*) G__int(libp->para[0]), (pair<TDSetElement*,TString>*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_listlEpairlETDSetElementmUcOTStringgRcOallocatorlEpairlETDSetElementmUcOTStringgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_128_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >(*((list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::const_iterator*) G__int(libp->para[0])), *((list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >(*((list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::const_iterator*) G__int(libp->para[0])), *((list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_listlEpairlETDSetElementmUcOTStringgRcOallocatorlEpairlETDSetElementmUcOTStringgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_128_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >(*(list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >(*(list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_listlEpairlETDSetElementmUcOTStringgRcOallocatorlEpairlETDSetElementmUcOTStringgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_128_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >& obj = ((list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >*) G__getstructoffset())->operator=(*(list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_128_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >*) G__getstructoffset())->splice(*((list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::iterator*) G__int(libp->para[0])), *(list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_128_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >*) G__getstructoffset())->splice(*((list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::iterator*) G__int(libp->para[0])), *(list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >*) libp->para[1].ref
, *((list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_128_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >*) G__getstructoffset())->splice(*((list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::iterator*) G__int(libp->para[0])), *(list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >*) libp->para[1].ref
, *((list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::iterator*) G__int(libp->para[2])), *((list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::iterator*) G__int(libp->para[3])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_128_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >*) G__getstructoffset())->remove(*(pair<TDSetElement*,TString>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_128_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >*) G__getstructoffset())->unique();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_128_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >*) G__getstructoffset())->merge(*(list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_128_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >*) G__getstructoffset())->reverse();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_128_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >*) G__getstructoffset())->sort();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > > G__TlistlEpairlETDSetElementmUcOTStringgRcOallocatorlEpairlETDSetElementmUcOTStringgRsPgRsPgR;
static int G__G__Proof_128_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >*) (soff+(sizeof(list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >)*i)))->~G__TlistlEpairlETDSetElementmUcOTStringgRcOallocatorlEpairlETDSetElementmUcOTStringgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >*) (soff))->~G__TlistlEpairlETDSetElementmUcOTStringgRcOallocatorlEpairlETDSetElementmUcOTStringgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TProofServ */
static int G__G__Proof_133_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TProofServ* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofServ(
(Int_t*) G__int(libp->para[0]), (char**) G__int(libp->para[1])
, (FILE*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TProofServ(
(Int_t*) G__int(libp->para[0]), (char**) G__int(libp->para[1])
, (FILE*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofServ((Int_t*) G__int(libp->para[0]), (char**) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TProofServ((Int_t*) G__int(libp->para[0]), (char**) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_TProofServ));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TProofServ*) G__getstructoffset())->CreateServer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TProofServ*) G__getstructoffset())->GetProof());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TProofServ*) G__getstructoffset())->GetService());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TProofServ*) G__getstructoffset())->GetConfDir());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TProofServ*) G__getstructoffset())->GetConfFile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TProofServ*) G__getstructoffset())->GetUser());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TProofServ*) G__getstructoffset())->GetGroup());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TProofServ*) G__getstructoffset())->GetWorkDir());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TProofServ*) G__getstructoffset())->GetImage());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TProofServ*) G__getstructoffset())->GetSessionTag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TProofServ*) G__getstructoffset())->GetSessionDir());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TProofServ*) G__getstructoffset())->GetPackageDir());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TProofServ*) G__getstructoffset())->GetDataDir());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TProofServ*) G__getstructoffset())->GetProtocol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TProofServ*) G__getstructoffset())->GetOrdinal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TProofServ*) G__getstructoffset())->GetGroupId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TProofServ*) G__getstructoffset())->GetGroupSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TProofServ*) G__getstructoffset())->GetLogLevel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TProofServ*) G__getstructoffset())->GetSocket());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TProofServ*) G__getstructoffset())->GetRealTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TProofServ*) G__getstructoffset())->GetCpuTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TProofServ*) G__getstructoffset())->GetQuerySeqNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TProofServ*) G__getstructoffset())->GetTotSessions());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TProofServ*) G__getstructoffset())->GetActSessions());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TProofServ*) G__getstructoffset())->GetEffSessions());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TProofServ*) G__getstructoffset())->GetEnabledPackages());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TProofServ*) G__getstructoffset())->GetInflateFactor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) TProofServ::GetVirtMemMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) TProofServ::GetResMemMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) TProofServ::GetMemHWM());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) TProofServ::GetMemStop());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((const TProofServ*) G__getstructoffset())->GetMsgSizeHWM());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TProofServ*) G__getstructoffset())->GetPrefix());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofServ*) G__getstructoffset())->FlushLogFile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofServ*) G__getstructoffset())->TruncateLogFile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TProofServ*) G__getstructoffset())->GetCacheLock());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TProofServ*) G__getstructoffset())->CopyFromCache((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((TProofServ*) G__getstructoffset())->CopyToCache((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((TProofServ*) G__getstructoffset())->CopyToCache((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) ((TProofServ*) G__getstructoffset())->GetWorkers((TList*) G__int(libp->para[0]), *(Int_t*) G__Intref(&libp->para[1])
, (Bool_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((TProofServ*) G__getstructoffset())->GetWorkers((TList*) G__int(libp->para[0]), *(Int_t*) G__Intref(&libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TProofServ*) G__getstructoffset())->HandleSocketInput((TMessage*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofServ*) G__getstructoffset())->HandleSocketInput();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofServ*) G__getstructoffset())->HandleUrgentData();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofServ*) G__getstructoffset())->HandleSigPipe();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofServ*) G__getstructoffset())->HandleTermination();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofServ*) G__getstructoffset())->Interrupt();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TProofServ*) G__getstructoffset())->IsEndMaster());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TProofServ*) G__getstructoffset())->IsMaster());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TProofServ*) G__getstructoffset())->IsParallel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TProofServ*) G__getstructoffset())->IsTopMaster());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofServ*) G__getstructoffset())->RestartComputeTime();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TProofServ*) G__getstructoffset())->Get((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((TProofServ*) G__getstructoffset())->GetNextPacket((Long64_t) G__Longlong(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((TProofServ*) G__getstructoffset())->GetNextPacket());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofServ*) G__getstructoffset())->ReleaseWorker((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofServ*) G__getstructoffset())->Reset((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TProofServ*) G__getstructoffset())->ReceiveFile((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((TProofServ*) G__getstructoffset())->SendAsynMessage((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((TProofServ*) G__getstructoffset())->SendAsynMessage((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_100(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((TProofServ*) G__getstructoffset())->SendLogFile((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((TProofServ*) G__getstructoffset())->SendLogFile((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TProofServ*) G__getstructoffset())->SendLogFile((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TProofServ*) G__getstructoffset())->SendLogFile();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_101(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofServ*) G__getstructoffset())->SendStatistics();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_102(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TProofServ*) G__getstructoffset())->SendParallel((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TProofServ*) G__getstructoffset())->SendParallel();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_103(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((TProofServ*) G__getstructoffset())->UpdateSessionStatus((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((TProofServ*) G__getstructoffset())->UpdateSessionStatus());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_104(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofServ*) G__getstructoffset())->DisableTimeout();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_105(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofServ*) G__getstructoffset())->EnableTimeout();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_107(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TProofServ*) G__getstructoffset())->LogToMaster((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TProofServ*) G__getstructoffset())->LogToMaster();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_108(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 69, (long) TProofServ::SetErrorHandlerFile((FILE*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_109(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TProofServ::ErrorHandler((Int_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_110(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      TProofServ::ResolveKeywords(*(TString*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      TProofServ::ResolveKeywords(*(TString*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_111(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TProofServ::SetLastMsg((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_112(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) TProofServ::IsActive());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_113(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TProofServ::This());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_114(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TProofServ::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_115(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofServ::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_116(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TProofServ::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_117(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TProofServ::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_121(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofServ*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_122(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofServ::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_123(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofServ::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_124(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofServ::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_133_0_125(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofServ::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TProofServ G__TTProofServ;
static int G__G__Proof_133_0_126(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TProofServ*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TProofServ*) (soff+(sizeof(TProofServ)*i)))->~G__TTProofServ();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TProofServ*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TProofServ*) (soff))->~G__TTProofServ();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSetProxy */
static int G__G__Proof_134_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TDSetProxy* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TDSetProxy[n];
     } else {
       p = new((void*) gvp) TDSetProxy[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TDSetProxy;
     } else {
       p = new((void*) gvp) TDSetProxy;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_TDSetProxy));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_134_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TDSetProxy* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TDSetProxy(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TDSetProxy(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TDSetProxy((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TDSetProxy((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TDSetProxy((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TDSetProxy((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_TDSetProxy));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_134_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDSetProxy*) G__getstructoffset())->SetProofServ((TProofServ*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_134_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TDSetProxy::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_134_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDSetProxy::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_134_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TDSetProxy::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_134_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TDSetProxy::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_134_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDSetProxy*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_134_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDSetProxy::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_134_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TDSetProxy::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_134_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDSetProxy::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_134_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TDSetProxy::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSetProxy G__TTDSetProxy;
static int G__G__Proof_134_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TDSetProxy*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TDSetProxy*) (soff+(sizeof(TDSetProxy)*i)))->~G__TTDSetProxy();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TDSetProxy*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TDSetProxy*) (soff))->~G__TTDSetProxy();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDataSetManager */
static int G__G__Proof_151_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TDataSetManager* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TDataSetManager(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TDataSetManager(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TDataSetManager((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TDataSetManager((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TDataSetManager((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TDataSetManager((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TDataSetManager[n];
       } else {
         p = new((void*) gvp) TDataSetManager[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TDataSetManager;
       } else {
         p = new((void*) gvp) TDataSetManager;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_TDataSetManager));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_151_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TDataSetManager*) G__getstructoffset())->ClearCache((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_151_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((const TDataSetManager*) G__getstructoffset())->GetAvgFileSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_151_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((TDataSetManager*) G__getstructoffset())->GetDataSet((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((TDataSetManager*) G__getstructoffset())->GetDataSet((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_151_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((TDataSetManager*) G__getstructoffset())->GetDataSets((const char*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((TDataSetManager*) G__getstructoffset())->GetDataSets((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_151_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TDataSetManager*) G__getstructoffset())->GetSubDataSets((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_151_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((TDataSetManager*) G__getstructoffset())->GetGroupQuota((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_151_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TDataSetManager*) G__getstructoffset())->GetGroupQuotaMap());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_151_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((TDataSetManager*) G__getstructoffset())->GetGroupUsed((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_151_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TDataSetManager*) G__getstructoffset())->ExistsDataSet((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_151_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDataSetManager*) G__getstructoffset())->MonitorUsedSpace((TVirtualMonitoringWriter*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_151_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letint(result7, 105, (long) ((TDataSetManager*) G__getstructoffset())->NotifyUpdate((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Long_t) G__int(libp->para[3])
, (const char*) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 105, (long) ((TDataSetManager*) G__getstructoffset())->NotifyUpdate((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Long_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 105, (long) ((TDataSetManager*) G__getstructoffset())->NotifyUpdate((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((TDataSetManager*) G__getstructoffset())->NotifyUpdate((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((TDataSetManager*) G__getstructoffset())->NotifyUpdate((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((TDataSetManager*) G__getstructoffset())->NotifyUpdate());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_151_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 7:
      G__letint(result7, 103, (long) ((TDataSetManager*) G__getstructoffset())->ParseUri(
(const char*) G__int(libp->para[0]), (TString*) G__int(libp->para[1])
, (TString*) G__int(libp->para[2]), (TString*) G__int(libp->para[3])
, (TString*) G__int(libp->para[4]), (Bool_t) G__int(libp->para[5])
, (Bool_t) G__int(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 103, (long) ((TDataSetManager*) G__getstructoffset())->ParseUri((const char*) G__int(libp->para[0]), (TString*) G__int(libp->para[1])
, (TString*) G__int(libp->para[2]), (TString*) G__int(libp->para[3])
, (TString*) G__int(libp->para[4]), (Bool_t) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 103, (long) ((TDataSetManager*) G__getstructoffset())->ParseUri((const char*) G__int(libp->para[0]), (TString*) G__int(libp->para[1])
, (TString*) G__int(libp->para[2]), (TString*) G__int(libp->para[3])
, (TString*) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 103, (long) ((TDataSetManager*) G__getstructoffset())->ParseUri((const char*) G__int(libp->para[0]), (TString*) G__int(libp->para[1])
, (TString*) G__int(libp->para[2]), (TString*) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 103, (long) ((TDataSetManager*) G__getstructoffset())->ParseUri((const char*) G__int(libp->para[0]), (TString*) G__int(libp->para[1])
, (TString*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((TDataSetManager*) G__getstructoffset())->ParseUri((const char*) G__int(libp->para[0]), (TString*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((TDataSetManager*) G__getstructoffset())->ParseUri((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_151_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDataSetManager*) G__getstructoffset())->ParseInitOpts((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_151_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TDataSetManager*) G__getstructoffset())->RemoveDataSet((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_151_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TDataSetManager*) G__getstructoffset())->RegisterDataSet((const char*) G__int(libp->para[0]), (TFileCollection*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_151_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TDataSetManager*) G__getstructoffset())->ScanDataSet((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_151_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((TDataSetManager*) G__getstructoffset())->ScanDataSet((const char*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((TDataSetManager*) G__getstructoffset())->ScanDataSet((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_151_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((TDataSetManager*) G__getstructoffset())->SetScanCounters((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((TDataSetManager*) G__getstructoffset())->SetScanCounters((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TDataSetManager*) G__getstructoffset())->SetScanCounters((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TDataSetManager*) G__getstructoffset())->SetScanCounters();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_151_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TDataSetManager*) G__getstructoffset())->ShowCache((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_151_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDataSetManager*) G__getstructoffset())->ShowQuota((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_151_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TDataSetManager*) G__getstructoffset())->ShowDataSets((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TDataSetManager*) G__getstructoffset())->ShowDataSets((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TDataSetManager*) G__getstructoffset())->ShowDataSets();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_151_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      {
         TString* pobj;
         TString xobj = TDataSetManager::CreateUri((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 3:
      {
         TString* pobj;
         TString xobj = TDataSetManager::CreateUri((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 2:
      {
         TString* pobj;
         TString xobj = TDataSetManager::CreateUri((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
         TString* pobj;
         TString xobj = TDataSetManager::CreateUri((const char*) G__int(libp->para[0]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         TString* pobj;
         TString xobj = TDataSetManager::CreateUri();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_151_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) TDataSetManager::CheckDataSetSrvMaps((TUrl*) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (TList*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) TDataSetManager::CheckDataSetSrvMaps((TUrl*) G__int(libp->para[0]), *(TString*) libp->para[1].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_151_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TDataSetManager::GetDataSetSrvMaps());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_151_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TDataSetManager::ParseDataSetSrvMaps(*(TString*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_151_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 13:
      G__letint(result7, 105, (long) TDataSetManager::ScanDataSet(
(TFileCollection*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]), (Int_t*) G__int(libp->para[5])
, (Int_t*) G__int(libp->para[6]), (Int_t*) G__int(libp->para[7])
, (TList*) G__int(libp->para[8]), (Long64_t) G__Longlong(libp->para[9])
, (const char*) G__int(libp->para[10]), (Int_t) G__int(libp->para[11])
, (const char*) G__int(libp->para[12])));
      break;
   case 12:
      G__letint(result7, 105, (long) TDataSetManager::ScanDataSet(
(TFileCollection*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]), (Int_t*) G__int(libp->para[5])
, (Int_t*) G__int(libp->para[6]), (Int_t*) G__int(libp->para[7])
, (TList*) G__int(libp->para[8]), (Long64_t) G__Longlong(libp->para[9])
, (const char*) G__int(libp->para[10]), (Int_t) G__int(libp->para[11])));
      break;
   case 11:
      G__letint(result7, 105, (long) TDataSetManager::ScanDataSet(
(TFileCollection*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]), (Int_t*) G__int(libp->para[5])
, (Int_t*) G__int(libp->para[6]), (Int_t*) G__int(libp->para[7])
, (TList*) G__int(libp->para[8]), (Long64_t) G__Longlong(libp->para[9])
, (const char*) G__int(libp->para[10])));
      break;
   case 10:
      G__letint(result7, 105, (long) TDataSetManager::ScanDataSet(
(TFileCollection*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]), (Int_t*) G__int(libp->para[5])
, (Int_t*) G__int(libp->para[6]), (Int_t*) G__int(libp->para[7])
, (TList*) G__int(libp->para[8]), (Long64_t) G__Longlong(libp->para[9])));
      break;
   case 9:
      G__letint(result7, 105, (long) TDataSetManager::ScanDataSet(
(TFileCollection*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]), (Int_t*) G__int(libp->para[5])
, (Int_t*) G__int(libp->para[6]), (Int_t*) G__int(libp->para[7])
, (TList*) G__int(libp->para[8])));
      break;
   case 8:
      G__letint(result7, 105, (long) TDataSetManager::ScanDataSet(
(TFileCollection*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]), (Int_t*) G__int(libp->para[5])
, (Int_t*) G__int(libp->para[6]), (Int_t*) G__int(libp->para[7])));
      break;
   case 7:
      G__letint(result7, 105, (long) TDataSetManager::ScanDataSet(
(TFileCollection*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]), (Int_t*) G__int(libp->para[5])
, (Int_t*) G__int(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 105, (long) TDataSetManager::ScanDataSet((TFileCollection*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]), (Int_t*) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 105, (long) TDataSetManager::ScanDataSet((TFileCollection*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 105, (long) TDataSetManager::ScanDataSet((TFileCollection*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 105, (long) TDataSetManager::ScanDataSet((TFileCollection*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) TDataSetManager::ScanDataSet((TFileCollection*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_151_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TDataSetManager::ScanFile((TFileInfo*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_151_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) TDataSetManager::FillMetaData((TFileInfo*) G__int(libp->para[0]), (TDirectory*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) TDataSetManager::FillMetaData((TFileInfo*) G__int(libp->para[0]), (TDirectory*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_151_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TDataSetManager::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_151_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDataSetManager::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_151_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TDataSetManager::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_151_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TDataSetManager::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_151_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDataSetManager*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_151_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDataSetManager::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_151_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TDataSetManager::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_151_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDataSetManager::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_151_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TDataSetManager::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDataSetManager G__TTDataSetManager;
static int G__G__Proof_151_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TDataSetManager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TDataSetManager*) (soff+(sizeof(TDataSetManager)*i)))->~G__TTDataSetManager();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TDataSetManager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TDataSetManager*) (soff))->~G__TTDataSetManager();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDataSetManagerFile */
static int G__G__Proof_154_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TDataSetManagerFile* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TDataSetManagerFile[n];
     } else {
       p = new((void*) gvp) TDataSetManagerFile[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TDataSetManagerFile;
     } else {
       p = new((void*) gvp) TDataSetManagerFile;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_TDataSetManagerFile));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_154_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TDataSetManagerFile* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TDataSetManagerFile(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) TDataSetManagerFile(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_TDataSetManagerFile));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_154_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TDataSetManagerFile* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TDataSetManagerFile((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TDataSetManagerFile((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_TDataSetManagerFile));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_154_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((TDataSetManagerFile*) G__getstructoffset())->ClearCache((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((TDataSetManagerFile*) G__getstructoffset())->ClearCache());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_154_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((TDataSetManagerFile*) G__getstructoffset())->ShowCache((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((TDataSetManagerFile*) G__getstructoffset())->ShowCache());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_154_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letint(result7, 85, (long) ((TDataSetManagerFile*) G__getstructoffset())->GetDataSet((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (TMD5**) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) ((TDataSetManagerFile*) G__getstructoffset())->GetDataSet((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) ((TDataSetManagerFile*) G__getstructoffset())->GetDataSet((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_154_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 85, (long) ((TDataSetManagerFile*) G__getstructoffset())->GetDataSets((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) ((TDataSetManagerFile*) G__getstructoffset())->GetDataSets((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((TDataSetManagerFile*) G__getstructoffset())->GetDataSets((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_154_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TDataSetManagerFile*) G__getstructoffset())->GetMSSUrl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_154_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TDataSetManagerFile*) G__getstructoffset())->GetStageOpts());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_154_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      G__letint(result7, 105, (long) ((TDataSetManagerFile*) G__getstructoffset())->WriteDataSet((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (TFileCollection*) G__int(libp->para[3])
, (UInt_t) G__int(libp->para[4]), (TMD5*) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 105, (long) ((TDataSetManagerFile*) G__getstructoffset())->WriteDataSet((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (TFileCollection*) G__int(libp->para[3])
, (UInt_t) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 105, (long) ((TDataSetManagerFile*) G__getstructoffset())->WriteDataSet((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (TFileCollection*) G__int(libp->para[3])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_154_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TDataSetManagerFile::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_154_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDataSetManagerFile::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_154_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TDataSetManagerFile::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_154_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TDataSetManagerFile::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_154_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDataSetManagerFile*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_154_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDataSetManagerFile::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_154_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TDataSetManagerFile::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_154_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDataSetManagerFile::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_154_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TDataSetManagerFile::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDataSetManagerFile G__TTDataSetManagerFile;
static int G__G__Proof_154_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TDataSetManagerFile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TDataSetManagerFile*) (soff+(sizeof(TDataSetManagerFile)*i)))->~G__TTDataSetManagerFile();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TDataSetManagerFile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TDataSetManagerFile*) (soff))->~G__TTDataSetManagerFile();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TProofDesc */
static int G__G__Proof_204_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TProofDesc* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofDesc(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (TProof*) G__int(libp->para[6]));
     } else {
       p = new((void*) gvp) TProofDesc(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (TProof*) G__int(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofDesc(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) TProofDesc(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofDesc(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TProofDesc(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofDesc(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TProofDesc(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofDesc(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TProofDesc(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofDesc((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TProofDesc((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofDesc((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TProofDesc((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TProofDesc[n];
       } else {
         p = new((void*) gvp) TProofDesc[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TProofDesc;
       } else {
         p = new((void*) gvp) TProofDesc;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_TProofDesc));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_204_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TProofDesc*) G__getstructoffset())->GetLocalId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_204_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TProofDesc*) G__getstructoffset())->GetProof());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_204_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TProofDesc*) G__getstructoffset())->GetRemoteId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_204_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TProofDesc*) G__getstructoffset())->GetStatus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_204_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TProofDesc*) G__getstructoffset())->GetUrl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_204_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TProofDesc*) G__getstructoffset())->IsIdle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_204_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TProofDesc*) G__getstructoffset())->IsRunning());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_204_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TProofDesc*) G__getstructoffset())->IsShuttingDown());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_204_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TProofDesc*) G__getstructoffset())->MatchId((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_204_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofDesc*) G__getstructoffset())->SetStatus((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_204_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofDesc*) G__getstructoffset())->SetProof((TProof*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_204_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofDesc*) G__getstructoffset())->SetRemoteId((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_204_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TProofDesc::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_204_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofDesc::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_204_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TProofDesc::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_204_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TProofDesc::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_204_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofDesc*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_204_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofDesc::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_204_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofDesc::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_204_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofDesc::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_204_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofDesc::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TProofDesc G__TTProofDesc;
static int G__G__Proof_204_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TProofDesc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TProofDesc*) (soff+(sizeof(TProofDesc)*i)))->~G__TTProofDesc();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TProofDesc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TProofDesc*) (soff))->~G__TTProofDesc();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TProofLog */
static int G__G__Proof_205_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TProofLog* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TProofLog(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (TProofMgr*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) TProofLog(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (TProofMgr*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_TProofLog));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_205_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((TProofLog*) G__getstructoffset())->Display((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((TProofLog*) G__getstructoffset())->Display((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TProofLog*) G__getstructoffset())->Display((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TProofLog*) G__getstructoffset())->Display();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_205_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TProofLog*) G__getstructoffset())->GetListOfLogs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_205_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((TProofLog*) G__getstructoffset())->Grep((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((TProofLog*) G__getstructoffset())->Grep((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_205_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofLog*) G__getstructoffset())->Prt((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_205_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 105, (long) ((TProofLog*) G__getstructoffset())->Retrieve((const char*) G__int(libp->para[0]), (TProofLog::ERetrieveOpt) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 105, (long) ((TProofLog*) G__getstructoffset())->Retrieve((const char*) G__int(libp->para[0]), (TProofLog::ERetrieveOpt) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((TProofLog*) G__getstructoffset())->Retrieve((const char*) G__int(libp->para[0]), (TProofLog::ERetrieveOpt) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((TProofLog*) G__getstructoffset())->Retrieve((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((TProofLog*) G__getstructoffset())->Retrieve());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_205_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) ((TProofLog*) G__getstructoffset())->Save((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((TProofLog*) G__getstructoffset())->Save((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((TProofLog*) G__getstructoffset())->Save((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((TProofLog*) G__getstructoffset())->Save());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_205_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TDatime* pobj;
         TDatime xobj = ((TProofLog*) G__getstructoffset())->StartTime();
         pobj = new TDatime(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_205_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TProofLog*) G__getstructoffset())->SetLogToBox((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TProofLog*) G__getstructoffset())->SetLogToBox();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_205_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TProofLog*) G__getstructoffset())->LogToBox());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_205_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TProofLog::SetMaxTransferSize((Long64_t) G__Longlong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_205_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TProofLog::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_205_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofLog::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_205_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TProofLog::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_205_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TProofLog::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_205_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofLog*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_205_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofLog::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_205_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofLog::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_205_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofLog::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_205_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofLog::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TProofLog G__TTProofLog;
static int G__G__Proof_205_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TProofLog*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TProofLog*) (soff+(sizeof(TProofLog)*i)))->~G__TTProofLog();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TProofLog*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TProofLog*) (soff))->~G__TTProofLog();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TProofMgr */
static int G__G__Proof_206_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TProofMgr* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofMgr(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TProofMgr(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofMgr((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TProofMgr((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofMgr((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TProofMgr((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_TProofMgr));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_206_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TProofMgr*) G__getstructoffset())->IsLite());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_206_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TProofMgr*) G__getstructoffset())->IsProofd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_206_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TProofMgr*) G__getstructoffset())->IsValid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_206_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofMgr*) G__getstructoffset())->SetInvalid();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_206_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((TProofMgr*) G__getstructoffset())->AttachSession((Int_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((TProofMgr*) G__getstructoffset())->AttachSession((Int_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_206_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((TProofMgr*) G__getstructoffset())->AttachSession((TProofDesc*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((TProofMgr*) G__getstructoffset())->AttachSession((TProofDesc*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_206_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) ((TProofMgr*) G__getstructoffset())->CreateSession((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((TProofMgr*) G__getstructoffset())->CreateSession((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((TProofMgr*) G__getstructoffset())->CreateSession((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((TProofMgr*) G__getstructoffset())->CreateSession());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_206_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TProofMgr*) G__getstructoffset())->DetachSession((Int_t) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TProofMgr*) G__getstructoffset())->DetachSession((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_206_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TProofMgr*) G__getstructoffset())->DetachSession((TProof*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TProofMgr*) G__getstructoffset())->DetachSession((TProof*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_206_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofMgr*) G__getstructoffset())->DiscardSession((TProof*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_206_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TProofMgr*) G__getstructoffset())->GetProofDesc((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_206_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TProofMgr*) G__getstructoffset())->GetProofDesc((TProof*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_206_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TProofMgr*) G__getstructoffset())->GetRemoteProtocol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_206_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 85, (long) ((TProofMgr*) G__getstructoffset())->GetSessionLogs((Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) ((TProofMgr*) G__getstructoffset())->GetSessionLogs((Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((TProofMgr*) G__getstructoffset())->GetSessionLogs((Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((TProofMgr*) G__getstructoffset())->GetSessionLogs((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((TProofMgr*) G__getstructoffset())->GetSessionLogs());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_206_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TProofMgr*) G__getstructoffset())->GetUrl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_206_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TProofMgr*) G__getstructoffset())->MatchUrl((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_206_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((TProofMgr*) G__getstructoffset())->QuerySessions((Option_t*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((TProofMgr*) G__getstructoffset())->QuerySessions());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_206_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TProofMgr*) G__getstructoffset())->ReadBuffer((const char*) G__int(libp->para[0]), (Long64_t) G__Longlong(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_206_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TProofMgr*) G__getstructoffset())->ReadBuffer((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_206_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((TProofMgr*) G__getstructoffset())->Reset((Bool_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((TProofMgr*) G__getstructoffset())->Reset((Bool_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((TProofMgr*) G__getstructoffset())->Reset());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_206_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofMgr*) G__getstructoffset())->ShowWorkers();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_206_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((TProofMgr*) G__getstructoffset())->SendMsgToUsers((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((TProofMgr*) G__getstructoffset())->SendMsgToUsers((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_206_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TProofMgr*) G__getstructoffset())->SetAlias((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TProofMgr*) G__getstructoffset())->SetAlias();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_206_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofMgr*) G__getstructoffset())->SetROOTVersion((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_206_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofMgr*) G__getstructoffset())->ShowROOTVersions();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_206_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofMgr*) G__getstructoffset())->ShutdownSession((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_206_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofMgr*) G__getstructoffset())->ShutdownSession((TProof*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_206_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) ((TProofMgr*) G__getstructoffset())->Cp((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((TProofMgr*) G__getstructoffset())->Cp((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((TProofMgr*) G__getstructoffset())->Cp((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_206_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((TProofMgr*) G__getstructoffset())->Find((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((TProofMgr*) G__getstructoffset())->Find((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TProofMgr*) G__getstructoffset())->Find((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TProofMgr*) G__getstructoffset())->Find();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_206_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((TProofMgr*) G__getstructoffset())->Grep((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((TProofMgr*) G__getstructoffset())->Grep((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TProofMgr*) G__getstructoffset())->Grep((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_206_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((TProofMgr*) G__getstructoffset())->Ls((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((TProofMgr*) G__getstructoffset())->Ls((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TProofMgr*) G__getstructoffset())->Ls((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TProofMgr*) G__getstructoffset())->Ls();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_206_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((TProofMgr*) G__getstructoffset())->More((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((TProofMgr*) G__getstructoffset())->More((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TProofMgr*) G__getstructoffset())->More((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_206_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) ((TProofMgr*) G__getstructoffset())->Rm((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((TProofMgr*) G__getstructoffset())->Rm((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((TProofMgr*) G__getstructoffset())->Rm((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_206_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((TProofMgr*) G__getstructoffset())->Tail((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((TProofMgr*) G__getstructoffset())->Tail((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TProofMgr*) G__getstructoffset())->Tail((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_206_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) ((TProofMgr*) G__getstructoffset())->Md5sum((const char*) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((TProofMgr*) G__getstructoffset())->Md5sum((const char*) G__int(libp->para[0]), *(TString*) libp->para[1].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_206_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) ((TProofMgr*) G__getstructoffset())->Stat((const char*) G__int(libp->para[0]), *(FileStat_t*) libp->para[1].ref
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((TProofMgr*) G__getstructoffset())->Stat((const char*) G__int(libp->para[0]), *(FileStat_t*) libp->para[1].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_206_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) ((TProofMgr*) G__getstructoffset())->GetFile((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((TProofMgr*) G__getstructoffset())->GetFile((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_206_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) ((TProofMgr*) G__getstructoffset())->PutFile((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((TProofMgr*) G__getstructoffset())->PutFile((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_206_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TProofMgr::GetListOfManagers());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_206_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TProofMgr::SetTXProofMgrHook((TProofMgr_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_206_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 85, (long) TProofMgr::Create((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) TProofMgr::Create((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) TProofMgr::Create((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) TProofMgr::Create((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_206_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TProofMgr::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_206_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofMgr::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_206_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TProofMgr::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_206_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TProofMgr::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_206_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofMgr*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_206_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofMgr::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_206_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofMgr::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_206_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofMgr::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_206_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofMgr::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TProofMgr G__TTProofMgr;
static int G__G__Proof_206_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TProofMgr*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TProofMgr*) (soff+(sizeof(TProofMgr)*i)))->~G__TTProofMgr();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TProofMgr*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TProofMgr*) (soff))->~G__TTProofMgr();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TProofDebug */
// automatic default constructor
static int G__G__Proof_209_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TProofDebug *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofDebug[n];
     } else {
       p = new((void*) gvp) TProofDebug[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofDebug;
     } else {
       p = new((void*) gvp) TProofDebug;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_TProofDebug));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Proof_209_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TProofDebug* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TProofDebug(*(TProofDebug*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_TProofDebug));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TProofDebug G__TTProofDebug;
static int G__G__Proof_209_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TProofDebug*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TProofDebug*) (soff+(sizeof(TProofDebug)*i)))->~G__TTProofDebug();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TProofDebug*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TProofDebug*) (soff))->~G__TTProofDebug();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Proof_209_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TProofDebug* dest = (TProofDebug*) G__getstructoffset();
   *dest = *(TProofDebug*) libp->para[0].ref;
   const TProofDebug& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TProofOutputList */
static int G__G__Proof_228_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TProofOutputList* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofOutputList((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TProofOutputList((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TProofOutputList[n];
       } else {
         p = new((void*) gvp) TProofOutputList[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TProofOutputList;
       } else {
         p = new((void*) gvp) TProofOutputList;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_TProofOutputList));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_228_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TProofOutputList* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TProofOutputList((TObject*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TProofOutputList((TObject*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_TProofOutputList));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_228_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofOutputList*) G__getstructoffset())->AttachList((TList*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_228_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TProofOutputList*) G__getstructoffset())->GetDontShowList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_228_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TProofOutputList::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_228_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofOutputList::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_228_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TProofOutputList::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_228_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TProofOutputList::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_228_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofOutputList*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_228_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofOutputList::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_228_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofOutputList::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_228_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofOutputList::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_228_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofOutputList::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TProofOutputList G__TTProofOutputList;
static int G__G__Proof_228_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TProofOutputList*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TProofOutputList*) (soff+(sizeof(TProofOutputList)*i)))->~G__TTProofOutputList();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TProofOutputList*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TProofOutputList*) (soff))->~G__TTProofOutputList();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TVirtualProofPlayer */
static int G__G__Proof_236_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letLonglong(result7, 110, (G__int64) ((TVirtualProofPlayer*) G__getstructoffset())->Process((TDSet*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2]), (Long64_t) G__Longlong(libp->para[3])
, (Long64_t) G__Longlong(libp->para[4])));
      break;
   case 4:
      G__letLonglong(result7, 110, (G__int64) ((TVirtualProofPlayer*) G__getstructoffset())->Process((TDSet*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2]), (Long64_t) G__Longlong(libp->para[3])));
      break;
   case 3:
      G__letLonglong(result7, 110, (G__int64) ((TVirtualProofPlayer*) G__getstructoffset())->Process((TDSet*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2])));
      break;
   case 2:
      G__letLonglong(result7, 110, (G__int64) ((TVirtualProofPlayer*) G__getstructoffset())->Process((TDSet*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letLonglong(result7, 110, (G__int64) ((TVirtualProofPlayer*) G__getstructoffset())->Finalize((Bool_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letLonglong(result7, 110, (G__int64) ((TVirtualProofPlayer*) G__getstructoffset())->Finalize((Bool_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letLonglong(result7, 110, (G__int64) ((TVirtualProofPlayer*) G__getstructoffset())->Finalize());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((TVirtualProofPlayer*) G__getstructoffset())->Finalize((TQueryResult*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      G__letLonglong(result7, 110, (G__int64) ((TVirtualProofPlayer*) G__getstructoffset())->DrawSelect((TDSet*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Option_t*) G__int(libp->para[3])
, (Long64_t) G__Longlong(libp->para[4]), (Long64_t) G__Longlong(libp->para[5])));
      break;
   case 5:
      G__letLonglong(result7, 110, (G__int64) ((TVirtualProofPlayer*) G__getstructoffset())->DrawSelect((TDSet*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Option_t*) G__int(libp->para[3])
, (Long64_t) G__Longlong(libp->para[4])));
      break;
   case 4:
      G__letLonglong(result7, 110, (G__int64) ((TVirtualProofPlayer*) G__getstructoffset())->DrawSelect((TDSet*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Option_t*) G__int(libp->para[3])));
      break;
   case 3:
      G__letLonglong(result7, 110, (G__int64) ((TVirtualProofPlayer*) G__getstructoffset())->DrawSelect((TDSet*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TVirtualProofPlayer*) G__getstructoffset())->GetDrawArgs((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2]), *(TString*) libp->para[3].ref
, *(TString*) libp->para[4].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVirtualProofPlayer*) G__getstructoffset())->HandleGetTreeHeader((TMessage*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVirtualProofPlayer*) G__getstructoffset())->HandleRecvHisto((TMessage*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TVirtualProofPlayer*) G__getstructoffset())->StopProcess((Bool_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TVirtualProofPlayer*) G__getstructoffset())->StopProcess((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVirtualProofPlayer*) G__getstructoffset())->AddInput((TObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVirtualProofPlayer*) G__getstructoffset())->ClearInput();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TVirtualProofPlayer*) G__getstructoffset())->GetOutput((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TVirtualProofPlayer*) G__getstructoffset())->GetOutputList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TVirtualProofPlayer*) G__getstructoffset())->GetInputList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TVirtualProofPlayer*) G__getstructoffset())->GetListOfResults());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVirtualProofPlayer*) G__getstructoffset())->AddQueryResult((TQueryResult*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TVirtualProofPlayer*) G__getstructoffset())->GetCurrentQuery());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TVirtualProofPlayer*) G__getstructoffset())->GetQueryResult((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVirtualProofPlayer*) G__getstructoffset())->RemoveQueryResult((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVirtualProofPlayer*) G__getstructoffset())->SetCurrentQuery((TQueryResult*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVirtualProofPlayer*) G__getstructoffset())->SetMaxDrawQueries((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVirtualProofPlayer*) G__getstructoffset())->RestorePreviousQuery();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TVirtualProofPlayer*) G__getstructoffset())->AddOutputObject((TObject*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVirtualProofPlayer*) G__getstructoffset())->AddOutput((TList*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVirtualProofPlayer*) G__getstructoffset())->StoreOutput((TList*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVirtualProofPlayer*) G__getstructoffset())->StoreFeedback((TObject*) G__int(libp->para[0]), (TList*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVirtualProofPlayer*) G__getstructoffset())->Progress((Long64_t) G__Longlong(libp->para[0]), (Long64_t) G__Longlong(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVirtualProofPlayer*) G__getstructoffset())->Progress((TSlave*) G__int(libp->para[0]), (Long64_t) G__Longlong(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVirtualProofPlayer*) G__getstructoffset())->Progress(
(Long64_t) G__Longlong(libp->para[0]), (Long64_t) G__Longlong(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVirtualProofPlayer*) G__getstructoffset())->Progress(
(TSlave*) G__int(libp->para[0]), (Long64_t) G__Longlong(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2]), (Long64_t) G__Longlong(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]), (Float_t) G__double(libp->para[7]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVirtualProofPlayer*) G__getstructoffset())->Progress((TProofProgressInfo*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVirtualProofPlayer*) G__getstructoffset())->Progress((TSlave*) G__int(libp->para[0]), (TProofProgressInfo*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVirtualProofPlayer*) G__getstructoffset())->Feedback((TList*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TVirtualProofPlayer*) G__getstructoffset())->CreateDrawFeedback((TProof*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVirtualProofPlayer*) G__getstructoffset())->SetDrawFeedbackOption((TDrawFeedback*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVirtualProofPlayer*) G__getstructoffset())->DeleteDrawFeedback((TDrawFeedback*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TVirtualProofPlayer*) G__getstructoffset())->GetNextPacket((TSlave*) G__int(libp->para[0]), (TMessage*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TVirtualProofPlayer*) G__getstructoffset())->ReinitSelector((TQueryResult*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVirtualProofPlayer*) G__getstructoffset())->UpdateAutoBin(
(const char*) G__int(libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3])
, *(Double_t*) G__Doubleref(&libp->para[4]), *(Double_t*) G__Doubleref(&libp->para[5])
, *(Double_t*) G__Doubleref(&libp->para[6]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVirtualProofPlayer*) G__getstructoffset())->MergeOutput();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TVirtualProofPlayer*) G__getstructoffset())->IsClient());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TVirtualProofPlayer*) G__getstructoffset())->GetExitStatus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((const TVirtualProofPlayer*) G__getstructoffset())->GetEventsProcessed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVirtualProofPlayer*) G__getstructoffset())->AddEventsProcessed((Long64_t) G__Longlong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TVirtualProofPlayer*) G__getstructoffset())->GetProgressStatus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TVirtualProofPlayer*) G__getstructoffset())->SetDispatchTimer((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TVirtualProofPlayer*) G__getstructoffset())->SetDispatchTimer();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((TVirtualProofPlayer*) G__getstructoffset())->SetStopTimer((Bool_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((TVirtualProofPlayer*) G__getstructoffset())->SetStopTimer((Bool_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TVirtualProofPlayer*) G__getstructoffset())->SetStopTimer((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TVirtualProofPlayer*) G__getstructoffset())->SetStopTimer();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVirtualProofPlayer*) G__getstructoffset())->SetInitTime();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((TVirtualProofPlayer*) G__getstructoffset())->GetCacheSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TVirtualProofPlayer*) G__getstructoffset())->GetLearnEntries());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TVirtualProofPlayer*) G__getstructoffset())->GetPacketizer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) TVirtualProofPlayer::Create((const char*) G__int(libp->para[0]), (TProof*) G__int(libp->para[1])
, (TSocket*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) TVirtualProofPlayer::Create((const char*) G__int(libp->para[0]), (TProof*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TVirtualProofPlayer::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TVirtualProofPlayer::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TVirtualProofPlayer::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TVirtualProofPlayer::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVirtualProofPlayer*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TVirtualProofPlayer::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TVirtualProofPlayer::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TVirtualProofPlayer::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_236_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TVirtualProofPlayer::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TVirtualProofPlayer G__TTVirtualProofPlayer;
static int G__G__Proof_236_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TVirtualProofPlayer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TVirtualProofPlayer*) (soff+(sizeof(TVirtualProofPlayer)*i)))->~G__TTVirtualProofPlayer();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TVirtualProofPlayer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TVirtualProofPlayer*) (soff))->~G__TTVirtualProofPlayer();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSlave */
static int G__G__Proof_241_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TSlave*) G__getstructoffset())->Close((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TSlave*) G__getstructoffset())->Close();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_241_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TSlave*) G__getstructoffset())->GetImage());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_241_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TSlave*) G__getstructoffset())->GetProofWorkDir());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_241_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TSlave*) G__getstructoffset())->GetWorkDir());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_241_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TSlave*) G__getstructoffset())->GetUser());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_241_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TSlave*) G__getstructoffset())->GetGroup());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_241_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSlave*) G__getstructoffset())->GetPort());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_241_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TSlave*) G__getstructoffset())->GetOrdinal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_241_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSlave*) G__getstructoffset())->GetPerfIdx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_241_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSlave*) G__getstructoffset())->GetProtocol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_241_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSlave*) G__getstructoffset())->GetSocket());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_241_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSlave*) G__getstructoffset())->GetProof());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_241_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((const TSlave*) G__getstructoffset())->GetBytesRead());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_241_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TSlave*) G__getstructoffset())->GetRealTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_241_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TSlave*) G__getstructoffset())->GetCpuTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_241_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSlave*) G__getstructoffset())->GetSlaveType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_241_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSlave*) G__getstructoffset())->GetStatus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_241_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSlave*) G__getstructoffset())->GetParallel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_241_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TSlave*) G__getstructoffset())->GetMsd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_241_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TSlave*) G__getstructoffset())->GetSessionTag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_241_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSlave*) G__getstructoffset())->GetInputHandler());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_241_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSlave*) G__getstructoffset())->SetInputHandler((TFileHandler*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_241_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TSlave*) G__getstructoffset())->GetArchCompiler());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_241_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TSlave*) G__getstructoffset())->GetROOTVersion());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_241_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TSlave*) G__getstructoffset())->IsValid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_241_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TSlave*) G__getstructoffset())->SetupServ((Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_241_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSlave*) G__getstructoffset())->SetInterruptHandler((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_241_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSlave*) G__getstructoffset())->SetArchCompiler((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_241_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSlave*) G__getstructoffset())->SetROOTVersion((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_241_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSlave*) G__getstructoffset())->SetSessionTag((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_241_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSlave::SetTXSlaveHook((TSlave_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_241_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSlave*) G__getstructoffset())->Touch();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_241_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSlave::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_241_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSlave::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_241_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSlave::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_241_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSlave::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_241_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSlave*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_241_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSlave::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_241_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSlave::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_241_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSlave::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_241_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSlave::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSlave G__TTSlave;
static int G__G__Proof_241_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSlave*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSlave*) (soff+(sizeof(TSlave)*i)))->~G__TTSlave();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSlave*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSlave*) (soff))->~G__TTSlave();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TProofProgressInfo */
static int G__G__Proof_244_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TProofProgressInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 10:
     //m: 10
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofProgressInfo(
(Long64_t) G__Longlong(libp->para[0]), (Long64_t) G__Longlong(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Float_t) G__double(libp->para[9]));
     } else {
       p = new((void*) gvp) TProofProgressInfo(
(Long64_t) G__Longlong(libp->para[0]), (Long64_t) G__Longlong(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Float_t) G__double(libp->para[9]));
     }
     break;
   case 9:
     //m: 9
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofProgressInfo(
(Long64_t) G__Longlong(libp->para[0]), (Long64_t) G__Longlong(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]));
     } else {
       p = new((void*) gvp) TProofProgressInfo(
(Long64_t) G__Longlong(libp->para[0]), (Long64_t) G__Longlong(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]));
     }
     break;
   case 8:
     //m: 8
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofProgressInfo(
(Long64_t) G__Longlong(libp->para[0]), (Long64_t) G__Longlong(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7]));
     } else {
       p = new((void*) gvp) TProofProgressInfo(
(Long64_t) G__Longlong(libp->para[0]), (Long64_t) G__Longlong(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7]));
     }
     break;
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofProgressInfo(
(Long64_t) G__Longlong(libp->para[0]), (Long64_t) G__Longlong(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]));
     } else {
       p = new((void*) gvp) TProofProgressInfo(
(Long64_t) G__Longlong(libp->para[0]), (Long64_t) G__Longlong(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofProgressInfo(
(Long64_t) G__Longlong(libp->para[0]), (Long64_t) G__Longlong(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5]));
     } else {
       p = new((void*) gvp) TProofProgressInfo(
(Long64_t) G__Longlong(libp->para[0]), (Long64_t) G__Longlong(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofProgressInfo(
(Long64_t) G__Longlong(libp->para[0]), (Long64_t) G__Longlong(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]));
     } else {
       p = new((void*) gvp) TProofProgressInfo(
(Long64_t) G__Longlong(libp->para[0]), (Long64_t) G__Longlong(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofProgressInfo(
(Long64_t) G__Longlong(libp->para[0]), (Long64_t) G__Longlong(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2]), (Float_t) G__double(libp->para[3]));
     } else {
       p = new((void*) gvp) TProofProgressInfo(
(Long64_t) G__Longlong(libp->para[0]), (Long64_t) G__Longlong(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2]), (Float_t) G__double(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofProgressInfo(
(Long64_t) G__Longlong(libp->para[0]), (Long64_t) G__Longlong(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2]));
     } else {
       p = new((void*) gvp) TProofProgressInfo(
(Long64_t) G__Longlong(libp->para[0]), (Long64_t) G__Longlong(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofProgressInfo((Long64_t) G__Longlong(libp->para[0]), (Long64_t) G__Longlong(libp->para[1]));
     } else {
       p = new((void*) gvp) TProofProgressInfo((Long64_t) G__Longlong(libp->para[0]), (Long64_t) G__Longlong(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofProgressInfo((Long64_t) G__Longlong(libp->para[0]));
     } else {
       p = new((void*) gvp) TProofProgressInfo((Long64_t) G__Longlong(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TProofProgressInfo[n];
       } else {
         p = new((void*) gvp) TProofProgressInfo[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TProofProgressInfo;
       } else {
         p = new((void*) gvp) TProofProgressInfo;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_TProofProgressInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_244_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TProofProgressInfo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_244_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofProgressInfo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_244_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TProofProgressInfo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_244_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TProofProgressInfo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_244_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofProgressInfo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_244_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofProgressInfo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_244_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofProgressInfo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_244_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofProgressInfo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_244_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofProgressInfo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Proof_244_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TProofProgressInfo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TProofProgressInfo(*(TProofProgressInfo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_TProofProgressInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TProofProgressInfo G__TTProofProgressInfo;
static int G__G__Proof_244_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TProofProgressInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TProofProgressInfo*) (soff+(sizeof(TProofProgressInfo)*i)))->~G__TTProofProgressInfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TProofProgressInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TProofProgressInfo*) (soff))->~G__TTProofProgressInfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Proof_244_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TProofProgressInfo* dest = (TProofProgressInfo*) G__getstructoffset();
   *dest = *(TProofProgressInfo*) libp->para[0].ref;
   const TProofProgressInfo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSlaveInfo */
static int G__G__Proof_245_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSlaveInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSlaveInfo(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TSlaveInfo(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSlaveInfo(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TSlaveInfo(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSlaveInfo(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TSlaveInfo(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSlaveInfo((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TSlaveInfo((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSlaveInfo((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TSlaveInfo((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TSlaveInfo[n];
       } else {
         p = new((void*) gvp) TSlaveInfo[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TSlaveInfo;
       } else {
         p = new((void*) gvp) TSlaveInfo;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_TSlaveInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_245_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TSlaveInfo*) G__getstructoffset())->GetDataDir());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_245_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TSlaveInfo*) G__getstructoffset())->GetMsd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_245_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TSlaveInfo*) G__getstructoffset())->GetOrdinal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_245_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const SysInfo_t* pobj;
         const SysInfo_t xobj = ((const TSlaveInfo*) G__getstructoffset())->GetSysInfo();
         pobj = new SysInfo_t(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_245_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSlaveInfo*) G__getstructoffset())->SetStatus((TSlaveInfo::ESlaveStatus) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_245_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSlaveInfo*) G__getstructoffset())->SetSysInfo(*((SysInfo_t*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_245_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSlaveInfo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_245_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSlaveInfo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_245_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSlaveInfo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_245_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSlaveInfo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_245_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSlaveInfo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_245_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSlaveInfo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_245_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSlaveInfo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_245_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSlaveInfo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_245_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSlaveInfo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Proof_245_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSlaveInfo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSlaveInfo(*(TSlaveInfo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_TSlaveInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSlaveInfo G__TTSlaveInfo;
static int G__G__Proof_245_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSlaveInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSlaveInfo*) (soff+(sizeof(TSlaveInfo)*i)))->~G__TTSlaveInfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSlaveInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSlaveInfo*) (soff))->~G__TTSlaveInfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Proof_245_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSlaveInfo* dest = (TSlaveInfo*) G__getstructoffset();
   *dest = *(TSlaveInfo*) libp->para[0].ref;
   const TSlaveInfo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMergerInfo */
static int G__G__Proof_247_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMergerInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TMergerInfo(
(TSlave*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) TMergerInfo(
(TSlave*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_TMergerInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_247_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMergerInfo*) G__getstructoffset())->AddWorker((TSlave*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_247_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMergerInfo*) G__getstructoffset())->GetWorkers());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_247_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMergerInfo*) G__getstructoffset())->GetMerger());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_247_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TMergerInfo*) G__getstructoffset())->GetPort());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_247_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TMergerInfo*) G__getstructoffset())->GetWorkersToMerge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_247_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TMergerInfo*) G__getstructoffset())->GetMergedWorkers());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_247_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TMergerInfo*) G__getstructoffset())->GetMergedObjects());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_247_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMergerInfo*) G__getstructoffset())->SetMergedWorker();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_247_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMergerInfo*) G__getstructoffset())->AddMergedObjects((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_247_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TMergerInfo*) G__getstructoffset())->AreAllWorkersAssigned());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_247_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TMergerInfo*) G__getstructoffset())->AreAllWorkersMerged());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_247_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMergerInfo*) G__getstructoffset())->Deactivate();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_247_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TMergerInfo*) G__getstructoffset())->IsActive());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_247_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TMergerInfo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_247_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMergerInfo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_247_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TMergerInfo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_247_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TMergerInfo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_247_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMergerInfo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_247_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMergerInfo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_247_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMergerInfo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_247_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMergerInfo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_247_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMergerInfo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMergerInfo G__TTMergerInfo;
static int G__G__Proof_247_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TMergerInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TMergerInfo*) (soff+(sizeof(TMergerInfo)*i)))->~G__TTMergerInfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TMergerInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TMergerInfo*) (soff))->~G__TTMergerInfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TProofLite */
static int G__G__Proof_252_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TProofLite* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofLite(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (TProofMgr*) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) TProofLite(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (TProofMgr*) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofLite(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TProofLite(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofLite(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TProofLite(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofLite(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TProofLite(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofLite((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TProofLite((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofLite((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TProofLite((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_TProofLite));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_252_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TProofLite*) G__getstructoffset())->Remove((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_252_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) TProofLite::GetNumberOfWorkers((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) TProofLite::GetNumberOfWorkers());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_252_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TProofLite::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_252_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofLite::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_252_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TProofLite::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_252_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TProofLite::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_252_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofLite*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_252_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofLite::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_252_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofLite::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_252_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofLite::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_252_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofLite::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TProofLite G__TTProofLite;
static int G__G__Proof_252_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TProofLite*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TProofLite*) (soff+(sizeof(TProofLite)*i)))->~G__TTProofLite();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TProofLite*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TProofLite*) (soff))->~G__TTProofLite();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSlaveLite */
static int G__G__Proof_254_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSlaveLite* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSlaveLite(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (TProof*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (const char*) G__int(libp->para[5])
, (const char*) G__int(libp->para[6]));
   } else {
     p = new((void*) gvp) TSlaveLite(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (TProof*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (const char*) G__int(libp->para[5])
, (const char*) G__int(libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_TSlaveLite));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_254_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSlaveLite::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_254_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSlaveLite::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_254_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSlaveLite::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_254_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSlaveLite::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_254_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSlaveLite*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_254_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSlaveLite::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_254_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSlaveLite::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_254_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSlaveLite::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_254_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSlaveLite::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSlaveLite G__TTSlaveLite;
static int G__G__Proof_254_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSlaveLite*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSlaveLite*) (soff+(sizeof(TSlaveLite)*i)))->~G__TTSlaveLite();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSlaveLite*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSlaveLite*) (soff))->~G__TTSlaveLite();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TProofCondor */
static int G__G__Proof_346_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TProofCondor* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofCondor(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (TProofMgr*) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) TProofCondor(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (TProofMgr*) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofCondor(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TProofCondor(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofCondor(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TProofCondor(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofCondor(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TProofCondor(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofCondor((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TProofCondor((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofCondor((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TProofCondor((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_TProofCondor));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_346_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofCondor*) G__getstructoffset())->SetActive();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_346_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TProofCondor::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_346_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofCondor::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_346_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TProofCondor::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_346_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TProofCondor::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_346_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofCondor*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_346_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofCondor::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_346_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofCondor::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_346_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofCondor::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_346_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofCondor::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TProofCondor G__TTProofCondor;
static int G__G__Proof_346_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TProofCondor*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TProofCondor*) (soff+(sizeof(TProofCondor)*i)))->~G__TTProofCondor();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TProofCondor*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TProofCondor*) (soff))->~G__TTProofCondor();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TQueryResultManager */
static int G__G__Proof_347_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TQueryResultManager* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TQueryResultManager(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (TProofLockPath*) G__int(libp->para[3])
, (FILE*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TQueryResultManager(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (TProofLockPath*) G__int(libp->para[3])
, (FILE*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TQueryResultManager(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (TProofLockPath*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TQueryResultManager(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (TProofLockPath*) G__int(libp->para[3]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_TQueryResultManager));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_347_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TQueryResultManager*) G__getstructoffset())->QueryDir());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_347_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TQueryResultManager*) G__getstructoffset())->SeqNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_347_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TQueryResultManager*) G__getstructoffset())->DrawQueries());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_347_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TQueryResultManager*) G__getstructoffset())->KeptQueries());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_347_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TQueryResultManager*) G__getstructoffset())->Queries());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_347_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TQueryResultManager*) G__getstructoffset())->PreviousQueries());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_347_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQueryResultManager*) G__getstructoffset())->IncrementSeqNum();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_347_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQueryResultManager*) G__getstructoffset())->IncrementDrawQueries();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_347_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TQueryResultManager*) G__getstructoffset())->ApplyMaxQueries((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_347_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TQueryResultManager*) G__getstructoffset())->CleanupQueriesDir());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_347_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TQueryResultManager*) G__getstructoffset())->FinalizeQuery((TProofQueryResult*) G__int(libp->para[0]), (TProof*) G__int(libp->para[1])
, (TVirtualProofPlayer*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_347_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TQueryResultManager*) G__getstructoffset())->GetCpuTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_347_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TQueryResultManager*) G__getstructoffset())->GetRealTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_347_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TQueryResultManager*) G__getstructoffset())->LocateQuery(*((TString*) G__int(libp->para[0])), *(Int_t*) G__Intref(&libp->para[1])
, *(TString*) libp->para[2].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_347_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TQueryResultManager*) G__getstructoffset())->RemoveQuery((TQueryResult*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TQueryResultManager*) G__getstructoffset())->RemoveQuery((TQueryResult*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_347_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TQueryResultManager*) G__getstructoffset())->RemoveQuery((const char*) G__int(libp->para[0]), (TList*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TQueryResultManager*) G__getstructoffset())->RemoveQuery((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_347_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQueryResultManager*) G__getstructoffset())->ResetTime();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_347_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TQueryResultManager*) G__getstructoffset())->SaveQuery((TProofQueryResult*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TQueryResultManager*) G__getstructoffset())->SaveQuery((TProofQueryResult*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_347_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQueryResultManager*) G__getstructoffset())->SaveQuery((TProofQueryResult*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_347_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TQueryResultManager*) G__getstructoffset())->LockSession((const char*) G__int(libp->para[0]), (TProofLockPath**) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_347_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TQueryResultManager*) G__getstructoffset())->CleanupSession((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_347_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQueryResultManager*) G__getstructoffset())->ScanPreviousQueries((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_347_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TQueryResultManager::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_347_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TQueryResultManager::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_347_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TQueryResultManager::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_347_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TQueryResultManager::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_347_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQueryResultManager*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_347_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TQueryResultManager::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_347_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TQueryResultManager::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_347_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TQueryResultManager::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_347_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TQueryResultManager::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Proof_347_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TQueryResultManager* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TQueryResultManager(*(TQueryResultManager*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_TQueryResultManager));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TQueryResultManager G__TTQueryResultManager;
static int G__G__Proof_347_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TQueryResultManager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TQueryResultManager*) (soff+(sizeof(TQueryResultManager)*i)))->~G__TTQueryResultManager();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TQueryResultManager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TQueryResultManager*) (soff))->~G__TTQueryResultManager();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Proof_347_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TQueryResultManager* dest = (TQueryResultManager*) G__getstructoffset();
   *dest = *(TQueryResultManager*) libp->para[0].ref;
   const TQueryResultManager& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TProofQueryResult */
static int G__G__Proof_348_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TProofQueryResult* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofQueryResult[n];
     } else {
       p = new((void*) gvp) TProofQueryResult[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofQueryResult;
     } else {
       p = new((void*) gvp) TProofQueryResult;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_TProofQueryResult));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_348_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TProofQueryResult::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_348_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofQueryResult::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_348_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TProofQueryResult::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_348_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TProofQueryResult::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_348_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofQueryResult*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_348_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofQueryResult::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_348_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofQueryResult::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_348_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofQueryResult::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_348_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofQueryResult::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Proof_348_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TProofQueryResult* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TProofQueryResult(*(TProofQueryResult*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_TProofQueryResult));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TProofQueryResult G__TTProofQueryResult;
static int G__G__Proof_348_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TProofQueryResult*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TProofQueryResult*) (soff+(sizeof(TProofQueryResult)*i)))->~G__TTProofQueryResult();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TProofQueryResult*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TProofQueryResult*) (soff))->~G__TTProofQueryResult();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Proof_348_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TProofQueryResult* dest = (TProofQueryResult*) G__getstructoffset();
   *dest = *(TProofQueryResult*) libp->para[0].ref;
   const TProofQueryResult& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TProofLogElem */
static int G__G__Proof_350_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TProofLogElem* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TProofLogElem(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (TProofLog*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) TProofLogElem(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (TProofLog*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_TProofLogElem));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_350_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TProofLogElem*) G__getstructoffset())->Display((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TProofLogElem*) G__getstructoffset())->Display((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TProofLogElem*) G__getstructoffset())->Display();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_350_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TProofLogElem*) G__getstructoffset())->GetMacro());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_350_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TProofLogElem*) G__getstructoffset())->GetRole());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_350_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) ((TProofLogElem*) G__getstructoffset())->Grep((const char*) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((TProofLogElem*) G__getstructoffset())->Grep((const char*) G__int(libp->para[0]), *(TString*) libp->para[1].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_350_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TProofLogElem*) G__getstructoffset())->IsMaster());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_350_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TProofLogElem*) G__getstructoffset())->IsSubMaster());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_350_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TProofLogElem*) G__getstructoffset())->IsWorker());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_350_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofLogElem*) G__getstructoffset())->Prt((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_350_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((TProofLogElem*) G__getstructoffset())->Retrieve((TProofLog::ERetrieveOpt) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((TProofLogElem*) G__getstructoffset())->Retrieve((TProofLog::ERetrieveOpt) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((TProofLogElem*) G__getstructoffset())->Retrieve());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_350_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) TProofLogElem::GetMaxTransferSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_350_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TProofLogElem::SetMaxTransferSize((Long64_t) G__Longlong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_350_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TProofLogElem::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_350_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofLogElem::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_350_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TProofLogElem::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_350_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TProofLogElem::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_350_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofLogElem*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_350_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofLogElem::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_350_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofLogElem::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_350_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofLogElem::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_350_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofLogElem::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Proof_350_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TProofLogElem* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TProofLogElem(*(TProofLogElem*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_TProofLogElem));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TProofLogElem G__TTProofLogElem;
static int G__G__Proof_350_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TProofLogElem*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TProofLogElem*) (soff+(sizeof(TProofLogElem)*i)))->~G__TTProofLogElem();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TProofLogElem*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TProofLogElem*) (soff))->~G__TTProofLogElem();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Proof_350_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TProofLogElem* dest = (TProofLogElem*) G__getstructoffset();
   *dest = *(TProofLogElem*) libp->para[0].ref;
   const TProofLogElem& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TProofMgrLite */
static int G__G__Proof_351_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TProofMgrLite* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofMgrLite(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TProofMgrLite(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofMgrLite((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TProofMgrLite((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofMgrLite((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TProofMgrLite((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_TProofMgrLite));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_351_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TProofMgrLite::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_351_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofMgrLite::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_351_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TProofMgrLite::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_351_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TProofMgrLite::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_351_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofMgrLite*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_351_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofMgrLite::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_351_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofMgrLite::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_351_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofMgrLite::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_351_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofMgrLite::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TProofMgrLite G__TTProofMgrLite;
static int G__G__Proof_351_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TProofMgrLite*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TProofMgrLite*) (soff+(sizeof(TProofMgrLite)*i)))->~G__TTProofMgrLite();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TProofMgrLite*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TProofMgrLite*) (soff))->~G__TTProofMgrLite();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TProofResourcesStatic */
static int G__G__Proof_354_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TProofResourcesStatic* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofResourcesStatic[n];
     } else {
       p = new((void*) gvp) TProofResourcesStatic[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofResourcesStatic;
     } else {
       p = new((void*) gvp) TProofResourcesStatic;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_TProofResourcesStatic));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_354_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TProofResourcesStatic* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TProofResourcesStatic((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TProofResourcesStatic((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_TProofResourcesStatic));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_354_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const TProofResourcesStatic*) G__getstructoffset())->GetFileName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_354_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TProofResourcesStatic::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_354_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofResourcesStatic::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_354_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TProofResourcesStatic::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_354_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TProofResourcesStatic::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_354_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofResourcesStatic*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_354_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofResourcesStatic::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_354_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofResourcesStatic::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_354_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofResourcesStatic::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_354_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofResourcesStatic::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Proof_354_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TProofResourcesStatic* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TProofResourcesStatic(*(TProofResourcesStatic*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_TProofResourcesStatic));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TProofResourcesStatic G__TTProofResourcesStatic;
static int G__G__Proof_354_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TProofResourcesStatic*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TProofResourcesStatic*) (soff+(sizeof(TProofResourcesStatic)*i)))->~G__TTProofResourcesStatic();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TProofResourcesStatic*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TProofResourcesStatic*) (soff))->~G__TTProofResourcesStatic();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Proof_354_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TProofResourcesStatic* dest = (TProofResourcesStatic*) G__getstructoffset();
   *dest = *(TProofResourcesStatic*) libp->para[0].ref;
   const TProofResourcesStatic& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TProofNodeInfo */
static int G__G__Proof_355_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TProofNodeInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofNodeInfo[n];
     } else {
       p = new((void*) gvp) TProofNodeInfo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofNodeInfo;
     } else {
       p = new((void*) gvp) TProofNodeInfo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_TProofNodeInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_355_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TProofNodeInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TProofNodeInfo((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TProofNodeInfo((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_TProofNodeInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_355_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TProofNodeInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TProofNodeInfo(*(TProofNodeInfo*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TProofNodeInfo(*(TProofNodeInfo*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_TProofNodeInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_355_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TProofNodeInfo*) G__getstructoffset())->GetNodeType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_355_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString& obj = ((const TProofNodeInfo*) G__getstructoffset())->GetNodeName();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_355_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString& obj = ((const TProofNodeInfo*) G__getstructoffset())->GetWorkDir();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_355_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString& obj = ((const TProofNodeInfo*) G__getstructoffset())->GetOrdinal();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_355_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString& obj = ((const TProofNodeInfo*) G__getstructoffset())->GetImage();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_355_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString& obj = ((const TProofNodeInfo*) G__getstructoffset())->GetId();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_355_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString& obj = ((const TProofNodeInfo*) G__getstructoffset())->GetConfig();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_355_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString& obj = ((const TProofNodeInfo*) G__getstructoffset())->GetMsd();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_355_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TProofNodeInfo*) G__getstructoffset())->GetPort());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_355_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TProofNodeInfo*) G__getstructoffset())->GetPerfIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_355_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofNodeInfo*) G__getstructoffset())->Assign(*(TProofNodeInfo*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_355_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofNodeInfo::GetNodeType(*(TString*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_355_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TProofNodeInfo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_355_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofNodeInfo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_355_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TProofNodeInfo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_355_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TProofNodeInfo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_355_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofNodeInfo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_355_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofNodeInfo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_355_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofNodeInfo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_355_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofNodeInfo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_355_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofNodeInfo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TProofNodeInfo G__TTProofNodeInfo;
static int G__G__Proof_355_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TProofNodeInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TProofNodeInfo*) (soff+(sizeof(TProofNodeInfo)*i)))->~G__TTProofNodeInfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TProofNodeInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TProofNodeInfo*) (soff))->~G__TTProofNodeInfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Proof_355_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TProofNodeInfo* dest = (TProofNodeInfo*) G__getstructoffset();
   *dest = *(TProofNodeInfo*) libp->para[0].ref;
   const TProofNodeInfo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TProofProgressStatus */
static int G__G__Proof_357_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TProofProgressStatus* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofProgressStatus(
(Long64_t) G__Longlong(libp->para[0]), (Long64_t) G__Longlong(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     } else {
       p = new((void*) gvp) TProofProgressStatus(
(Long64_t) G__Longlong(libp->para[0]), (Long64_t) G__Longlong(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofProgressStatus(
(Long64_t) G__Longlong(libp->para[0]), (Long64_t) G__Longlong(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2]), (Double_t) G__double(libp->para[3]));
     } else {
       p = new((void*) gvp) TProofProgressStatus(
(Long64_t) G__Longlong(libp->para[0]), (Long64_t) G__Longlong(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2]), (Double_t) G__double(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofProgressStatus(
(Long64_t) G__Longlong(libp->para[0]), (Long64_t) G__Longlong(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2]));
     } else {
       p = new((void*) gvp) TProofProgressStatus(
(Long64_t) G__Longlong(libp->para[0]), (Long64_t) G__Longlong(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofProgressStatus((Long64_t) G__Longlong(libp->para[0]), (Long64_t) G__Longlong(libp->para[1]));
     } else {
       p = new((void*) gvp) TProofProgressStatus((Long64_t) G__Longlong(libp->para[0]), (Long64_t) G__Longlong(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofProgressStatus((Long64_t) G__Longlong(libp->para[0]));
     } else {
       p = new((void*) gvp) TProofProgressStatus((Long64_t) G__Longlong(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TProofProgressStatus[n];
       } else {
         p = new((void*) gvp) TProofProgressStatus[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TProofProgressStatus;
       } else {
         p = new((void*) gvp) TProofProgressStatus;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_TProofProgressStatus));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_357_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofProgressStatus*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_357_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((const TProofProgressStatus*) G__getstructoffset())->GetEntries());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_357_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((const TProofProgressStatus*) G__getstructoffset())->GetBytesRead());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_357_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((const TProofProgressStatus*) G__getstructoffset())->GetReadCalls());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_357_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TProofProgressStatus*) G__getstructoffset())->GetLearnTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_357_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TProofProgressStatus*) G__getstructoffset())->GetProcTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_357_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TProofProgressStatus*) G__getstructoffset())->GetCPUTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_357_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TProofProgressStatus*) G__getstructoffset())->GetLastUpdate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_357_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TProofProgressStatus*) G__getstructoffset())->GetRate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_357_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TProofProgressStatus*) G__getstructoffset())->GetCurrentRate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_357_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofProgressStatus*) G__getstructoffset())->SetLastEntries((Long64_t) G__Longlong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_357_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofProgressStatus*) G__getstructoffset())->SetEntries((Long64_t) G__Longlong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_357_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TProofProgressStatus*) G__getstructoffset())->IncEntries((Long64_t) G__Longlong(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TProofProgressStatus*) G__getstructoffset())->IncEntries();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_357_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofProgressStatus*) G__getstructoffset())->IncBytesRead((Long64_t) G__Longlong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_357_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofProgressStatus*) G__getstructoffset())->SetBytesRead((Long64_t) G__Longlong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_357_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofProgressStatus*) G__getstructoffset())->IncReadCalls((Long64_t) G__Longlong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_357_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofProgressStatus*) G__getstructoffset())->SetReadCalls((Long64_t) G__Longlong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_357_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofProgressStatus*) G__getstructoffset())->SetLearnTime((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_357_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofProgressStatus*) G__getstructoffset())->SetLastProcTime((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_357_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofProgressStatus*) G__getstructoffset())->SetProcTime((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_357_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofProgressStatus*) G__getstructoffset())->IncProcTime((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_357_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofProgressStatus*) G__getstructoffset())->SetCPUTime((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_357_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofProgressStatus*) G__getstructoffset())->IncCPUTime((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_357_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TProofProgressStatus*) G__getstructoffset())->SetLastUpdate((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TProofProgressStatus*) G__getstructoffset())->SetLastUpdate();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_357_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TProofProgressStatus* pobj;
         TProofProgressStatus xobj = ((TProofProgressStatus*) G__getstructoffset())->operator-(*(TProofProgressStatus*) libp->para[0].ref);
         pobj = new TProofProgressStatus(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_357_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TProofProgressStatus& obj = ((TProofProgressStatus*) G__getstructoffset())->operator+=(*(TProofProgressStatus*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_357_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TProofProgressStatus& obj = ((TProofProgressStatus*) G__getstructoffset())->operator-=(*(TProofProgressStatus*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_357_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TProofProgressStatus::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_357_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofProgressStatus::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_357_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TProofProgressStatus::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_357_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TProofProgressStatus::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_357_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofProgressStatus*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_357_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofProgressStatus::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_357_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofProgressStatus::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_357_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofProgressStatus::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_357_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofProgressStatus::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Proof_357_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TProofProgressStatus* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TProofProgressStatus(*(TProofProgressStatus*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_TProofProgressStatus));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TProofProgressStatus G__TTProofProgressStatus;
static int G__G__Proof_357_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TProofProgressStatus*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TProofProgressStatus*) (soff+(sizeof(TProofProgressStatus)*i)))->~G__TTProofProgressStatus();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TProofProgressStatus*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TProofProgressStatus*) (soff))->~G__TTProofProgressStatus();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Proof_357_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TProofProgressStatus* dest = (TProofProgressStatus*) G__getstructoffset();
   *dest = *(TProofProgressStatus*) libp->para[0].ref;
   const TProofProgressStatus& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TProofResources */
static int G__G__Proof_361_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TProofResources*) G__getstructoffset())->GetMaster());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_361_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TProofResources*) G__getstructoffset())->GetSubmasters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_361_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TProofResources*) G__getstructoffset())->GetWorkers());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_361_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TProofResources*) G__getstructoffset())->IsValid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_361_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TProofResources::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_361_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofResources::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_361_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TProofResources::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_361_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TProofResources::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_361_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofResources*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_361_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofResources::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_361_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofResources::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_361_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofResources::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_361_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofResources::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TProofResources G__TTProofResources;
static int G__G__Proof_361_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TProofResources*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TProofResources*) (soff+(sizeof(TProofResources)*i)))->~G__TTProofResources();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TProofResources*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TProofResources*) (soff))->~G__TTProofResources();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Proof_361_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TProofResources* dest = (TProofResources*) G__getstructoffset();
   *dest = *(TProofResources*) libp->para[0].ref;
   const TProofResources& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TProofServLite */
static int G__G__Proof_373_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TProofServLite* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofServLite(
(Int_t*) G__int(libp->para[0]), (char**) G__int(libp->para[1])
, (FILE*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TProofServLite(
(Int_t*) G__int(libp->para[0]), (char**) G__int(libp->para[1])
, (FILE*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofServLite((Int_t*) G__int(libp->para[0]), (char**) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TProofServLite((Int_t*) G__int(libp->para[0]), (char**) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_TProofServLite));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_373_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TProofServLite::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_373_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofServLite::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_373_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TProofServLite::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_373_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TProofServLite::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_373_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofServLite*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_373_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofServLite::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_373_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofServLite::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_373_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofServLite::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_373_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofServLite::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TProofServLite G__TTProofServLite;
static int G__G__Proof_373_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TProofServLite*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TProofServLite*) (soff+(sizeof(TProofServLite)*i)))->~G__TTProofServLite();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TProofServLite*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TProofServLite*) (soff))->~G__TTProofServLite();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TProofSuperMaster */
static int G__G__Proof_382_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TProofSuperMaster* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofSuperMaster(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (TProofMgr*) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) TProofSuperMaster(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (TProofMgr*) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofSuperMaster(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TProofSuperMaster(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofSuperMaster(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TProofSuperMaster(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofSuperMaster(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TProofSuperMaster(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofSuperMaster((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TProofSuperMaster((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofSuperMaster((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TProofSuperMaster((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofLN_TProofSuperMaster));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_382_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TProofSuperMaster::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_382_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofSuperMaster::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_382_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TProofSuperMaster::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_382_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TProofSuperMaster::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_382_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofSuperMaster*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_382_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofSuperMaster::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_382_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofSuperMaster::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_382_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofSuperMaster::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_382_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofSuperMaster::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TProofSuperMaster G__TTProofSuperMaster;
static int G__G__Proof_382_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TProofSuperMaster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TProofSuperMaster*) (soff+(sizeof(TProofSuperMaster)*i)))->~G__TTProofSuperMaster();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TProofSuperMaster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TProofSuperMaster*) (soff))->~G__TTProofSuperMaster();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TCondorSlave */

/* TCondor */

/* TDSet */

/* TProof */

/* TProofChain */

/* TDSetElement */

/* pair<TDSetElement*,TString> */

/* list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > > */

/* TProofServ */

/* TDSetProxy */

/* TDataSetManager */

/* TDataSetManagerFile */

/* TProofDesc */

/* TProofLog */

/* TProofMgr */

/* TProofDebug */

/* TProofOutputList */

/* TVirtualProofPlayer */

/* TSlave */

/* TProofProgressInfo */

/* TSlaveInfo */

/* TMergerInfo */

/* TProofLite */

/* TSlaveLite */

/* TProofCondor */

/* TQueryResultManager */

/* TProofQueryResult */

/* TProofLogElem */

/* TProofMgrLite */

/* TProofResourcesStatic */

/* TProofNodeInfo */

/* TProofProgressStatus */

/* TProofResources */

/* TProofServLite */

/* TProofSuperMaster */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__Proof {
 public:
  G__Sizep2memfuncG__Proof(): p(&G__Sizep2memfuncG__Proof::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__Proof::*p)();
};

size_t G__get_sizep2memfuncG__Proof()
{
  G__Sizep2memfuncG__Proof a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__Proof() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TCondorSlave))) {
     TCondorSlave *G__Lderived;
     G__Lderived=(TCondorSlave*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TCondorSlave),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TCondor))) {
     TCondor *G__Lderived;
     G__Lderived=(TCondor*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TCondor),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TDSet))) {
     TDSet *G__Lderived;
     G__Lderived=(TDSet*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TDSet),G__get_linked_tagnum(&G__G__ProofLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TDSet),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TProof))) {
     TProof *G__Lderived;
     G__Lderived=(TProof*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProof),G__get_linked_tagnum(&G__G__ProofLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProof),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProof),G__get_linked_tagnum(&G__G__ProofLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TProofChain))) {
     TProofChain *G__Lderived;
     G__Lderived=(TProofChain*)0x1000;
     {
       TChain *G__Lpbase=(TChain*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofChain),G__get_linked_tagnum(&G__G__ProofLN_TChain),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TTree *G__Lpbase=(TTree*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofChain),G__get_linked_tagnum(&G__G__ProofLN_TTree),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofChain),G__get_linked_tagnum(&G__G__ProofLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofChain),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofChain),G__get_linked_tagnum(&G__G__ProofLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofChain),G__get_linked_tagnum(&G__G__ProofLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofChain),G__get_linked_tagnum(&G__G__ProofLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TTree))) {
     TTree *G__Lderived;
     G__Lderived=(TTree*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TTree),G__get_linked_tagnum(&G__G__ProofLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TTree),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TTree),G__get_linked_tagnum(&G__G__ProofLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TTree),G__get_linked_tagnum(&G__G__ProofLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TTree),G__get_linked_tagnum(&G__G__ProofLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TDSetElement))) {
     TDSetElement *G__Lderived;
     G__Lderived=(TDSetElement*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TDSetElement),G__get_linked_tagnum(&G__G__ProofLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TDSetElement),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TProofServ))) {
     TProofServ *G__Lderived;
     G__Lderived=(TProofServ*)0x1000;
     {
       TApplication *G__Lpbase=(TApplication*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofServ),G__get_linked_tagnum(&G__G__ProofLN_TApplication),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofServ),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofServ),G__get_linked_tagnum(&G__G__ProofLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TDSetProxy))) {
     TDSetProxy *G__Lderived;
     G__Lderived=(TDSetProxy*)0x1000;
     {
       TDSet *G__Lpbase=(TDSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TDSetProxy),G__get_linked_tagnum(&G__G__ProofLN_TDSet),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TDSetProxy),G__get_linked_tagnum(&G__G__ProofLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TDSetProxy),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TDataSetManager))) {
     TDataSetManager *G__Lderived;
     G__Lderived=(TDataSetManager*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TDataSetManager),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TDataSetManagerFile))) {
     TDataSetManagerFile *G__Lderived;
     G__Lderived=(TDataSetManagerFile*)0x1000;
     {
       TDataSetManager *G__Lpbase=(TDataSetManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TDataSetManagerFile),G__get_linked_tagnum(&G__G__ProofLN_TDataSetManager),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TDataSetManagerFile),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TProofDesc))) {
     TProofDesc *G__Lderived;
     G__Lderived=(TProofDesc*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDesc),G__get_linked_tagnum(&G__G__ProofLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDesc),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TProofLog))) {
     TProofLog *G__Lderived;
     G__Lderived=(TProofLog*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofLog),G__get_linked_tagnum(&G__G__ProofLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofLog),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofLog),G__get_linked_tagnum(&G__G__ProofLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TProofMgr))) {
     TProofMgr *G__Lderived;
     G__Lderived=(TProofMgr*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofMgr),G__get_linked_tagnum(&G__G__ProofLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofMgr),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TProofOutputList))) {
     TProofOutputList *G__Lderived;
     G__Lderived=(TProofOutputList*)0x1000;
     {
       TList *G__Lpbase=(TList*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofOutputList),G__get_linked_tagnum(&G__G__ProofLN_TList),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TSeqCollection *G__Lpbase=(TSeqCollection*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofOutputList),G__get_linked_tagnum(&G__G__ProofLN_TSeqCollection),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TCollection *G__Lpbase=(TCollection*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofOutputList),G__get_linked_tagnum(&G__G__ProofLN_TCollection),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofOutputList),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TVirtualProofPlayer))) {
     TVirtualProofPlayer *G__Lderived;
     G__Lderived=(TVirtualProofPlayer*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TVirtualProofPlayer),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TVirtualProofPlayer),G__get_linked_tagnum(&G__G__ProofLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TSlave))) {
     TSlave *G__Lderived;
     G__Lderived=(TSlave*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TSlave),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TProofProgressInfo))) {
     TProofProgressInfo *G__Lderived;
     G__Lderived=(TProofProgressInfo*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofProgressInfo),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TSlaveInfo))) {
     TSlaveInfo *G__Lderived;
     G__Lderived=(TSlaveInfo*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TSlaveInfo),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TMergerInfo))) {
     TMergerInfo *G__Lderived;
     G__Lderived=(TMergerInfo*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TMergerInfo),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TProofLite))) {
     TProofLite *G__Lderived;
     G__Lderived=(TProofLite*)0x1000;
     {
       TProof *G__Lpbase=(TProof*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofLite),G__get_linked_tagnum(&G__G__ProofLN_TProof),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofLite),G__get_linked_tagnum(&G__G__ProofLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofLite),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofLite),G__get_linked_tagnum(&G__G__ProofLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TSlaveLite))) {
     TSlaveLite *G__Lderived;
     G__Lderived=(TSlaveLite*)0x1000;
     {
       TSlave *G__Lpbase=(TSlave*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TSlaveLite),G__get_linked_tagnum(&G__G__ProofLN_TSlave),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TSlaveLite),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TProofCondor))) {
     TProofCondor *G__Lderived;
     G__Lderived=(TProofCondor*)0x1000;
     {
       TProof *G__Lpbase=(TProof*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofCondor),G__get_linked_tagnum(&G__G__ProofLN_TProof),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofCondor),G__get_linked_tagnum(&G__G__ProofLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofCondor),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofCondor),G__get_linked_tagnum(&G__G__ProofLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TQueryResultManager))) {
     TQueryResultManager *G__Lderived;
     G__Lderived=(TQueryResultManager*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TQueryResultManager),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TProofQueryResult))) {
     TProofQueryResult *G__Lderived;
     G__Lderived=(TProofQueryResult*)0x1000;
     {
       TQueryResult *G__Lpbase=(TQueryResult*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofQueryResult),G__get_linked_tagnum(&G__G__ProofLN_TQueryResult),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofQueryResult),G__get_linked_tagnum(&G__G__ProofLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofQueryResult),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TProofLogElem))) {
     TProofLogElem *G__Lderived;
     G__Lderived=(TProofLogElem*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofLogElem),G__get_linked_tagnum(&G__G__ProofLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofLogElem),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TProofMgrLite))) {
     TProofMgrLite *G__Lderived;
     G__Lderived=(TProofMgrLite*)0x1000;
     {
       TProofMgr *G__Lpbase=(TProofMgr*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofMgrLite),G__get_linked_tagnum(&G__G__ProofLN_TProofMgr),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofMgrLite),G__get_linked_tagnum(&G__G__ProofLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofMgrLite),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TProofResourcesStatic))) {
     TProofResourcesStatic *G__Lderived;
     G__Lderived=(TProofResourcesStatic*)0x1000;
     {
       TProofResources *G__Lpbase=(TProofResources*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofResourcesStatic),G__get_linked_tagnum(&G__G__ProofLN_TProofResources),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofResourcesStatic),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TProofNodeInfo))) {
     TProofNodeInfo *G__Lderived;
     G__Lderived=(TProofNodeInfo*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofNodeInfo),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TProofProgressStatus))) {
     TProofProgressStatus *G__Lderived;
     G__Lderived=(TProofProgressStatus*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofProgressStatus),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TProofResources))) {
     TProofResources *G__Lderived;
     G__Lderived=(TProofResources*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofResources),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TApplication))) {
     TApplication *G__Lderived;
     G__Lderived=(TApplication*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TApplication),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TApplication),G__get_linked_tagnum(&G__G__ProofLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TProofServLite))) {
     TProofServLite *G__Lderived;
     G__Lderived=(TProofServLite*)0x1000;
     {
       TProofServ *G__Lpbase=(TProofServ*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofServLite),G__get_linked_tagnum(&G__G__ProofLN_TProofServ),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TApplication *G__Lpbase=(TApplication*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofServLite),G__get_linked_tagnum(&G__G__ProofLN_TApplication),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofServLite),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofServLite),G__get_linked_tagnum(&G__G__ProofLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TProofSuperMaster))) {
     TProofSuperMaster *G__Lderived;
     G__Lderived=(TProofSuperMaster*)0x1000;
     {
       TProof *G__Lpbase=(TProof*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofSuperMaster),G__get_linked_tagnum(&G__G__ProofLN_TProof),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofSuperMaster),G__get_linked_tagnum(&G__G__ProofLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofSuperMaster),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofSuperMaster),G__get_linked_tagnum(&G__G__ProofLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__Proof() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Long_t",108,-1,0,-1);
   G__setnewtype(-1,"Signed long integer 8 bytes (long)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("Long64_t",110,-1,0,-1);
   G__setnewtype(-1,"Portable signed long integer 8 bytes",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__ProofLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ProofLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ProofLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ProofLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ProofLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__G__ProofLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ProofLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ProofLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ProofLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ProofLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<std::pair<TDSetElement*,TString> >",117,G__get_linked_tagnum(&G__G__ProofLN_listlEpairlETDSetElementmUcOTStringgRcOallocatorlEpairlETDSetElementmUcOTStringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__G__ProofLN_pairlETDSetElementmUcOTStringgR),0,G__get_linked_tagnum(&G__G__ProofLN_listlEpairlETDSetElementmUcOTStringgRcOallocatorlEpairlETDSetElementmUcOTStringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("allocator_type",117,G__get_linked_tagnum(&G__G__ProofLN_allocatorlEpairlETDSetElementmUcOTStringgRsPgR),0,G__get_linked_tagnum(&G__G__ProofLN_listlEpairlETDSetElementmUcOTStringgRcOallocatorlEpairlETDSetElementmUcOTStringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("void_pointer",89,-1,0,G__get_linked_tagnum(&G__G__ProofLN_listlEpairlETDSetElementmUcOTStringgRcOallocatorlEpairlETDSetElementmUcOTStringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__G__ProofLN_pairlETDSetElementmUcOTStringgR),0,G__get_linked_tagnum(&G__G__ProofLN_listlEpairlETDSetElementmUcOTStringgRcOallocatorlEpairlETDSetElementmUcOTStringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__G__ProofLN_pairlETDSetElementmUcOTStringgR),256,G__get_linked_tagnum(&G__G__ProofLN_listlEpairlETDSetElementmUcOTStringgRcOallocatorlEpairlETDSetElementmUcOTStringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__G__ProofLN_pairlETDSetElementmUcOTStringgR),1,G__get_linked_tagnum(&G__G__ProofLN_listlEpairlETDSetElementmUcOTStringgRcOallocatorlEpairlETDSetElementmUcOTStringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__G__ProofLN_pairlETDSetElementmUcOTStringgR),257,G__get_linked_tagnum(&G__G__ProofLN_listlEpairlETDSetElementmUcOTStringgRcOallocatorlEpairlETDSetElementmUcOTStringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__G__ProofLN_listlEpairlETDSetElementmUcOTStringgRcOallocatorlEpairlETDSetElementmUcOTStringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__G__ProofLN_listlEpairlETDSetElementmUcOTStringgRcOallocatorlEpairlETDSetElementmUcOTStringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__G__ProofLN_listlEpairlETDSetElementmUcOTStringgRcOallocatorlEpairlETDSetElementmUcOTStringgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__G__ProofLN_listlEpairlETDSetElementmUcOTStringgRcOallocatorlEpairlETDSetElementmUcOTStringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__G__ProofLN_listlEpairlETDSetElementmUcOTStringgRcOallocatorlEpairlETDSetElementmUcOTStringgRsPgRsPgRcLcLreverse_iterator),256,G__get_linked_tagnum(&G__G__ProofLN_listlEpairlETDSetElementmUcOTStringgRcOallocatorlEpairlETDSetElementmUcOTStringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<pair<TDSetElement*,TString> >",117,G__get_linked_tagnum(&G__G__ProofLN_listlEpairlETDSetElementmUcOTStringgRcOallocatorlEpairlETDSetElementmUcOTStringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("FriendsList_t",117,G__get_linked_tagnum(&G__G__ProofLN_listlEpairlETDSetElementmUcOTStringgRcOallocatorlEpairlETDSetElementmUcOTStringgRsPgRsPgR),0,G__get_linked_tagnum(&G__G__ProofLN_TDSetElement));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__ProofLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__G__ProofLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__G__ProofLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__G__ProofLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__G__ProofLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ProofLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ProofLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ProofLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ProofLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<unsigned int>",117,G__get_linked_tagnum(&G__G__ProofLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__G__ProofLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ProofLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ProofLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ProofLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ProofLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TProofMgr_t",89,-1,0,-1);
   G__setnewtype(-1,"TProofMgr *(*TProofMgr_t)(const char *, Int_t, const char *);",0);
   G__search_typename2("PrintProgress_t",89,-1,0,-1);
   G__setnewtype(-1,"void (*PrintProgress_t)(Long64_t tot, Long64_t proc, Float_t proctime, Long64_t bytes);",0);
   G__search_typename2("map<TString,MD5Mod_t>",117,G__get_linked_tagnum(&G__G__ProofLN_maplETStringcOTProofcLcLMD5Mod_tcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTProofcLcLMD5Mod_tgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,TProof::MD5Mod_t>",117,G__get_linked_tagnum(&G__G__ProofLN_maplETStringcOTProofcLcLMD5Mod_tcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTProofcLcLMD5Mod_tgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,TProof::MD5Mod_t,less<TString> >",117,G__get_linked_tagnum(&G__G__ProofLN_maplETStringcOTProofcLcLMD5Mod_tcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTProofcLcLMD5Mod_tgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("FileMap_t",117,G__get_linked_tagnum(&G__G__ProofLN_maplETStringcOTProofcLcLMD5Mod_tcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTProofcLcLMD5Mod_tgRsPgRsPgR),0,G__get_linked_tagnum(&G__G__ProofLN_TProof));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__G__ProofLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G__ProofLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__G__ProofLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TSlave_t",89,-1,0,-1);
   G__setnewtype(-1,"TSlave *(*TSlave_t)(const char *url, const char *ord, Int_t perf,",0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TCondorSlave */
static void G__setup_memvarTCondorSlave(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TCondorSlave));
   { TCondorSlave *p; p=(TCondorSlave*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fHostname)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,1,"fHostname=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fPort)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fPort=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fPerfIdx)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fPerfIdx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fImage)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,1,"fImage=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fClaimID)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,1,"fClaimID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fOrdinal)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,1,"fOrdinal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fWorkDir)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,1,"fWorkDir=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TCondor */
static void G__setup_memvarTCondor(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TCondor));
   { TCondor *p; p=(TCondor*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TCondorcLcLEState),-1,-2,1,G__FastAllocString(2048).Format("kFree=%lldLL",(long long)TCondor::kFree).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TCondorcLcLEState),-1,-2,1,G__FastAllocString(2048).Format("kSuspended=%lldLL",(long long)TCondor::kSuspended).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TCondorcLcLEState),-1,-2,1,G__FastAllocString(2048).Format("kActive=%lldLL",(long long)TCondor::kActive).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fValid=",0,"access to Condor");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fPool=",0,"the condor pool to be accessed");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__G__ProofLN_TCondorcLcLEState),-1,-1,4,"fState=",0,"our claim state");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,4,"fClaims=",0,"list of claims we manage");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSet */
static void G__setup_memvarTDSet(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TDSet));
   { TDSet *p; p=(TDSet*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TDSetcLcLEStatusBits),-1,-2,1,G__FastAllocString(2048).Format("kWriteV3=%lldLL",(long long)TDSet::kWriteV3).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TDSetcLcLEStatusBits),-1,-2,1,G__FastAllocString(2048).Format("kEmpty=%lldLL",(long long)TDSet::kEmpty).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TDSetcLcLEStatusBits),-1,-2,1,G__FastAllocString(2048).Format("kValidityChecked=%lldLL",(long long)TDSet::kValidityChecked).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TDSetcLcLEStatusBits),-1,-2,1,G__FastAllocString(2048).Format("kSomeInvalid=%lldLL",(long long)TDSet::kSomeInvalid).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TDSetcLcLEStatusBits),-1,-2,1,G__FastAllocString(2048).Format("kMultiDSet=%lldLL",(long long)TDSet::kMultiDSet).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsTree=",0,"true if type is a TTree (or TTree derived)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TObject),-1,-1,4,"fEntryList=",0,"! entry (or event) list for processing");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TProofChain),-1,-1,4,"fProofChain=",0,"! for browsing purposes");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,2,"fDir=",0,"name of the directory");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,2,"fType=",0,"type of objects (e.g. TTree);");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,2,"fObjName=",0,"name of objects to be analyzed (e.g. TTree name)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_THashList),-1,-1,2,"fElements=",0,"-> list of TDSetElements (or TDSets, if in multi mode)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TIter),-1,-1,2,"fIterator=",0,"! iterator on fElements");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TDSetElement),-1,-1,2,"fCurrent=",0,"! current element");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,2,"fSrvMaps=",0,"! list for mapping server coordinates for files");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TIter),-1,-1,2,"fSrvMapsIter=",0,"! iterator on fSrvMaps");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TProof */
static void G__setup_memvarTProof(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TProof));
   { TProof *p; p=(TProof*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEStatusBits),-1,-2,1,G__FastAllocString(2048).Format("kUsingSessionGui=%lldLL",(long long)TProof::kUsingSessionGui).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEStatusBits),-1,-2,1,G__FastAllocString(2048).Format("kNewInputData=%lldLL",(long long)TProof::kNewInputData).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEStatusBits),-1,-2,1,G__FastAllocString(2048).Format("kIsClient=%lldLL",(long long)TProof::kIsClient).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEStatusBits),-1,-2,1,G__FastAllocString(2048).Format("kIsMaster=%lldLL",(long long)TProof::kIsMaster).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEStatusBits),-1,-2,1,G__FastAllocString(2048).Format("kIsTopMaster=%lldLL",(long long)TProof::kIsTopMaster).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEStatusBits),-1,-2,1,G__FastAllocString(2048).Format("kUseProgressDialog=%lldLL",(long long)TProof::kUseProgressDialog).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEQueryMode),-1,-2,1,G__FastAllocString(2048).Format("kSync=%lldLL",(long long)TProof::kSync).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEQueryMode),-1,-2,1,G__FastAllocString(2048).Format("kAsync=%lldLL",(long long)TProof::kAsync).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEUploadOpt),-1,-2,1,G__FastAllocString(2048).Format("kAppend=%lldLL",(long long)TProof::kAppend).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEUploadOpt),-1,-2,1,G__FastAllocString(2048).Format("kOverwriteDataSet=%lldLL",(long long)TProof::kOverwriteDataSet).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEUploadOpt),-1,-2,1,G__FastAllocString(2048).Format("kNoOverwriteDataSet=%lldLL",(long long)TProof::kNoOverwriteDataSet).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEUploadOpt),-1,-2,1,G__FastAllocString(2048).Format("kOverwriteAllFiles=%lldLL",(long long)TProof::kOverwriteAllFiles).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEUploadOpt),-1,-2,1,G__FastAllocString(2048).Format("kOverwriteNoFiles=%lldLL",(long long)TProof::kOverwriteNoFiles).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEUploadOpt),-1,-2,1,G__FastAllocString(2048).Format("kAskUser=%lldLL",(long long)TProof::kAskUser).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLERegisterOpt),-1,-2,1,G__FastAllocString(2048).Format("kFailIfExists=%lldLL",(long long)TProof::kFailIfExists).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLERegisterOpt),-1,-2,1,G__FastAllocString(2048).Format("kOverwriteIfExists=%lldLL",(long long)TProof::kOverwriteIfExists).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLERegisterOpt),-1,-2,1,G__FastAllocString(2048).Format("kMergeIfExists=%lldLL",(long long)TProof::kMergeIfExists).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEUploadDataSetAnswer),-1,-2,1,G__FastAllocString(2048).Format("kError=%lldLL",(long long)TProof::kError).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEUploadDataSetAnswer),-1,-2,1,G__FastAllocString(2048).Format("kDataSetExists=%lldLL",(long long)TProof::kDataSetExists).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEUploadDataSetAnswer),-1,-2,1,G__FastAllocString(2048).Format("kFail=%lldLL",(long long)TProof::kFail).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEUploadPackageOpt),-1,-2,1,G__FastAllocString(2048).Format("kUntar=%lldLL",(long long)TProof::kUntar).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEUploadPackageOpt),-1,-2,1,G__FastAllocString(2048).Format("kRemoveOld=%lldLL",(long long)TProof::kRemoveOld).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLERunStatus),-1,-2,1,G__FastAllocString(2048).Format("kRunning=%lldLL",(long long)TProof::kRunning).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLERunStatus),-1,-2,1,G__FastAllocString(2048).Format("kStopped=%lldLL",(long long)TProof::kStopped).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLERunStatus),-1,-2,1,G__FastAllocString(2048).Format("kAborted=%lldLL",(long long)TProof::kAborted).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLESubMerger),-1,-2,1,G__FastAllocString(2048).Format("kOutputSize=%lldLL",(long long)TProof::kOutputSize).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLESubMerger),-1,-2,1,G__FastAllocString(2048).Format("kSendOutput=%lldLL",(long long)TProof::kSendOutput).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLESubMerger),-1,-2,1,G__FastAllocString(2048).Format("kBeMerger=%lldLL",(long long)TProof::kBeMerger).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLESubMerger),-1,-2,1,G__FastAllocString(2048).Format("kMergerDown=%lldLL",(long long)TProof::kMergerDown).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLESubMerger),-1,-2,1,G__FastAllocString(2048).Format("kStopMerging=%lldLL",(long long)TProof::kStopMerging).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLESubMerger),-1,-2,1,G__FastAllocString(2048).Format("kOutputSent=%lldLL",(long long)TProof::kOutputSent).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEUrgent),-1,-2,4,"kLocalInterrupt=-1LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEUrgent),-1,-2,4,"kPing=0LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEUrgent),-1,-2,4,"kHardInterrupt=1LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEUrgent),-1,-2,4,"kSoftInterrupt=2LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEUrgent),-1,-2,4,"kShutdownInterrupt=3LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofCacheCommands),-1,-2,4,"kShowCache=1LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofCacheCommands),-1,-2,4,"kClearCache=2LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofCacheCommands),-1,-2,4,"kShowPackages=3LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofCacheCommands),-1,-2,4,"kClearPackages=4LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofCacheCommands),-1,-2,4,"kClearPackage=5LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofCacheCommands),-1,-2,4,"kBuildPackage=6LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofCacheCommands),-1,-2,4,"kLoadPackage=7LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofCacheCommands),-1,-2,4,"kShowEnabledPackages=8LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofCacheCommands),-1,-2,4,"kShowSubCache=9LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofCacheCommands),-1,-2,4,"kClearSubCache=10LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofCacheCommands),-1,-2,4,"kShowSubPackages=11LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofCacheCommands),-1,-2,4,"kDisableSubPackages=12LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofCacheCommands),-1,-2,4,"kDisableSubPackage=13LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofCacheCommands),-1,-2,4,"kBuildSubPackage=14LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofCacheCommands),-1,-2,4,"kUnloadPackage=15LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofCacheCommands),-1,-2,4,"kDisablePackage=16LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofCacheCommands),-1,-2,4,"kUnloadPackages=17LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofCacheCommands),-1,-2,4,"kDisablePackages=18LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofCacheCommands),-1,-2,4,"kListPackages=19LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofCacheCommands),-1,-2,4,"kListEnabledPackages=20LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofCacheCommands),-1,-2,4,"kLoadMacro=21LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofDataSetCommands),-1,-2,4,"kUploadDataSet=1LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofDataSetCommands),-1,-2,4,"kCheckDataSetName=2LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofDataSetCommands),-1,-2,4,"kGetDataSets=3LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofDataSetCommands),-1,-2,4,"kRegisterDataSet=4LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofDataSetCommands),-1,-2,4,"kGetDataSet=5LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofDataSetCommands),-1,-2,4,"kVerifyDataSet=6LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofDataSetCommands),-1,-2,4,"kRemoveDataSet=7LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofDataSetCommands),-1,-2,4,"kMergeDataSet=8LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofDataSetCommands),-1,-2,4,"kShowDataSets=9LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofDataSetCommands),-1,-2,4,"kGetQuota=10LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofDataSetCommands),-1,-2,4,"kShowQuota=11LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofDataSetCommands),-1,-2,4,"kSetDefaultTreeName=12LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofDataSetCommands),-1,-2,4,"kCache=13LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLESendFileOpt),-1,-2,4,"kAscii=0LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLESendFileOpt),-1,-2,4,"kBinary=1LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLESendFileOpt),-1,-2,4,"kForce=2LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLESendFileOpt),-1,-2,4,"kForward=4LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLESendFileOpt),-1,-2,4,"kCpBin=8LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLESendFileOpt),-1,-2,4,"kCp=16LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofWrkListAction),-1,-2,4,"kActivateWorker=1LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofWrkListAction),-1,-2,4,"kDeactivateWorker=2LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEBuildPackageOpt),-1,-2,4,"kDontBuildOnClient=-2LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEBuildPackageOpt),-1,-2,4,"kBuildOnSlavesNoWait=-1LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEBuildPackageOpt),-1,-2,4,"kBuildAll=0LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEBuildPackageOpt),-1,-2,4,"kCollectBuildResults=1LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofShowQuotaOpt),-1,-2,4,"kPerGroup=1LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofShowQuotaOpt),-1,-2,4,"kPerUser=2LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofClearData),-1,-2,4,"kPurge=1LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofClearData),-1,-2,4,"kUnregistered=2LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofClearData),-1,-2,4,"kDataset=4LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofClearData),-1,-2,4,"kForceClear=8LL",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fValid=",0,"is this a valid proof object");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fMaster=",0,"master server (\"\" if a master); used in the browser");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fWorkDir=",0,"current work directory on remote servers");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fGroup=",0,"PROOF group of this user");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fLogLevel=",0,"server debug logging level");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fStatus=",0,"remote return status (part of kPROOF_LOGDONE)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCheckFileStatus=",0,"remote return status after kPROOF_CHECKFILE");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,4,"fRecvMessages=",0,"Messages received during collect not yet processed");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,4,"fSlaveInfo=",0,"!list returned by kPROOF_GETSLAVEINFO");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fSendGroupView=",0,"if true send new group view");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,4,"fActiveSlaves=",0,"list of active slaves (subset of all slaves)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,4,"fInactiveSlaves=",0,"list of inactive slaves (good but not used for processing)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,4,"fUniqueSlaves=",0,"list of all active slaves with unique file systems");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,4,"fAllUniqueSlaves=",0,"list of all active slaves with unique file systems, including all submasters");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,4,"fNonUniqueMasters=",0,"list of all active masters with a nonunique file system");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TMonitor),-1,-1,4,"fActiveMonitor=",0,"monitor activity on all active slave sockets");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TMonitor),-1,-1,4,"fUniqueMonitor=",0,"monitor activity on all unique slave sockets");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TMonitor),-1,-1,4,"fAllUniqueMonitor=",0,"monitor activity on all unique slave sockets, including all submasters");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TMonitor),-1,-1,4,"fCurrentMonitor=",0,"currently active monitor");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fBytesRead=",0,"bytes read by all slaves during the session");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fRealTime=",0,"realtime spent by all slaves during the session");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fCpuTime=",0,"CPU time spent by all slaves during the session");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TSignalHandler),-1,-1,4,"fIntHandler=",0,"interrupt signal handler (ctrl-c)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TPluginHandler),-1,-1,4,"fProgressDialog=",0,"progress dialog plugin");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fProgressDialogStarted=",0,"indicates if the progress dialog is up");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TVirtualProofPlayer),-1,-1,4,"fPlayer=",0,"current player");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,4,"fFeedback=",0,"list of names to be returned as feedback");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,4,"fChains=",0,"chains with this proof set");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_maplETStringcOTProofcLcLMD5Mod_tcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTProofcLcLMD5Mod_tgRsPgRsPgR),G__defined_typename("FileMap_t"),-1,4,"fFileMap=",0,"map keeping track of a file's md5 and mod time");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TDSet),-1,-1,4,"fDSet=",0,"current TDSet being validated");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNotIdle=",0,"Number of non-idle sub-nodes");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fSync=",0,"true if type of currently processed query is sync");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLERunStatus),-1,-1,4,"fRunStatus=",0,"run status");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsWaiting=",0,"true if queries have been enqueued");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fRedirLog=",0,"redirect received log info");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fLogFileName=",0,"name of the temp file for redirected logs");
   G__memvar_setup((void*)0,69,0,0,-1,-1,-1,4,"fLogFileW=",0,"temp file to redirect logs");
   G__memvar_setup((void*)0,69,0,0,-1,-1,-1,4,"fLogFileR=",0,"temp file to read redirected logs");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fLogToWindowOnly=",0,"send log to window only");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TProofMergePrg),-1,-1,4,"fMergePrg=",0,"Merging progress");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,4,"fWaitingSlaves=",0,"stores a TPair of the slaves's TSocket and TMessage");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,4,"fQueries=",0,"list of TProofQuery objects");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fOtherQueries=",0,"number of queries in list from previous sessions");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fDrawQueries=",0,"number of draw queries during this sessions");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMaxDrawQueries=",0,"max number of draw queries kept");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fSeqNum=",0,"Remote sequential # of the last query submitted");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fSessionID=",0,"remote ID of the session");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fEndMaster=",0,"true for a master in direct contact only with workers");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fPackageDir=",0,"package directory (used on client)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_THashList),-1,-1,4,"fGlobalPackageDirList=",0,"list of directories containing global packages libs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TProofLockPath),-1,-1,4,"fPackageLock=",0,"package lock");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,4,"fEnabledPackagesOnClient=",0,"list of packages enabled on client");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,4,"fInputData=",0,"Input data objects sent over via file");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fInputDataFile=",0,"File with input data objects");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TProofOutputList),-1,-1,4,"fOutputList=",0,"TList implementation filtering ls(...) and Print(...)");
   G__memvar_setup((void*)0,89,0,0,-1,G__defined_typename("PrintProgress_t"),-1,4,"fPrintProgress=",0,"Function function to display progress info in batch mode");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TVirtualMutex),-1,-1,4,"fCloseMutex=",0,"Avoid crashes in MarkBad or alike while closing");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,4,"fLoadedMacros=",0,"List of loaded macros (just file names)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-2,4,"fgProofEnvList=",0,"List of TNameds defining environment");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fMergersSet=",0,"Indicates, if the following variables have been initialized properly");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMergersCount=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fWorkersToMerge=",0,"Current total number of workers, which have not been yet assigned to any merger");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fLastAssignedMerger=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,4,"fMergers=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fFinalizationRunning=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRedirectNext=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TPluginHandler),-1,-2,4,"fgLogViewer=",0,"Log dialog box plugin");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLESlaves),-1,-2,2,"kAll=0LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLESlaves),-1,-2,2,"kActive=1LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLESlaves),-1,-2,2,"kUnique=2LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLESlaves),-1,-2,2,"kAllUnique=3LL",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fMasterServ=",0,"true if we are a master server");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TUrl),-1,-1,2,"fUrl=",0,"Url of the master");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,2,"fConfFile=",0,"file containing config information");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,2,"fConfDir=",0,"directory containing cluster config information");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,2,"fImage=",0,"master's image name");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fProtocol=",0,"remote PROOF server protocol version number");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,2,"fSlaves=",0,"list of all slave servers as in config file");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,2,"fBadSlaves=",0,"dead slaves (subset of all slaves)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TMonitor),-1,-1,2,"fAllMonitor=",0,"monitor activity on all valid slave sockets");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fDataReady=",0,"true if data is ready to be analyzed");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fBytesReady=",0,"number of bytes staged");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fTotalBytes=",0,"number of bytes to be analyzed");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,2,"fAvailablePackages=",0,"list of available packages");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,2,"fEnabledPackages=",0,"list of enabled packages");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,2,"fRunningDSets=",0,"Temporary datasets used for async running");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fCollectTimeout=",0,"Timeout for (some) collect actions");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,2,"fDataPoolUrl=",0,"default data pool entry point URL");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__G__ProofLN_TProofMgrcLcLEServType),-1,-1,2,"fServType=",0,"type of server: proofd, XrdProofd");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TProofMgr),-1,-1,2,"fManager=",0,"manager to which this session belongs (if any)");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEQueryMode),-1,-1,2,"fQueryMode=",0,"default query mode");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fDynamicStartup=",0,"are the workers started dynamically?");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TSemaphore),-1,-2,2,"fgSemaphore=",0,"semaphore to control no of parallel startup threads");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TProofChain */
static void G__setup_memvarTProofChain(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofChain));
   { TProofChain *p; p=(TProofChain*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofChaincLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kOwnsChain=%lldLL",(long long)TProofChain::kOwnsChain).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TChain),-1,-1,2,"fChain=",0,"mother chain: needed for the browsing list");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TDSet),-1,-1,2,"fSet=",0,"TDSet");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TDrawFeedback),-1,-1,2,"fDrawFeedback=",0,"feedback handler");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSetElement */
static void G__setup_memvarTDSetElement(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TDSetElement));
   { TDSetElement *p; p=(TDSetElement*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TDSetElementcLcLEStatusBits),-1,-2,1,G__FastAllocString(2048).Format("kHasBeenLookedUp=%lldLL",(long long)TDSetElement::kHasBeenLookedUp).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TDSetElementcLcLEStatusBits),-1,-2,1,G__FastAllocString(2048).Format("kWriteV3=%lldLL",(long long)TDSetElement::kWriteV3).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TDSetElementcLcLEStatusBits),-1,-2,1,G__FastAllocString(2048).Format("kEmpty=%lldLL",(long long)TDSetElement::kEmpty).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TDSetElementcLcLEStatusBits),-1,-2,1,G__FastAllocString(2048).Format("kCorrupted=%lldLL",(long long)TDSetElement::kCorrupted).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TDSetElementcLcLEStatusBits),-1,-2,1,G__FastAllocString(2048).Format("kNewRun=%lldLL",(long long)TDSetElement::kNewRun).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TDSetElementcLcLEStatusBits),-1,-2,1,G__FastAllocString(2048).Format("kNewPacket=%lldLL",(long long)TDSetElement::kNewPacket).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fDirectory=",0,"directory in file where to look for objects");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fFirst=",0,"first entry to process");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fNum=",0,"number of entries to process");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fMsd=",0,"mass storage domain name");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fTDSetOffset=",0,"the global offset in the TDSet of the first");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TObject),-1,-1,4,"fEntryList=",0,"entry (or event) list to be used in processing");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fValid=",0,"whether or not the input values are valid");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fEntries=",0,"total number of possible entries in file");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,4,"fFriends=",0,"friend elements");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fDataSet=",0,"Name of the dataset of which this element is part");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,4,"fAssocObjList=",0,"List of objects associated to this element");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<TDSetElement*,TString> */
static void G__setup_memvarpairlETDSetElementmUcOTStringgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_pairlETDSetElementmUcOTStringgR));
   { pair<TDSetElement*,TString> *p; p=(pair<TDSetElement*,TString>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TDSetElement),-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > > */
static void G__setup_memvarlistlEpairlETDSetElementmUcOTStringgRcOallocatorlEpairlETDSetElementmUcOTStringgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_listlEpairlETDSetElementmUcOTStringgRcOallocatorlEpairlETDSetElementmUcOTStringgRsPgRsPgR));
   { list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > > *p; p=(list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* TProofServ */
static void G__setup_memvarTProofServ(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofServ));
   { TProofServ *p; p=(TProofServ*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofServcLcLEStatusBits),-1,-2,1,G__FastAllocString(2048).Format("kHighMemory=%lldLL",(long long)TProofServ::kHighMemory).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofServcLcLEQueryAction),-1,-2,1,G__FastAllocString(2048).Format("kQueryOK=%lldLL",(long long)TProofServ::kQueryOK).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofServcLcLEQueryAction),-1,-2,1,G__FastAllocString(2048).Format("kQueryModify=%lldLL",(long long)TProofServ::kQueryModify).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofServcLcLEQueryAction),-1,-2,1,G__FastAllocString(2048).Format("kQueryStop=%lldLL",(long long)TProofServ::kQueryStop).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofServcLcLEQueryAction),-1,-2,1,G__FastAllocString(2048).Format("kQueryEnqueued=%lldLL",(long long)TProofServ::kQueryEnqueued).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fService=",0,"service we are running, either \"proofserv\" or \"proofslave\"");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fUser=",0,"user as which we run");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fGroup=",0,"group the user belongs to");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fConfDir=",0,"directory containing cluster config information");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fConfFile=",0,"file containing config information");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fWorkDir=",0,"directory containing all proof related info");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fImage=",0,"image name of the session");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fSessionTag=",0,"tag for the server session");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fTopSessionTag=",0,"tag for the global session");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fSessionDir=",0,"directory containing session dependent files");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fPackageDir=",0,"directory containing packages and user libs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_THashList),-1,-1,4,"fGlobalPackageDirList=",0,"list of directories containing global packages libs");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fCacheDir=",0,"directory containing cache of user files");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fQueryDir=",0,"directory containing query results and status");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fDataSetDir=",0,"directory containing info about known data sets");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fDataDir=",0,"directory containing data files produced during queries");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fAdminPath=",0,"admin path for this session");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TProofLockPath),-1,-1,4,"fPackageLock=",0,"package dir locker");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TProofLockPath),-1,-1,4,"fCacheLock=",0,"cache dir locker");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TProofLockPath),-1,-1,4,"fQueryLock=",0,"query dir locker");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fArchivePath=",0,"default archive path");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TSocket),-1,-1,4,"fSocket=",0,"socket connection to client");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TProof),-1,-1,4,"fProof=",0,"PROOF talking to slave servers");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TVirtualProofPlayer),-1,-1,4,"fPlayer=",0,"actual player");
   G__memvar_setup((void*)0,69,0,0,-1,-1,-1,4,"fLogFile=",0,"log file");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fLogFileDes=",0,"log file descriptor");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fLogFileMaxSize=",0,"max size for log files (enabled if > 0)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,4,"fEnabledPackages=",0,"list of enabled packages");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fProtocol=",0,"protocol version number");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fOrdinal=",0,"slave ordinal number");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fGroupId=",0,"slave unique id in the active slave group");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fGroupSize=",0,"size of the active slave group");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fLogLevel=",0,"debug logging level");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNcmd=",0,"command history number");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fGroupPriority=",0,"priority of group the user belongs to (0 - 100)");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fEndMaster=",0,"true for a master in direct contact only with workers");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fMasterServ=",0,"true if we are a master server");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fInterrupt=",0,"if true macro execution will be stopped");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fRealTime=",0,"real time spent executing commands");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fCpuTime=",0,"CPU time spent executing commands");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TStopwatch),-1,-1,4,"fLatency=",0,"measures latency of packet requests");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TStopwatch),-1,-1,4,"fCompute=",0,"measures time spend processing a packet");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fQuerySeqNum=",0,"sequential number of the current or last query");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTotSessions=",0,"Total number of PROOF sessions on the cluster ");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fActSessions=",0,"Total number of active PROOF sessions on the cluster ");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fEffSessions=",0,"Effective Number of PROOF sessions on the assigned machines");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TFileHandler),-1,-1,4,"fInputHandler=",0,"Input socket handler");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TQueryResultManager),-1,-1,4,"fQMgr=",0,"Query-result manager");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,4,"fWaitingQueries=",0,"list of TProofQueryResult waiting to be processed");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIdle=",0,"TRUE if idle");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TMutex),-1,-1,4,"fQMtx=",0,"To protect async msg queue");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,4,"fQueuedMsg=",0,"list of messages waiting to be processed");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fPrefix=",0,"Prefix identifying the node");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fRealTimeLog=",0,"TRUE if log messages should be send back in real-time");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TShutdownTimer),-1,-1,4,"fShutdownTimer=",0,"Timer used to shutdown out-of-control sessions");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TReaperTimer),-1,-1,4,"fReaperTimer=",0,"Timer used to control children state");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TIdleTOTimer),-1,-1,4,"fIdleTOTimer=",0,"Timer used to control children state");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fInflateFactor=",0,"Factor in 1/1000 to inflate the CPU time");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCompressMsg=",0,"Compression level for messages");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TDataSetManager),-1,-1,4,"fDataSetManager=",0,"dataset manager");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fSendLogToMaster=",0,"On workers, controls logs sending to master");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TServerSocket),-1,-1,4,"fMergingSocket=",0,"Socket used for merging outputs if submerger");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TMonitor),-1,-1,4,"fMergingMonitor=",0,"Monitor for merging sockets");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMergedWorkers=",0,"Number of workers merged");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMaxQueries=",0,"Max number of queries fully kept");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fMaxBoxSize=",0,"Max size of the sandbox");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fHWMBoxSize=",0,"High-Water-Mark on the sandbox size");
   G__memvar_setup((void*)0,108,0,0,-1,G__defined_typename("Long_t"),-2,4,"fgVirtMemMax=",0,"Hard limit enforced by the system (in kB)");
   G__memvar_setup((void*)0,108,0,0,-1,G__defined_typename("Long_t"),-2,4,"fgResMemMax=",0,"Hard limit on the resident memory checked");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-2,4,"fgMemHWM=",0,"Threshold fraction of max for warning and finer monitoring");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-2,4,"fgMemStop=",0,"Fraction of max for stop processing");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fMsgSizeHWM=",0,"High-Water-Mark on the size of messages with results");
   G__memvar_setup((void*)0,69,0,0,-1,-1,-2,4,"fgErrorHandlerFile=",0,"File where to log");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-2,4,"fgRecursive=",0,"Keep track of recursive inputs during processing");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-2,4,"fgLogToSysLog=",0,">0 sent to syslog too");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-2,4,"fgSysLogService=",0,"name of the syslog service (eg: proofm-0, proofw-0.67)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-2,4,"fgSysLogEntity=",0,"logging entity (<user>:<group>)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-2,2,"fgLastMsg=",0,"Message about status before exception");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSetProxy */
static void G__setup_memvarTDSetProxy(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TDSetProxy));
   { TDSetProxy *p; p=(TDSetProxy*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TProofServ),-1,-1,4,"fServ=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDataSetManager */
static void G__setup_memvarTDataSetManager(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TDataSetManager));
   { TDataSetManager *p; p=(TDataSetManager*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,2,"fGroup=",0,"Group to which the owner of this session belongs");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,2,"fUser=",0,"Owner of the session");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,2,"fCommonUser=",0,"User that stores the COMMON datasets");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,2,"fCommonGroup=",0,"Group that stores the COMMON datasets");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TUri),-1,-1,2,"fBase=",0,"Base URI used to parse dataset names");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TMap),-1,-1,2,"fGroupQuota=",0,"Group quotas (read from config file)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TMap),-1,-1,2,"fGroupUsed=",0,"<group> --> <used bytes> (TParameter)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TMap),-1,-1,2,"fUserUsed=",0,"<group> --> <map of users> --> <value>");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fAvgFileSize=",0,"Average file size to be used to estimate the dataset size (in MB)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNTouchedFiles=",0,"Number of files touched in the last ScanDataSet operation");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNOpenedFiles=",0,"Number of files opened in the last ScanDataSet operation");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNDisappearedFiles=",0,"Number of files disappared in the last ScanDataSet operation");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,2,"fGroupConfigFile=",0,"Path to the group config file");
   G__memvar_setup((void*)0,108,0,0,-1,G__defined_typename("Long_t"),-1,2,"fMTimeGroupConfig=",0,"Last modification of the group config file");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-2,2,"fgCommonDataSetTag=",0,"Name for common datasets, default: COMMON");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-2,2,"fgDataSetSrvMaps=",0,"List of TPair(TRegexp, TObjString) for mapping server coordinates");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TDataSetManagercLcLEDataSetStatusBits),-1,-2,1,G__FastAllocString(2048).Format("kCheckQuota=%lldLL",(long long)TDataSetManager::kCheckQuota).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TDataSetManagercLcLEDataSetStatusBits),-1,-2,1,G__FastAllocString(2048).Format("kAllowRegister=%lldLL",(long long)TDataSetManager::kAllowRegister).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TDataSetManagercLcLEDataSetStatusBits),-1,-2,1,G__FastAllocString(2048).Format("kAllowVerify=%lldLL",(long long)TDataSetManager::kAllowVerify).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TDataSetManagercLcLEDataSetStatusBits),-1,-2,1,G__FastAllocString(2048).Format("kTrustInfo=%lldLL",(long long)TDataSetManager::kTrustInfo).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TDataSetManagercLcLEDataSetStatusBits),-1,-2,1,G__FastAllocString(2048).Format("kIsSandbox=%lldLL",(long long)TDataSetManager::kIsSandbox).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TDataSetManagercLcLEDataSetStatusBits),-1,-2,1,G__FastAllocString(2048).Format("kUseCache=%lldLL",(long long)TDataSetManager::kUseCache).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TDataSetManagercLcLEDataSetStatusBits),-1,-2,1,G__FastAllocString(2048).Format("kDoNotUseCache=%lldLL",(long long)TDataSetManager::kDoNotUseCache).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TDataSetManagercLcLEDataSetWorkOpts),-1,-2,1,G__FastAllocString(2048).Format("kDebug=%lldLL",(long long)TDataSetManager::kDebug).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TDataSetManagercLcLEDataSetWorkOpts),-1,-2,1,G__FastAllocString(2048).Format("kShowDefault=%lldLL",(long long)TDataSetManager::kShowDefault).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TDataSetManagercLcLEDataSetWorkOpts),-1,-2,1,G__FastAllocString(2048).Format("kPrint=%lldLL",(long long)TDataSetManager::kPrint).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TDataSetManagercLcLEDataSetWorkOpts),-1,-2,1,G__FastAllocString(2048).Format("kExport=%lldLL",(long long)TDataSetManager::kExport).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TDataSetManagercLcLEDataSetWorkOpts),-1,-2,1,G__FastAllocString(2048).Format("kQuotaUpdate=%lldLL",(long long)TDataSetManager::kQuotaUpdate).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TDataSetManagercLcLEDataSetWorkOpts),-1,-2,1,G__FastAllocString(2048).Format("kSetDefaultTree=%lldLL",(long long)TDataSetManager::kSetDefaultTree).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TDataSetManagercLcLEDataSetWorkOpts),-1,-2,1,G__FastAllocString(2048).Format("kForceScan=%lldLL",(long long)TDataSetManager::kForceScan).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TDataSetManagercLcLEDataSetWorkOpts),-1,-2,1,G__FastAllocString(2048).Format("kNoHeaderPrint=%lldLL",(long long)TDataSetManager::kNoHeaderPrint).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TDataSetManagercLcLEDataSetWorkOpts),-1,-2,1,G__FastAllocString(2048).Format("kReopen=%lldLL",(long long)TDataSetManager::kReopen).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TDataSetManagercLcLEDataSetWorkOpts),-1,-2,1,G__FastAllocString(2048).Format("kTouch=%lldLL",(long long)TDataSetManager::kTouch).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TDataSetManagercLcLEDataSetWorkOpts),-1,-2,1,G__FastAllocString(2048).Format("kMaxFiles=%lldLL",(long long)TDataSetManager::kMaxFiles).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TDataSetManagercLcLEDataSetWorkOpts),-1,-2,1,G__FastAllocString(2048).Format("kReadShort=%lldLL",(long long)TDataSetManager::kReadShort).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TDataSetManagercLcLEDataSetWorkOpts),-1,-2,1,G__FastAllocString(2048).Format("kFileMustExist=%lldLL",(long long)TDataSetManager::kFileMustExist).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TDataSetManagercLcLEDataSetWorkOpts),-1,-2,1,G__FastAllocString(2048).Format("kNoAction=%lldLL",(long long)TDataSetManager::kNoAction).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TDataSetManagercLcLEDataSetWorkOpts),-1,-2,1,G__FastAllocString(2048).Format("kLocateOnly=%lldLL",(long long)TDataSetManager::kLocateOnly).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TDataSetManagercLcLEDataSetWorkOpts),-1,-2,1,G__FastAllocString(2048).Format("kStageOnly=%lldLL",(long long)TDataSetManager::kStageOnly).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TDataSetManagercLcLEDataSetWorkOpts),-1,-2,1,G__FastAllocString(2048).Format("kNoCacheUpdate=%lldLL",(long long)TDataSetManager::kNoCacheUpdate).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TDataSetManagercLcLEDataSetWorkOpts),-1,-2,1,G__FastAllocString(2048).Format("kRefreshLs=%lldLL",(long long)TDataSetManager::kRefreshLs).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TDataSetManagercLcLEDataSetWorkOpts),-1,-2,1,G__FastAllocString(2048).Format("kList=%lldLL",(long long)TDataSetManager::kList).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TDataSetManagercLcLEDataSetWorkOpts),-1,-2,1,G__FastAllocString(2048).Format("kAllFiles=%lldLL",(long long)TDataSetManager::kAllFiles).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TDataSetManagercLcLEDataSetWorkOpts),-1,-2,1,G__FastAllocString(2048).Format("kStagedFiles=%lldLL",(long long)TDataSetManager::kStagedFiles).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TDataSetManagercLcLEDataSetWorkOpts),-1,-2,1,G__FastAllocString(2048).Format("kNoStagedCheck=%lldLL",(long long)TDataSetManager::kNoStagedCheck).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDataSetManagerFile */
static void G__setup_memvarTDataSetManagerFile(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TDataSetManagerFile));
   { TDataSetManagerFile *p; p=(TDataSetManagerFile*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fDataSetDir=",0,"Location of datasets");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fMSSUrl=",0,"URL for the Mass Storage System");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fStageOpts=",0,"Option string to be used in issuing staging requests");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fDataSetLockFile=",0,"Dataset lock file");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fLockFileTimeLimit=",0,"Limit in seconds after a lock automatically expires");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fListFile=",0,"File to check repository updates");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsRemote=",0,"True if the repository is remote");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fUseCache=",0,"True if the cache is used for browsing remote repositories");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fLocalCacheDir=",0,"Local cache when the repository is remote");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCacheUpdatePeriod=",0,"Period for checking for new updated information");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TProofDesc */
static void G__setup_memvarTProofDesc(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDesc));
   { TProofDesc *p; p=(TProofDesc*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofDesccLcLEStatus),-1,-2,1,G__FastAllocString(2048).Format("kUnknown=%lldLL",(long long)TProofDesc::kUnknown).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofDesccLcLEStatus),-1,-2,1,G__FastAllocString(2048).Format("kIdle=%lldLL",(long long)TProofDesc::kIdle).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofDesccLcLEStatus),-1,-2,1,G__FastAllocString(2048).Format("kRunning=%lldLL",(long long)TProofDesc::kRunning).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofDesccLcLEStatus),-1,-2,1,G__FastAllocString(2048).Format("kShutdown=%lldLL",(long long)TProofDesc::kShutdown).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fLocalId=",0,"ID in the local list");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fStatus=",0,"Session status (see EStatus)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TProof),-1,-1,4,"fProof=",0,"Related instance of TProof");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRemoteId=",0,"Remote ID assigned by the coordinator to the proofserv");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fUrl=",0,"Url of the connection");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TProofLog */
static void G__setup_memvarTProofLog(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofLog));
   { TProofLog *p; p=(TProofLog*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TProofMgr),-1,-1,4,"fMgr=",0,"parent TProofMgr");
   G__memvar_setup((void*)0,89,0,0,-1,-1,-1,4,"fFILE=",0,"pointer logging file, if any");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,4,"fElem=",0,"list of TProofLogElem objects");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TDatime),-1,-1,4,"fStartTime=",0,"Time at which this session started");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofLogcLcLELogLocationBit),-1,-2,1,G__FastAllocString(2048).Format("kLogToBox=%lldLL",(long long)TProofLog::kLogToBox).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofLogcLcLERetrieveOpt),-1,-2,1,G__FastAllocString(2048).Format("kLeading=%lldLL",(long long)TProofLog::kLeading).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofLogcLcLERetrieveOpt),-1,-2,1,G__FastAllocString(2048).Format("kTrailing=%lldLL",(long long)TProofLog::kTrailing).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofLogcLcLERetrieveOpt),-1,-2,1,G__FastAllocString(2048).Format("kAll=%lldLL",(long long)TProofLog::kAll).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofLogcLcLERetrieveOpt),-1,-2,1,G__FastAllocString(2048).Format("kGrep=%lldLL",(long long)TProofLog::kGrep).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TProofMgr */
static void G__setup_memvarTProofMgr(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofMgr));
   { TProofMgr *p; p=(TProofMgr*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofMgrcLcLEServType),-1,-2,1,G__FastAllocString(2048).Format("kProofd=%lldLL",(long long)TProofMgr::kProofd).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofMgrcLcLEServType),-1,-2,1,G__FastAllocString(2048).Format("kXProofd=%lldLL",(long long)TProofMgr::kXProofd).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofMgrcLcLEServType),-1,-2,1,G__FastAllocString(2048).Format("kProofLite=%lldLL",(long long)TProofMgr::kProofLite).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,89,0,0,-1,G__defined_typename("TProofMgr_t"),-2,4,"fgTXProofMgrHook=",0,"Constructor hooks for TXProofMgr");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRemoteProtocol=",0,"Protocol number run by the daemon server");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__G__ProofLN_TProofMgrcLcLEServType),-1,-1,2,"fServType=",0,"Type of server: old-proofd, XrdProofd");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,2,"fSessions=",0,"PROOF session managed by this server");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TUrl),-1,-1,2,"fUrl=",0,"Server URL");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TSignalHandler),-1,-1,2,"fIntHandler=",0,"Interrupt signal handler (ctrl-c)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-2,2,"fgListOfManagers=",0,"Sub-list of TROOT::ListOfProofs for managers");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TProofDebug */
static void G__setup_memvarTProofDebug(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDebug));
   { TProofDebug *p; p=(TProofDebug*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofDebugcLcLEProofDebugMask),-1,-2,1,G__FastAllocString(2048).Format("kNone=%lldLL",(long long)TProofDebug::kNone).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofDebugcLcLEProofDebugMask),-1,-2,1,G__FastAllocString(2048).Format("kPacketizer=%lldLL",(long long)TProofDebug::kPacketizer).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofDebugcLcLEProofDebugMask),-1,-2,1,G__FastAllocString(2048).Format("kLoop=%lldLL",(long long)TProofDebug::kLoop).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofDebugcLcLEProofDebugMask),-1,-2,1,G__FastAllocString(2048).Format("kSelector=%lldLL",(long long)TProofDebug::kSelector).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofDebugcLcLEProofDebugMask),-1,-2,1,G__FastAllocString(2048).Format("kOutput=%lldLL",(long long)TProofDebug::kOutput).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofDebugcLcLEProofDebugMask),-1,-2,1,G__FastAllocString(2048).Format("kInput=%lldLL",(long long)TProofDebug::kInput).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofDebugcLcLEProofDebugMask),-1,-2,1,G__FastAllocString(2048).Format("kGlobal=%lldLL",(long long)TProofDebug::kGlobal).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofDebugcLcLEProofDebugMask),-1,-2,1,G__FastAllocString(2048).Format("kPackage=%lldLL",(long long)TProofDebug::kPackage).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofDebugcLcLEProofDebugMask),-1,-2,1,G__FastAllocString(2048).Format("kFeedback=%lldLL",(long long)TProofDebug::kFeedback).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofDebugcLcLEProofDebugMask),-1,-2,1,G__FastAllocString(2048).Format("kCondor=%lldLL",(long long)TProofDebug::kCondor).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofDebugcLcLEProofDebugMask),-1,-2,1,G__FastAllocString(2048).Format("kDraw=%lldLL",(long long)TProofDebug::kDraw).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofDebugcLcLEProofDebugMask),-1,-2,1,G__FastAllocString(2048).Format("kAsyn=%lldLL",(long long)TProofDebug::kAsyn).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofDebugcLcLEProofDebugMask),-1,-2,1,G__FastAllocString(2048).Format("kCache=%lldLL",(long long)TProofDebug::kCache).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofDebugcLcLEProofDebugMask),-1,-2,1,G__FastAllocString(2048).Format("kCollect=%lldLL",(long long)TProofDebug::kCollect).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofDebugcLcLEProofDebugMask),-1,-2,1,G__FastAllocString(2048).Format("kDataset=%lldLL",(long long)TProofDebug::kDataset).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofDebugcLcLEProofDebugMask),-1,-2,1,G__FastAllocString(2048).Format("kSubmerger=%lldLL",(long long)TProofDebug::kSubmerger).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofDebugcLcLEProofDebugMask),-1,-2,1,G__FastAllocString(2048).Format("kAll=%lldLL",(long long)TProofDebug::kAll).data(),0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TProofOutputList */
static void G__setup_memvarTProofOutputList(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofOutputList));
   { TProofOutputList *p; p=(TProofOutputList*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,4,"fDontShow=",0,"list of reg expression defining what should not be shown");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TVirtualProofPlayer */
static void G__setup_memvarTVirtualProofPlayer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TVirtualProofPlayer));
   { TVirtualProofPlayer *p; p=(TVirtualProofPlayer*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TVirtualProofPlayercLcLEStatusBits),-1,-2,1,G__FastAllocString(2048).Format("kIsSubmerger=%lldLL",(long long)TVirtualProofPlayer::kIsSubmerger).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TVirtualProofPlayercLcLEExitStatus),-1,-2,1,G__FastAllocString(2048).Format("kFinished=%lldLL",(long long)TVirtualProofPlayer::kFinished).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TVirtualProofPlayercLcLEExitStatus),-1,-2,1,G__FastAllocString(2048).Format("kStopped=%lldLL",(long long)TVirtualProofPlayer::kStopped).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TVirtualProofPlayercLcLEExitStatus),-1,-2,1,G__FastAllocString(2048).Format("kAborted=%lldLL",(long long)TVirtualProofPlayer::kAborted).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSlave */
static void G__setup_memvarTSlave(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TSlave));
   { TSlave *p; p=(TSlave*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TSlavecLcLESlaveType),-1,-2,1,G__FastAllocString(2048).Format("kMaster=%lldLL",(long long)TSlave::kMaster).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TSlavecLcLESlaveType),-1,-2,1,G__FastAllocString(2048).Format("kSlave=%lldLL",(long long)TSlave::kSlave).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TSlavecLcLESlaveStatus),-1,-2,1,G__FastAllocString(2048).Format("kInvalid=%lldLL",(long long)TSlave::kInvalid).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TSlavecLcLESlaveStatus),-1,-2,1,G__FastAllocString(2048).Format("kActive=%lldLL",(long long)TSlave::kActive).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TSlavecLcLESlaveStatus),-1,-2,1,G__FastAllocString(2048).Format("kInactive=%lldLL",(long long)TSlave::kInactive).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,89,0,0,-1,G__defined_typename("TSlave_t"),-2,4,"fgTXSlaveHook=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,2,"fName=",0,"slave's hostname");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,2,"fImage=",0,"slave's image name");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,2,"fProofWorkDir=",0,"base proofserv working directory (info obtained from slave)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,2,"fWorkDir=",0,"slave's working directory (info obtained from slave)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,2,"fUser=",0,"slave's user id");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,2,"fGroup=",0,"slave's group id");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fPort=",0,"slave's port number");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,2,"fOrdinal=",0,"slave's ordinal number");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fPerfIdx=",0,"relative CPU performance index");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fProtocol=",0,"slave's protocol level");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TSocket),-1,-1,2,"fSocket=",0,"socket to slave");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TProof),-1,-1,2,"fProof=",0,"proof cluster to which slave belongs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TFileHandler),-1,-1,2,"fInput=",0,"input handler related to this slave");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fBytesRead=",0,"bytes read by slave (info is obtained from slave)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fRealTime=",0,"real time spent executing commands (info obtained from slave)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fCpuTime=",0,"CPU time spent executing commands (info obtained from slave)");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__G__ProofLN_TSlavecLcLESlaveType),-1,-1,2,"fSlaveType=",0,"type of slave (either kMaster or kSlave)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fStatus=",0,"remote return status");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fParallel=",0,"number of active slaves");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,2,"fMsd=",0,"mass storage domain of slave");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,2,"fSessionTag=",0,"unique tag for ths worker process");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,2,"fROOTVers=",0,"ROOT version run by worker");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,2,"fArchComp=",0,"Build architecture, compiler on worker (e.g. linux-gcc345)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TProofProgressInfo */
static void G__setup_memvarTProofProgressInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofProgressInfo));
   { TProofProgressInfo *p; p=(TProofProgressInfo*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fTotal)-(long)(p)),110,0,0,-1,G__defined_typename("Long64_t"),-1,1,"fTotal=",0,"Total number of events to process");
   G__memvar_setup((void*)((long)(&p->fProcessed)-(long)(p)),110,0,0,-1,G__defined_typename("Long64_t"),-1,1,"fProcessed=",0,"Number of events processed");
   G__memvar_setup((void*)((long)(&p->fBytesRead)-(long)(p)),110,0,0,-1,G__defined_typename("Long64_t"),-1,1,"fBytesRead=",0,"Number of bytes read");
   G__memvar_setup((void*)((long)(&p->fInitTime)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fInitTime=",0,"Time for initialization");
   G__memvar_setup((void*)((long)(&p->fProcTime)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fProcTime=",0,"Time for processing");
   G__memvar_setup((void*)((long)(&p->fEvtRateI)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fEvtRateI=",0,"Instantaneous event rate");
   G__memvar_setup((void*)((long)(&p->fMBRateI)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fMBRateI=",0,"Instantaneous byte read rate");
   G__memvar_setup((void*)((long)(&p->fActWorkers)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fActWorkers=",0,"Numebr of workers still active");
   G__memvar_setup((void*)((long)(&p->fTotSessions)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fTotSessions=",0,"Numebr of PROOF sessions running currently on the clusters");
   G__memvar_setup((void*)((long)(&p->fEffSessions)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fEffSessions=",0,"Number of effective sessions running on the machines allocated to this session");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSlaveInfo */
static void G__setup_memvarTSlaveInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TSlaveInfo));
   { TSlaveInfo *p; p=(TSlaveInfo*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TSlaveInfocLcLESlaveStatus),-1,-2,1,G__FastAllocString(2048).Format("kActive=%lldLL",(long long)TSlaveInfo::kActive).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TSlaveInfocLcLESlaveStatus),-1,-2,1,G__FastAllocString(2048).Format("kNotActive=%lldLL",(long long)TSlaveInfo::kNotActive).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TSlaveInfocLcLESlaveStatus),-1,-2,1,G__FastAllocString(2048).Format("kBad=%lldLL",(long long)TSlaveInfo::kBad).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fOrdinal)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,1,"fOrdinal=",0,"slave ordinal");
   G__memvar_setup((void*)((long)(&p->fHostName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,1,"fHostName=",0,"hostname this slave is running on");
   G__memvar_setup((void*)((long)(&p->fMsd)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,1,"fMsd=",0,"mass storage domain slave is in");
   G__memvar_setup((void*)((long)(&p->fDataDir)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,1,"fDataDir=",0,"directory for user data");
   G__memvar_setup((void*)((long)(&p->fPerfIndex)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fPerfIndex=",0,"relative performance of this slave");
   G__memvar_setup((void*)((long)(&p->fSysInfo)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__ProofLN_SysInfo_t),-1,-1,1,"fSysInfo=",0,"Infomation about its hardware");
   G__memvar_setup((void*)((long)(&p->fStatus)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__G__ProofLN_TSlaveInfocLcLESlaveStatus),-1,-1,1,"fStatus=",0,"slave status");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMergerInfo */
static void G__setup_memvarTMergerInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TMergerInfo));
   { TMergerInfo *p; p=(TMergerInfo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TSlave),-1,-1,4,"fMerger=",0,"Slave that acts as merger");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPort=",0,"Port number, on which it accepts outputs from other workers");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMergedObjects=",0,"Total number of objects it must accept from other workers");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fWorkersToMerge=",0,"Number of workers that are merged on this merger");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMergedWorkers=",0,"Current number of already merged workers");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,4,"fWorkers=",0,"List of already assigned workers");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsActive=",0,"Merger state");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TProofLite */
static void G__setup_memvarTProofLite(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofLite));
   { TProofLite *p; p=(TProofLite*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNWorkers=",0,"Number of workers");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fSandbox=",0,"PROOF sandbox root dir");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fCacheDir=",0,"Directory containing cache of user files");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fQueryDir=",0,"Directory containing query results and status");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fDataSetDir=",0,"Directory containing info about known data sets");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fSockPath=",0,"UNIX socket path for communication with workers");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TServerSocket),-1,-1,4,"fServSock=",0,"Server socket to accept call backs");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fForkStartup=",0,"Startup N-1 workers forking the first worker");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fVarExp=",0,"Internal variable to pass drawing options");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fSelection=",0,"Internal variable to pass drawing options");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TProofLockPath),-1,-1,4,"fCacheLock=",0,"Cache dir locker");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TProofLockPath),-1,-1,4,"fQueryLock=",0,"Query dir locker");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TQueryResultManager),-1,-1,4,"fQMgr=",0,"Query-result manager");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TDataSetManager),-1,-1,4,"fDataSetManager=",0,"Dataset manager");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-2,4,"fgWrksMax=",0,"Max number of workers");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSlaveLite */
static void G__setup_memvarTSlaveLite(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TSlaveLite));
   { TSlaveLite *p; p=(TSlaveLite*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fValid=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TSignalHandler),-1,-1,4,"fIntHandler=",0,"interrupt signal handler (ctrl-c)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TProofCondor */
static void G__setup_memvarTProofCondor(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofCondor));
   { TProofCondor *p; p=(TProofCondor*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TCondor),-1,-1,4,"fCondor=",0,"proxy for our Condor pool");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TTimer),-1,-1,4,"fTimer=",0,"timer for delayed Condor COD suspend");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TQueryResultManager */
static void G__setup_memvarTQueryResultManager(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TQueryResultManager));
   { TQueryResultManager *p; p=(TQueryResultManager*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fQueryDir=",0,"directory containing query results and status");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fSessionTag=",0,"tag for the session");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fSessionDir=",0,"directory containing session dependent files");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fSeqNum=",0,"sequential number of last processed query");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fDrawQueries=",0,"number of draw queries processed");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fKeptQueries=",0,"number of queries fully in memory and in dir");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,4,"fQueries=",0,"list of TProofQueryResult objects");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,4,"fPreviousQueries=",0,"list of TProofQueryResult objects from previous sections");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TProofLockPath),-1,-1,4,"fLock=",0,"dir locker");
   G__memvar_setup((void*)0,69,0,0,-1,-1,-1,4,"fLogFile=",0,"log file");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TStopwatch),-1,-1,4,"fCompute=",0,"measures time spend processing a query on the master");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TProofQueryResult */
static void G__setup_memvarTProofQueryResult(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofQueryResult));
   { TProofQueryResult *p; p=(TProofQueryResult*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fStartLog=",0,"log file offset at start");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TProofLogElem */
static void G__setup_memvarTProofLogElem(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofLogElem));
   { TProofLogElem *p; p=(TProofLogElem*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TProofLog),-1,-1,4,"fLogger=",0,"parent TProofLog");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TMacro),-1,-1,4,"fMacro=",0,"container for the log lines");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fSize=",0,"best knowledge of the log file size");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fFrom=",0,"starting offset of the current content");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fTo=",0,"end offset of the current content");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fRole=",0,"role (master-submaster-worker)");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-2,4,"fgMaxTransferSize=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TProofMgrLite */
static void G__setup_memvarTProofMgrLite(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofMgrLite));
   { TProofMgrLite *p; p=(TProofMgrLite*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TProofResourcesStatic */
static void G__setup_memvarTProofResourcesStatic(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofResourcesStatic));
   { TProofResourcesStatic *p; p=(TProofResourcesStatic*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofResourcesStaticcLcLEInfoType),-1,-2,1,G__FastAllocString(2048).Format("kNodeType=%lldLL",(long long)TProofResourcesStatic::kNodeType).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofResourcesStaticcLcLEInfoType),-1,-2,1,G__FastAllocString(2048).Format("kOption=%lldLL",(long long)TProofResourcesStatic::kOption).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofResourcesStaticcLcLEInfoType),-1,-2,1,G__FastAllocString(2048).Format("kHost=%lldLL",(long long)TProofResourcesStatic::kHost).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TProofNodeInfo),-1,-1,4,"fMaster=",0,"Master node info");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,4,"fSubmasterList=",0,"Node info list with all submasters");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,4,"fWorkerList=",0,"Node info list with all workers");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fFoundMaster=",0,"kTRUE if config file has master info");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fFileName=",0,"Config file name");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TProofNodeInfo */
static void G__setup_memvarTProofNodeInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofNodeInfo));
   { TProofNodeInfo *p; p=(TProofNodeInfo*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofNodeInfocLcLENodeType),-1,-2,1,G__FastAllocString(2048).Format("kMaster=%lldLL",(long long)TProofNodeInfo::kMaster).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofNodeInfocLcLENodeType),-1,-2,1,G__FastAllocString(2048).Format("kSubMaster=%lldLL",(long long)TProofNodeInfo::kSubMaster).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofNodeInfocLcLENodeType),-1,-2,1,G__FastAllocString(2048).Format("kWorker=%lldLL",(long long)TProofNodeInfo::kWorker).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__G__ProofLN_TProofNodeInfocLcLENodeType),-1,-1,4,"fNodeType=",0,"Distinction between master, submaster and worker");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fNodeName=",0,"Name of the node");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fWorkDir=",0,"Working directory");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fOrdinal=",0,"Worker ordinal number");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fImage=",0,"File system image");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fId=",0,"Id number");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fConfig=",0,"Configuration file name [for submasters]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fMsd=",0,"Msd value [for submasters]");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPort=",0,"Port number");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPerfIndex=",0,"Performance index");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TProofProgressStatus */
static void G__setup_memvarTProofProgressStatus(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofProgressStatus));
   { TProofProgressStatus *p; p=(TProofProgressStatus*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofProgressStatuscLcLEStatusBits),-1,-2,1,G__FastAllocString(2048).Format("kFileNotOpen=%lldLL",(long long)TProofProgressStatus::kFileNotOpen).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofProgressStatuscLcLEStatusBits),-1,-2,1,G__FastAllocString(2048).Format("kFileCorrupted=%lldLL",(long long)TProofProgressStatus::kFileCorrupted).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fLastEntries=",0,"Last chunck");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fEntries=",0,(char*)NULL);
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fBytesRead=",0,(char*)NULL);
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fReadCalls=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fLearnTime=",0,"the time spent in learning phase");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fLastProcTime=",0,"the wallclock time of the last addition");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fProcTime=",0,"the wallclock time");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCPUTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fLastUpdate=",0,"Timestamp of last change");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TProofResources */
static void G__setup_memvarTProofResources(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofResources));
   { TProofResources *p; p=(TProofResources*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fValid=",0,"kTRUE if resource information was processed correctly");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TProofServLite */
static void G__setup_memvarTProofServLite(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofServLite));
   { TProofServLite *p; p=(TProofServLite*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TProofServLiteInterruptHandler),-1,-1,4,"fInterruptHandler=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fSockPath=",0,"unix socket path");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fTerminated=",0,"true if Terminate() has been already called");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TProofSuperMaster */
static void G__setup_memvarTProofSuperMaster(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofSuperMaster));
   { TProofSuperMaster *p; p=(TProofSuperMaster*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__Proof() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTCondorSlave(void) {
   /* TCondorSlave */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TCondorSlave));
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__Proof_110_0_2, 85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TCondorSlave::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_110_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCondorSlave::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_110_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TCondorSlave::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_110_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TCondorSlave::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_110_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_110_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCondorSlave::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_110_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCondorSlave::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_110_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCondorSlave::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_110_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCondorSlave::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("TCondorSlave", 1204, G__G__Proof_110_0_14, (int) ('i'), G__get_linked_tagnum(&G__G__ProofLN_TCondorSlave), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TCondorSlave", 1204, G__G__Proof_110_0_15, (int) ('i'), G__get_linked_tagnum(&G__G__ProofLN_TCondorSlave), -1, 0, 1, 1, 1, 0, "u 'TCondorSlave' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TCondorSlave", 1330, G__G__Proof_110_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Proof_110_0_17, (int) ('u'), G__get_linked_tagnum(&G__G__ProofLN_TCondorSlave), -1, 1, 1, 1, 1, 0, "u 'TCondorSlave' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTCondor(void) {
   /* TCondor */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TCondor));
   G__memfunc_setup("ClaimVM",649,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__ProofLN_TCondorSlave), -1, 0, 2, 1, 2, 0, 
"C - - 10 - vm C - - 10 - cmd", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TCondor",697,G__G__Proof_111_0_2, 105, G__get_linked_tagnum(&G__G__ProofLN_TCondor), -1, 0, 1, 1, 1, 0, "C - - 10 '\"\"' pool", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsValid",684,G__G__Proof_111_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVirtualMachines",1839,G__G__Proof_111_0_5, 85, G__get_linked_tagnum(&G__G__ProofLN_TList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Claim",486,G__G__Proof_111_0_6, 85, G__get_linked_tagnum(&G__G__ProofLN_TList), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - n C - - 10 - cmd", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Claim",486,G__G__Proof_111_0_7, 85, G__get_linked_tagnum(&G__G__ProofLN_TCondorSlave), -1, 0, 2, 1, 1, 0, 
"C - - 10 - vmname C - - 10 - cmd", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetState",813,G__G__Proof_111_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "i 'TCondor::EState' - 0 - state", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetState",801,G__G__Proof_111_0_9, 105, G__get_linked_tagnum(&G__G__ProofLN_TCondorcLcLEState), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Suspend",738,G__G__Proof_111_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Resume",625,G__G__Proof_111_0_11, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Release",705,G__G__Proof_111_0_12, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVmInfo",879,G__G__Proof_111_0_13, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 8, 
"C - - 10 - vm u 'TString' - 1 - image "
"i - 'Int_t' 1 - perfidx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetImage",771,G__G__Proof_111_0_14, 117, G__get_linked_tagnum(&G__G__ProofLN_TString), -1, 0, 1, 1, 1, 8, "C - - 10 - host", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Proof_111_0_15, 85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TCondor::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_111_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCondor::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_111_0_17, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TCondor::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_111_0_18, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TCondor::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_111_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_111_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCondor::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_111_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCondor::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_111_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCondor::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_111_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCondor::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TCondor", 697, G__G__Proof_111_0_27, (int) ('i'), G__get_linked_tagnum(&G__G__ProofLN_TCondor), -1, 0, 1, 1, 1, 0, "u 'TCondor' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TCondor", 823, G__G__Proof_111_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Proof_111_0_29, (int) ('u'), G__get_linked_tagnum(&G__G__ProofLN_TCondor), -1, 1, 1, 1, 1, 0, "u 'TCondor' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSet(void) {
   /* TDSet */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TDSet));
   G__memfunc_setup("SplitEntryList",1466,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", "Split entry list between elements", (void*) NULL, 0);
   G__memfunc_setup("TDSet",452,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__ProofLN_TDSet), -1, 0, 1, 1, 4, 0, "u 'TDSet' - 11 - -", "not implemented", (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "u 'TDSet' - 11 - -", "not implemented", (void*) NULL, 0);
   G__memfunc_setup("TDSet",452,G__G__Proof_116_0_4, 105, G__get_linked_tagnum(&G__G__ProofLN_TDSet), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TDSet",452,G__G__Proof_116_0_5, 105, G__get_linked_tagnum(&G__G__ProofLN_TDSet), -1, 0, 4, 1, 1, 0, 
"C - - 10 - name C - - 10 '\"*\"' objname "
"C - - 10 '\"/\"' dir C - - 10 '0' type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TDSet",452,G__G__Proof_116_0_6, 105, G__get_linked_tagnum(&G__G__ProofLN_TDSet), -1, 0, 2, 1, 1, 0, 
"u 'TChain' - 11 - chain g - 'Bool_t' 0 'kTRUE' withfriends", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__G__Proof_116_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 6, 1, 1, 0, 
"C - - 10 - file C - - 10 '0' objname "
"C - - 10 '0' dir n - 'Long64_t' 0 '0' first "
"n - 'Long64_t' 0 '-1' num C - - 10 '0' msd", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Add",265,G__G__Proof_116_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'TDSet' - 0 - set", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Add",265,G__G__Proof_116_0_9, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"U 'TCollection' - 0 - fileinfo C - - 10 '0' meta "
"g - 'Bool_t' 0 'kFALSE' availableOnly U 'TCollection' - 0 '0' badlist", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Add",265,G__G__Proof_116_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'TFileInfo' - 0 - fileinfo C - - 10 '0' meta", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddFriend",865,G__G__Proof_116_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TDSet' - 0 - friendset C - - 10 - alias", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,G__G__Proof_116_0_12, 110, -1, G__defined_typename("Long64_t"), 0, 5, 1, 1, 0, 
"C - - 10 - selector C - 'Option_t' 10 '\"\"' option "
"n - 'Long64_t' 0 '-1' nentries n - 'Long64_t' 0 '0' firstentry "
"U 'TObject' - 0 '0' enl", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("Draw",398,G__G__Proof_116_0_13, 110, -1, G__defined_typename("Long64_t"), 0, 5, 1, 1, 0, 
"C - - 10 - varexp C - - 10 - selection "
"C - 'Option_t' 10 '\"\"' option n - 'Long64_t' 0 '-1' nentries "
"n - 'Long64_t' 0 '0' firstentry", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("Draw",398,G__G__Proof_116_0_14, 110, -1, G__defined_typename("Long64_t"), 0, 5, 1, 1, 0, 
"C - - 10 - varexp u 'TCut' - 11 - selection "
"C - 'Option_t' 10 '\"\"' option n - 'Long64_t' 0 '-1' nentries "
"n - 'Long64_t' 0 '0' firstentry", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("Draw",398,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ExportFileList",1438,G__G__Proof_116_0_16, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 10 - filepath C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetObjName",968,G__G__Proof_116_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - objname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDirectory",1249,G__G__Proof_116_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - dir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsTree",588,G__G__Proof_116_0_20, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsValid",684,G__G__Proof_116_0_21, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ElementsValid",1325,G__G__Proof_116_0_22, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetType",706,G__G__Proof_116_0_23, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetObjName",956,G__G__Proof_116_0_24, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDirectory",1237,G__G__Proof_116_0_25, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfElements",1710,G__G__Proof_116_0_26, 85, G__get_linked_tagnum(&G__G__ProofLN_TList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumOfFiles",1272,G__G__Proof_116_0_27, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Remove",622,G__G__Proof_116_0_28, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"U 'TDSetElement' - 0 - elem g - 'Bool_t' 0 'kTRUE' deleteElem", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__G__Proof_116_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Next",415,G__G__Proof_116_0_30, 85, G__get_linked_tagnum(&G__G__ProofLN_TDSetElement), -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 '-1' totalEntries", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Current",739,G__G__Proof_116_0_31, 85, G__get_linked_tagnum(&G__G__ProofLN_TDSetElement), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEntries",1018,G__G__Proof_116_0_32, 110, -1, G__defined_typename("Long64_t"), 0, 4, 3, 1, 0, 
"g - 'Bool_t' 0 - isTree C - - 10 - filename "
"C - - 10 - path u 'TString' - 1 - objname", (char*)NULL, (void*) G__func2void( (Long64_t (*)(Bool_t, const char*, const char*, TString&))(&TDSet::GetEntries) ), 0);
   G__memfunc_setup("AddInput",793,G__G__Proof_116_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearInput",1015,G__G__Proof_116_0_34, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOutput",945,G__G__Proof_116_0_35, 85, G__get_linked_tagnum(&G__G__ProofLN_TObject), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOutputList",1357,G__G__Proof_116_0_36, 85, G__get_linked_tagnum(&G__G__ProofLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StartViewer",1152,G__G__Proof_116_0_37, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("GetTreeHeader",1273,G__G__Proof_116_0_38, 85, G__get_linked_tagnum(&G__G__ProofLN_TTree), -1, 0, 1, 1, 1, 0, "U 'TProof' - 0 - proof", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetEntryList",1242,G__G__Proof_116_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - aList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEntryList",1230,G__G__Proof_116_0_40, 85, G__get_linked_tagnum(&G__G__ProofLN_TObject), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Validate",810,G__G__Proof_116_0_41, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Validate",810,G__G__Proof_116_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TDSet' - 0 - dset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Lookup",634,G__G__Proof_116_0_43, 121, -1, -1, 0, 2, 1, 1, 0, 
"g - 'Bool_t' 0 'kFALSE' removeMissing U 'TList' - 2 '0' missingFiles", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLookedUp",1103,G__G__Proof_116_0_44, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSrvMaps",1016,G__G__Proof_116_0_45, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TList' - 0 '0' srvmaps", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetWriteV3",960,G__G__Proof_116_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' on", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Proof_116_0_47, 85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TDSet::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_116_0_48, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDSet::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_116_0_49, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TDSet::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_116_0_50, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TDSet::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_116_0_54, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_116_0_55, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDSet::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_116_0_56, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TDSet::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_116_0_57, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDSet::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_116_0_58, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TDSet::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TDSet", 578, G__G__Proof_116_0_59, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTProof(void) {
   /* TProof */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TProof));
   G__memfunc_setup("TProof",602,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__ProofLN_TProof), -1, 0, 1, 1, 4, 0, "u 'TProof' - 11 - -", "not implemented", (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "u 'TProof' - 11 - -", "idem", (void*) NULL, 0);
   G__memfunc_setup("CleanGDirectory",1503,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'TList' - 0 - ol", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Exec",389,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 4, 0, 
"C - - 10 - cmd i 'TProof::ESlaves' - 0 - list "
"g - 'Bool_t' 0 - plusMaster", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SendCommand",1097,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 4, 0, 
"C - - 10 - cmd i 'TProof::ESlaves' - 0 'kActive' list", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SendCurrentState",1646,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "i 'TProof::ESlaves' - 0 'kActive' list", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckFile",862,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 4, 0, 
"C - - 10 - file U 'TSlave' - 0 - sl "
"l - 'Long_t' 0 - modtime i - 'Int_t' 0 '(kCp|kCpBin)' cpopt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SendObject",993,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 4, 0, 
"U 'TObject' - 10 - obj i 'TProof::ESlaves' - 0 'kActive' list", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SendGroupView",1330,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SendInitialState",1621,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SendPrint",919,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Ping",398,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "i 'TProof::ESlaves' - 0 - list", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Interrupt",973,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"i 'TProof::EUrgent' - 0 - type i 'TProof::ESlaves' - 0 'kActive' list", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AskStatistics",1354,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AskParallel",1100,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GoParallel",995,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 4, 0, 
"i - 'Int_t' 0 - nodes g - 'Bool_t' 0 'kFALSE' accept "
"g - 'Bool_t' 0 'kFALSE' random", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParallelSilent",1736,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 4, 0, 
"i - 'Int_t' 0 - nodes g - 'Bool_t' 0 'kFALSE' random", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RecvLogFile",1074,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"U 'TSocket' - 0 - s i - 'Int_t' 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NotifyLogMsg",1218,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"C - - 10 - msg C - - 10 '\"\\n\"' sfx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildPackage",1180,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 4, 0, 
"C - - 10 - package i 'TProof::EBuildPackageOpt' - 0 'kBuildAll' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildPackageOnClient",1976,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 4, 0, 
"C - - 10 - package i - 'Int_t' 0 '0' opt "
"U 'TString' - 0 '0' path", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadPackage",1068,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 4, 0, 
"C - - 10 - package g - 'Bool_t' 0 'kFALSE' notOnClient "
"U 'TList' - 0 '0' loadopts", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadPackageOnClient",1864,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 4, 0, 
"C - - 10 - package U 'TList' - 0 '0' loadopts", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UnloadPackage",1295,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "C - - 10 - package", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UnloadPackageOnClient",2091,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "C - - 10 - package", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UnloadPackages",1410,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UploadPackageOnClient",2093,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 4, 0, 
"C - - 10 - package i 'TProof::EUploadPackageOpt' - 0 - opt "
"U 'TMD5' - 0 - md5", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DisablePackage",1376,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "C - - 10 - package", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DisablePackageOnClient",2172,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "C - - 10 - package", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DisablePackages",1491,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Activate",817,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'TList' - 0 '0' slaves", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Broadcast",915,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 4, 0, 
"u 'TMessage' - 11 - mess U 'TList' - 0 - slaves", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Broadcast",915,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 4, 0, 
"u 'TMessage' - 11 - mess i 'TProof::ESlaves' - 0 'kActive' list", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Broadcast",915,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 4, 0, 
"C - - 10 - mess i - 'Int_t' 0 - kind "
"U 'TList' - 0 - slaves", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Broadcast",915,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 4, 0, 
"C - - 10 - mess i - 'Int_t' 0 'kMESS_STRING' kind "
"i 'TProof::ESlaves' - 0 'kActive' list", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Broadcast",915,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 4, 0, 
"i - 'Int_t' 0 - kind U 'TList' - 0 - slaves", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Broadcast",915,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 4, 0, 
"i - 'Int_t' 0 - kind i 'TProof::ESlaves' - 0 'kActive' list", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BroadcastFile",1299,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 4, 0, 
"C - - 10 - file i - 'Int_t' 0 - opt "
"C - - 10 - rfile U 'TList' - 0 - wrks", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BroadcastFile",1299,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 4, 0, 
"C - - 10 - file i - 'Int_t' 0 - opt "
"C - - 10 '0' rfile i 'TProof::ESlaves' - 0 'kAllUnique' list", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BroadcastGroupPriority",2306,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 4, 0, 
"C - - 10 - grp i - 'Int_t' 0 - priority "
"i 'TProof::ESlaves' - 0 'kAllUnique' list", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BroadcastGroupPriority",2306,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 4, 0, 
"C - - 10 - grp i - 'Int_t' 0 - priority "
"U 'TList' - 0 - workers", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BroadcastObject",1514,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 4, 0, 
"U 'TObject' - 10 - obj i - 'Int_t' 0 - kind "
"U 'TList' - 0 - slaves", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BroadcastObject",1514,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 4, 0, 
"U 'TObject' - 10 - obj i - 'Int_t' 0 'kMESS_OBJECT' kind "
"i 'TProof::ESlaves' - 0 'kActive' list", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BroadcastRaw",1213,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 4, 0, 
"Y - - 10 - buffer i - 'Int_t' 0 - length "
"U 'TList' - 0 - slaves", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BroadcastRaw",1213,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 4, 0, 
"Y - - 10 - buffer i - 'Int_t' 0 - length "
"i 'TProof::ESlaves' - 0 'kActive' list", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Collect",710,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 4, 0, 
"U 'TSlave' - 10 - sl l - 'Long_t' 0 '-1' timeout "
"i - 'Int_t' 0 '-1' endtype g - 'Bool_t' 0 'kFALSE' deactonfail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Collect",710,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 4, 0, 
"U 'TMonitor' - 0 - mon l - 'Long_t' 0 '-1' timeout "
"i - 'Int_t' 0 '-1' endtype g - 'Bool_t' 0 'kFALSE' deactonfail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CollectInputFrom",1642,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 4, 0, 
"U 'TSocket' - 0 - s i - 'Int_t' 0 '-1' endtype "
"g - 'Bool_t' 0 'kFALSE' deactonfail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HandleInputMessage",1825,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 4, 0, 
"U 'TSlave' - 0 - wrk U 'TMessage' - 0 - m "
"g - 'Bool_t' 0 'kFALSE' deactonfail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HandleSubmerger",1528,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"U 'TMessage' - 0 - mess U 'TSlave' - 0 - sl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMonitor",1044,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"U 'TMonitor' - 0 '0' mon g - 'Bool_t' 0 'kTRUE' on", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReleaseMonitor",1449,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'TMonitor' - 0 - mon", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindUniqueSlaves",1638,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FindSlave",892,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__ProofLN_TSlave), -1, 0, 1, 1, 4, 8, "U 'TSocket' - 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfSlaves",1503,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__ProofLN_TList), -1, 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfInactiveSlaves",2322,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__ProofLN_TList), -1, 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfUniqueSlaves",2134,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__ProofLN_TList), -1, 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfBadSlaves",1766,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__ProofLN_TList), -1, 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumberOfSlaves",1708,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumberOfActiveSlaves",2312,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumberOfInactiveSlaves",2527,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumberOfUniqueSlaves",2339,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumberOfBadSlaves",1971,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsEndMaster",1087,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ModifyWorkerLists",1777,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 4, 0, 
"C - - 10 - ord g - 'Bool_t' 0 - add", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSync",601,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InterruptCurrentMonitor",2456,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRunStatus",1253,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i 'TProof::ERunStatus' - 0 - rst", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MarkBad",658,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"U 'TSlave' - 0 - wrk C - - 10 '0' reason", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MarkBad",658,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"U 'TSocket' - 0 - s C - - 10 '0' reason", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TerminateWorker",1571,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'TSlave' - 0 - wrk", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TerminateWorker",1571,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "C - - 10 - ord", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ActivateAsyncInput",1855,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeActivateAsyncInput",2024,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQueryReference",1733,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 4, 0, 
"i - 'Int_t' 0 - qry u 'TString' - 1 - ref", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintProgress",1378,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 4, 0, 
"n - 'Long64_t' 0 - total n - 'Long64_t' 0 - processed "
"f - 'Float_t' 0 '-1.' procTime n - 'Long64_t' 0 '-1' bytesread", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateMerger",1206,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 4, 0, 
"U 'TSlave' - 0 - sl i - 'Int_t' 0 - port", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RedirectWorker",1452,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"U 'TSocket' - 0 - s U 'TSlave' - 0 - sl "
"i - 'Int_t' 0 - output_size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetActiveMergersCount",2138,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindNextFreeMerger",1796,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetMergers",1240,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AskForOutput",1239,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'TSlave' - 0 - sl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FinalizationDone",1646,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetMergePrg",1308,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseConfigField",1589,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "C - - 10 - config", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Prompt",642,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "C - - 10 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearDataProgress",1718,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"i - 'Int_t' 0 - r i - 'Int_t' 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDataSetSrvMaps",1682,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__ProofLN_TList), -1, 0, 1, 3, 4, 0, "u 'TString' - 11 - srvmaps", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TProof",602,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__ProofLN_TProof), -1, 0, 0, 1, 2, 0, "", "For derived classes to use", (void*) NULL, 0);
   G__memfunc_setup("InitMembers",1119,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 5, 1, 2, 0, 
"C - - 10 - masterurl C - - 10 - conffile "
"C - - 10 - confdir i - 'Int_t' 0 - loglevel "
"C - - 10 '0' alias", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StartSlaves",1148,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 2, 0, "g - 'Bool_t' 0 'kFALSE' attach", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddWorkers",1014,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "U 'TList' - 0 - wrks", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RemoveWorkers",1371,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "U 'TList' - 0 - wrks", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPlayer",921,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "U 'TVirtualProofPlayer' - 0 - player", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPlayer",909,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__ProofLN_TVirtualProofPlayer), -1, 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakePlayer",1003,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__ProofLN_TVirtualProofPlayer), -1, 0, 2, 1, 2, 0, 
"C - - 10 '0' player U 'TSocket' - 0 '0' s", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("UpdateDialog",1203,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HandleLibIncPath",1546,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 2, 0, 
"C - - 10 - what g - 'Bool_t' 0 - add "
"C - - 10 - dirs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfActiveSlaves",2107,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__ProofLN_TList), -1, 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateSlave",1103,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__ProofLN_TSlave), -1, 0, 5, 1, 2, 0, 
"C - - 10 - url C - - 10 - ord "
"i - 'Int_t' 0 - perf C - - 10 - image "
"C - - 10 - workdir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateSubmaster",1546,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__ProofLN_TSlave), -1, 0, 4, 1, 2, 0, 
"C - - 10 - url C - - 10 - ord "
"C - - 10 - image C - - 10 - msd", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveWorkerInfo",1429,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Collect",710,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 2, 0, 
"i 'TProof::ESlaves' - 0 'kActive' list l - 'Long_t' 0 '-1' timeout "
"i - 'Int_t' 0 '-1' endtype g - 'Bool_t' 0 'kFALSE' deactonfail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Collect",710,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 2, 0, 
"U 'TList' - 0 - slaves l - 'Long_t' 0 '-1' timeout "
"i - 'Int_t' 0 '-1' endtype g - 'Bool_t' 0 'kFALSE' deactonfail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDSet",668,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "U 'TDSet' - 0 - dset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ValidateDSet",1178,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "U 'TDSet' - 0 - dset", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetProgressDialog",1733,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__ProofLN_TPluginHandler), -1, 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AssertPath",1023,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 2, 0, 
"C - - 10 - path g - 'Bool_t' 0 - writable", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrepareInputDataFile",2009,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "u 'TString' - 1 - dataFile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SendInputDataFile",1684,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SendFile",778,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 2, 0, 
"C - - 10 - file i - 'Int_t' 0 '(kBinary|kForward|kCp|kCpBin)' opt "
"C - - 10 '0' rfile U 'TSlave' - 0 '0' sl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SlaveStartupThread",1862,(G__InterfaceMethod) NULL, 89, -1, -1, 0, 1, 3, 2, 0, "Y - - 0 - arg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AssertDataSet",1304,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 4, 3, 2, 0, 
"U 'TDSet' - 0 - dset U 'TList' - 0 - input "
"U 'TDataSetManager' - 0 - mgr u 'TString' - 1 - emsg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInputData",1194,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 3, 3, 2, 0, 
"U 'TList' - 0 - input C - - 10 - cachedir "
"u 'TString' - 1 - emsg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveInputData",1305,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 3, 3, 2, 0, 
"U 'TQueryResult' - 0 - qr C - - 10 - cachedir "
"u 'TString' - 1 - emsg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SendInputData",1300,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 3, 3, 2, 0, 
"U 'TQueryResult' - 0 - qr U 'TProof' - 0 - p "
"u 'TString' - 1 - emsg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFileInCmd",1131,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 3, 2, 0, 
"C - - 10 - cmd u 'TString' - 1 - fn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SystemCmd",921,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 3, 2, 0, 
"C - - 10 - cmd i - 'Int_t' 0 - fdout", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TProof",602,G__G__Proof_122_0_120, 105, G__get_linked_tagnum(&G__G__ProofLN_TProof), -1, 0, 6, 1, 1, 0, 
"C - - 10 - masterurl C - - 10 'kPROOF_ConfFile' conffile "
"C - - 10 'kPROOF_ConfDir' confdir i - 'Int_t' 0 '0' loglevel "
"C - - 10 '0' alias U 'TProofMgr' - 0 '0' mgr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cd",199,G__G__Proof_122_0_121, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '-1' id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Ping",398,G__G__Proof_122_0_122, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Touch",515,G__G__Proof_122_0_123, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Exec",389,G__G__Proof_122_0_124, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 10 - cmd g - 'Bool_t' 0 'kFALSE' plusMaster", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Process",735,G__G__Proof_122_0_125, 110, -1, G__defined_typename("Long64_t"), 0, 5, 1, 1, 0, 
"U 'TDSet' - 0 - dset C - - 10 - selector "
"C - 'Option_t' 10 '\"\"' option n - 'Long64_t' 0 '-1' nentries "
"n - 'Long64_t' 0 '0' firstentry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,G__G__Proof_122_0_126, 110, -1, G__defined_typename("Long64_t"), 0, 5, 1, 1, 0, 
"U 'TFileCollection' - 0 - fc C - - 10 - selector "
"C - 'Option_t' 10 '\"\"' option n - 'Long64_t' 0 '-1' nentries "
"n - 'Long64_t' 0 '0' firstentry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,G__G__Proof_122_0_127, 110, -1, G__defined_typename("Long64_t"), 0, 6, 1, 1, 0, 
"C - - 10 - dsetname C - - 10 - selector "
"C - 'Option_t' 10 '\"\"' option n - 'Long64_t' 0 '-1' nentries "
"n - 'Long64_t' 0 '0' firstentry U 'TObject' - 0 '0' enl", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,G__G__Proof_122_0_128, 110, -1, G__defined_typename("Long64_t"), 0, 3, 1, 1, 0, 
"C - - 10 - selector n - 'Long64_t' 0 - nentries "
"C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawSelect",1006,G__G__Proof_122_0_129, 110, -1, G__defined_typename("Long64_t"), 0, 6, 1, 1, 0, 
"U 'TDSet' - 0 - dset C - - 10 - varexp "
"C - - 10 '\"\"' selection C - 'Option_t' 10 '\"\"' option "
"n - 'Long64_t' 0 '-1' nentries n - 'Long64_t' 0 '0' firstentry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawSelect",1006,G__G__Proof_122_0_130, 110, -1, G__defined_typename("Long64_t"), 0, 7, 1, 1, 0, 
"C - - 10 - dsetname C - - 10 - varexp "
"C - - 10 '\"\"' selection C - 'Option_t' 10 '\"\"' option "
"n - 'Long64_t' 0 '-1' nentries n - 'Long64_t' 0 '0' firstentry "
"U 'TObject' - 0 '0' enl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Archive",706,G__G__Proof_122_0_131, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - query C - - 10 - url", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Archive",706,G__G__Proof_122_0_132, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 10 - queryref C - - 10 '0' url", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CleanupSession",1452,G__G__Proof_122_0_133, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - - 10 - sessiontag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Finalize",818,G__G__Proof_122_0_134, 110, -1, G__defined_typename("Long64_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 '-1' query g - 'Bool_t' 0 'kFALSE' force", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Finalize",818,G__G__Proof_122_0_135, 110, -1, G__defined_typename("Long64_t"), 0, 2, 1, 1, 0, 
"C - - 10 - queryref g - 'Bool_t' 0 'kFALSE' force", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Remove",622,G__G__Proof_122_0_136, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - query g - 'Bool_t' 0 'kFALSE' all", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Remove",622,G__G__Proof_122_0_137, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 10 - queryref g - 'Bool_t' 0 'kFALSE' all", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Retrieve",838,G__G__Proof_122_0_138, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - query C - - 10 '0' path", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Retrieve",838,G__G__Proof_122_0_139, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 10 - queryref C - - 10 '0' path", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DisableGoAsyn",1285,G__G__Proof_122_0_140, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GoAsynchronous",1474,G__G__Proof_122_0_141, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StopProcess",1157,G__G__Proof_122_0_142, 121, -1, -1, 0, 2, 1, 1, 0, 
"g - 'Bool_t' 0 - abort i - 'Int_t' 0 '-1' timeout", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Browse",626,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TBrowser' - 0 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetParallel",1113,G__G__Proof_122_0_144, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 '9999' nodes g - 'Bool_t' 0 'kFALSE' random", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLogLevel",1094,G__G__Proof_122_0_145, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - level h - 'UInt_t' 0 'TProofDebug::kAll' mask", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Close",502,G__G__Proof_122_0_146, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowCache",885,G__G__Proof_122_0_148, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kFALSE' all", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ClearCache",955,G__G__Proof_122_0_149, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '0' file", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetListOfPackages",1680,G__G__Proof_122_0_150, 85, G__get_linked_tagnum(&G__G__ProofLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfEnabledPackages",2363,G__G__Proof_122_0_151, 85, G__get_linked_tagnum(&G__G__ProofLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ShowPackages",1216,G__G__Proof_122_0_152, 121, -1, -1, 0, 2, 1, 1, 0, 
"g - 'Bool_t' 0 'kFALSE' all g - 'Bool_t' 0 'kFALSE' redirlog", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ShowEnabledPackages",1899,G__G__Proof_122_0_153, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kFALSE' all", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearPackages",1286,G__G__Proof_122_0_154, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearPackage",1171,G__G__Proof_122_0_155, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - - 10 - package", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DownloadPackage",1508,G__G__Proof_122_0_156, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 10 - par C - - 10 '0' dstdir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EnablePackage",1267,G__G__Proof_122_0_157, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 10 - package g - 'Bool_t' 0 'kFALSE' notOnClient", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EnablePackage",1267,G__G__Proof_122_0_158, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"C - - 10 - package C - - 10 - loadopts "
"g - 'Bool_t' 0 'kFALSE' notOnClient", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EnablePackage",1267,G__G__Proof_122_0_159, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"C - - 10 - package U 'TList' - 0 - loadopts "
"g - 'Bool_t' 0 'kFALSE' notOnClient", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UploadPackage",1297,G__G__Proof_122_0_160, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 10 - par i 'TProof::EUploadPackageOpt' - 0 'kUntar' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Load",384,G__G__Proof_122_0_161, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 1, 0, 
"C - - 10 - macro g - 'Bool_t' 0 'kFALSE' notOnClient "
"g - 'Bool_t' 0 'kTRUE' uniqueOnly U 'TList' - 0 '0' wrks", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddDynamicPath",1371,G__G__Proof_122_0_162, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"C - - 10 - libpath g - 'Bool_t' 0 'kFALSE' onClient "
"U 'TList' - 0 '0' wrks", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddIncludePath",1370,G__G__Proof_122_0_163, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"C - - 10 - incpath g - 'Bool_t' 0 'kFALSE' onClient "
"U 'TList' - 0 '0' wrks", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RemoveDynamicPath",1728,G__G__Proof_122_0_164, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 10 - libpath g - 'Bool_t' 0 'kFALSE' onClient", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RemoveIncludePath",1727,G__G__Proof_122_0_165, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 10 - incpath g - 'Bool_t' 0 'kFALSE' onClient", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UploadDataSet",1291,G__G__Proof_122_0_166, 105, -1, G__defined_typename("Int_t"), 0, 5, 1, 1, 0, 
"C - - 10 - dataset U 'TList' - 0 - files "
"C - - 10 '0' dest i - 'Int_t' 0 'kAskUser' opt "
"U 'TList' - 0 '0' skippedFiles", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UploadDataSet",1291,G__G__Proof_122_0_167, 105, -1, G__defined_typename("Int_t"), 0, 5, 1, 1, 0, 
"C - - 10 - dataset C - - 10 - files "
"C - - 10 '0' dest i - 'Int_t' 0 'kAskUser' opt "
"U 'TList' - 0 '0' skippedFiles", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UploadDataSetFromFile",2079,G__G__Proof_122_0_168, 105, -1, G__defined_typename("Int_t"), 0, 5, 1, 1, 0, 
"C - - 10 - dataset C - - 10 - file "
"C - - 10 '0' dest i - 'Int_t' 0 'kAskUser' opt "
"U 'TList' - 0 '0' skippedFiles", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RegisterDataSet",1515,G__G__Proof_122_0_169, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"C - - 10 - name U 'TFileCollection' - 0 - dataset "
"C - - 10 '\"\"' optStr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDataSets",1081,G__G__Proof_122_0_170, 85, G__get_linked_tagnum(&G__G__ProofLN_TMap), -1, 0, 2, 1, 1, 0, 
"C - - 10 '\"\"' uri C - - 10 '\"\"' optStr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowDataSets",1210,G__G__Proof_122_0_171, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 '\"\"' uri C - - 10 '\"\"' optStr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDataSetQuota",1488,G__G__Proof_122_0_172, 85, G__get_linked_tagnum(&G__G__ProofLN_TMap), -1, 0, 1, 1, 1, 0, "C - - 10 '\"\"' optStr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ShowDataSetQuota",1617,G__G__Proof_122_0_173, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '0' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ExistsDataSet",1318,G__G__Proof_122_0_174, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - - 10 - dataset", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowDataSet",1095,G__G__Proof_122_0_175, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 '\"\"' dataset C - - 10 '\"M\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RemoveDataSet",1300,G__G__Proof_122_0_176, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 10 - dataset C - - 10 '\"\"' optStr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("VerifyDataSet",1307,G__G__Proof_122_0_177, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 10 - dataset C - - 10 '\"\"' optStr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDataSet",966,G__G__Proof_122_0_178, 85, G__get_linked_tagnum(&G__G__ProofLN_TFileCollection), -1, 0, 2, 1, 1, 0, 
"C - - 10 - dataset C - - 10 '\"\"' optStr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FindDataSets",1178,G__G__Proof_122_0_179, 85, G__get_linked_tagnum(&G__G__ProofLN_TList), -1, 0, 2, 1, 1, 0, 
"C - - 10 - searchString C - - 10 '\"\"' optStr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDataSetTreeName",1763,G__G__Proof_122_0_180, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 10 - dataset C - - 10 - treename", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowDataSetCache",1563,G__G__Proof_122_0_181, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '0' dataset", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ClearDataSetCache",1633,G__G__Proof_122_0_182, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '0' dataset", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowData",795,G__G__Proof_122_0_183, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearData",865,G__G__Proof_122_0_184, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 'kUnregistered' what C - - 10 '0' dsname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaster",908,G__G__Proof_122_0_185, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetConfDir",965,G__G__Proof_122_0_186, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetConfFile",1062,G__G__Proof_122_0_187, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUser",703,G__G__Proof_122_0_188, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGroup",813,G__G__Proof_122_0_189, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWorkDir",994,G__G__Proof_122_0_190, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSessionTag",1312,G__G__Proof_122_0_191, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetImage",771,G__G__Proof_122_0_192, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUrl",595,G__G__Proof_122_0_193, 67, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPort",709,G__G__Proof_122_0_194, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRemoteProtocol",1758,G__G__Proof_122_0_195, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetClientProtocol",1745,G__G__Proof_122_0_196, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStatus",932,G__G__Proof_122_0_197, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLogLevel",1082,G__G__Proof_122_0_198, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParallel",1101,G__G__Proof_122_0_199, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSeqNum",889,G__G__Proof_122_0_200, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSessionID",1169,G__G__Proof_122_0_201, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfSlaveInfos",1899,G__G__Proof_122_0_202, 85, G__get_linked_tagnum(&G__G__ProofLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UseDynamicStartup",1765,G__G__Proof_122_0_203, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQueryMode",1211,G__G__Proof_122_0_204, 105, G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEQueryMode), -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '0' mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetQueryMode",1223,G__G__Proof_122_0_205, 121, -1, -1, 0, 1, 1, 1, 0, "i 'TProof::EQueryMode' - 0 - mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRealTimeLog",1377,G__G__Proof_122_0_206, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' on", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStatistics",1355,G__G__Proof_122_0_207, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kFALSE' verbose", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBytesRead",1187,G__G__Proof_122_0_208, 110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRealTime",1075,G__G__Proof_122_0_209, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCpuTime",983,G__G__Proof_122_0_210, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsLite",586,G__G__Proof_122_0_211, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsProofd",806,G__G__Proof_122_0_212, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsFolder",792,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsMaster",808,G__G__Proof_122_0_214, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsValid",684,G__G__Proof_122_0_215, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsParallel",1001,G__G__Proof_122_0_216, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsIdle",570,G__G__Proof_122_0_217, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsWaiting",911,G__G__Proof_122_0_218, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunStatus",1241,G__G__Proof_122_0_219, 105, G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLERunStatus), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLoadedMacros",1486,G__G__Proof_122_0_220, 85, G__get_linked_tagnum(&G__G__ProofLN_TList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParameter",1229,G__G__Proof_122_0_221, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - par C - - 10 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParameter",1229,G__G__Proof_122_0_222, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - par i - 'Int_t' 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParameter",1229,G__G__Proof_122_0_223, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - par l - 'Long_t' 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParameter",1229,G__G__Proof_122_0_224, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - par n - 'Long64_t' 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParameter",1229,G__G__Proof_122_0_225, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - par d - 'Double_t' 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParameter",1217,G__G__Proof_122_0_226, 85, G__get_linked_tagnum(&G__G__ProofLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - par", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteParameters",1639,G__G__Proof_122_0_227, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - wildcard", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ShowParameters",1461,G__G__Proof_122_0_228, 121, -1, -1, 0, 1, 1, 1, 8, "C - - 10 '\"PROOF_*\"' wildcard", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddInput",793,G__G__Proof_122_0_229, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearInput",1015,G__G__Proof_122_0_230, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInputList",1228,G__G__Proof_122_0_231, 85, G__get_linked_tagnum(&G__G__ProofLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOutput",945,G__G__Proof_122_0_232, 85, G__get_linked_tagnum(&G__G__ProofLN_TObject), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOutputList",1357,G__G__Proof_122_0_233, 85, G__get_linked_tagnum(&G__G__ProofLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ShowMissingFiles",1646,G__G__Proof_122_0_234, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TQueryResult' - 0 '0' qr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMissingFiles",1517,G__G__Proof_122_0_235, 85, G__get_linked_tagnum(&G__G__ProofLN_TFileCollection), -1, 0, 1, 1, 1, 0, "U 'TQueryResult' - 0 '0' qr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddInputData",1171,G__G__Proof_122_0_236, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TObject' - 0 - obj g - 'Bool_t' 0 'kFALSE' push", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInputDataFile",1590,G__G__Proof_122_0_237, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - datafile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearInputData",1393,G__G__Proof_122_0_238, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 '0' obj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearInputData",1393,G__G__Proof_122_0_239, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddFeedback",1038,G__G__Proof_122_0_240, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RemoveFeedback",1395,G__G__Proof_122_0_241, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearFeedback",1260,G__G__Proof_122_0_242, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ShowFeedback",1190,G__G__Proof_122_0_243, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFeedbackList",1473,G__G__Proof_122_0_244, 85, G__get_linked_tagnum(&G__G__ProofLN_TList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfQueries",1615,G__G__Proof_122_0_245, 85, G__get_linked_tagnum(&G__G__ProofLN_TList), -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNumberOfQueries",1820,G__G__Proof_122_0_246, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumberOfDrawQueries",2218,G__G__Proof_122_0_247, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQueryResults",1576,G__G__Proof_122_0_248, 85, G__get_linked_tagnum(&G__G__ProofLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQueryResult",1461,G__G__Proof_122_0_249, 85, G__get_linked_tagnum(&G__G__ProofLN_TQueryResult), -1, 0, 1, 1, 1, 0, "C - - 10 '0' ref", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaxQueries",1316,G__G__Proof_122_0_250, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMaxDrawQueries",1726,G__G__Proof_122_0_251, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ShowQueries",1151,G__G__Proof_122_0_252, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsDataReady",1067,G__G__Proof_122_0_253, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"n - 'Long64_t' 1 - totalbytes n - 'Long64_t' 1 - bytesready", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetActive",904,G__G__Proof_122_0_254, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LogMessage",999,G__G__Proof_122_0_255, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - msg g - 'Bool_t' 0 - all", "*SIGNAL*", (void*) NULL, 0);
   G__memfunc_setup("Progress",853,G__G__Proof_122_0_256, 121, -1, -1, 0, 2, 1, 1, 0, 
"n - 'Long64_t' 0 - total n - 'Long64_t' 0 - processed", "*SIGNAL*", (void*) NULL, 0);
   G__memfunc_setup("Progress",853,G__G__Proof_122_0_257, 121, -1, -1, 0, 7, 1, 1, 0, 
"n - 'Long64_t' 0 - total n - 'Long64_t' 0 - processed "
"n - 'Long64_t' 0 - bytesread f - 'Float_t' 0 - initTime "
"f - 'Float_t' 0 - procTime f - 'Float_t' 0 - evtrti "
"f - 'Float_t' 0 - mbrti", "*SIGNAL*", (void*) NULL, 0);
   G__memfunc_setup("Progress",853,G__G__Proof_122_0_258, 121, -1, -1, 0, 10, 1, 1, 0, 
"n - 'Long64_t' 0 - total n - 'Long64_t' 0 - processed "
"n - 'Long64_t' 0 - bytesread f - 'Float_t' 0 - initTime "
"f - 'Float_t' 0 - procTime f - 'Float_t' 0 - evtrti "
"f - 'Float_t' 0 - mbrti i - 'Int_t' 0 - actw "
"i - 'Int_t' 0 - tses f - 'Float_t' 0 - eses", "*SIGNAL*", (void*) NULL, 0);
   G__memfunc_setup("Feedback",773,G__G__Proof_122_0_259, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TList' - 0 - objs", "*SIGNAL*", (void*) NULL, 0);
   G__memfunc_setup("QueryResultReady",1674,G__G__Proof_122_0_260, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - ref", "*SIGNAL*", (void*) NULL, 0);
   G__memfunc_setup("CloseProgressDialog",1947,G__G__Proof_122_0_261, 121, -1, -1, 0, 0, 1, 1, 0, "", "*SIGNAL*", (void*) NULL, 0);
   G__memfunc_setup("ResetProgressDialog",1960,G__G__Proof_122_0_262, 121, -1, -1, 0, 4, 1, 1, 0, 
"C - - 10 - sel i - 'Int_t' 0 - sz "
"n - 'Long64_t' 0 - fst n - 'Long64_t' 0 - ent", "*SIGNAL*", (void*) NULL, 0);
   G__memfunc_setup("StartupMessage",1464,G__G__Proof_122_0_263, 121, -1, -1, 0, 4, 1, 1, 0, 
"C - - 10 - msg g - 'Bool_t' 0 - status "
"i - 'Int_t' 0 - done i - 'Int_t' 0 - total", "*SIGNAL*", (void*) NULL, 0);
   G__memfunc_setup("DataSetStatus",1322,G__G__Proof_122_0_264, 121, -1, -1, 0, 4, 1, 1, 0, 
"C - - 10 - msg g - 'Bool_t' 0 - status "
"i - 'Int_t' 0 - done i - 'Int_t' 0 - total", "*SIGNAL*", (void*) NULL, 0);
   G__memfunc_setup("SendDataSetStatus",1716,G__G__Proof_122_0_265, 121, -1, -1, 0, 4, 1, 1, 0, 
"C - - 10 - msg h - 'UInt_t' 0 - n "
"h - 'UInt_t' 0 - tot g - 'Bool_t' 0 - st", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLog",578,G__G__Proof_122_0_266, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 '-1' start i - 'Int_t' 0 '-1' end", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLastLog",982,G__G__Proof_122_0_267, 85, G__get_linked_tagnum(&G__G__ProofLN_TMacro), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PutLog",603,G__G__Proof_122_0_268, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TQueryResult' - 0 - qr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ShowLog",707,G__G__Proof_122_0_269, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '-1' qry", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ShowLog",707,G__G__Proof_122_0_270, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - queryref", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SendingLogToWindow",1829,G__G__Proof_122_0_271, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SendLogToWindow",1511,G__G__Proof_122_0_272, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetProgressDialogStatus",2604,G__G__Proof_122_0_273, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTreeHeader",1273,G__G__Proof_122_0_274, 85, G__get_linked_tagnum(&G__G__ProofLN_TTree), -1, 0, 1, 1, 1, 0, "U 'TDSet' - 0 - tdset", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetOutputNames",1445,G__G__Proof_122_0_275, 85, G__get_linked_tagnum(&G__G__ProofLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddChain",748,G__G__Proof_122_0_276, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TChain' - 0 - chain", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RemoveChain",1105,G__G__Proof_122_0_277, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TChain' - 0 - chain", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateDrawFeedback",1767,G__G__Proof_122_0_278, 85, G__get_linked_tagnum(&G__G__ProofLN_TDrawFeedback), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDrawFeedbackOption",2104,G__G__Proof_122_0_279, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TDrawFeedback' - 0 - f C - 'Option_t' 10 - opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteDrawFeedback",1766,G__G__Proof_122_0_280, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TDrawFeedback' - 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Detach",585,G__G__Proof_122_0_281, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAlias",790,G__G__Proof_122_0_282, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"\"' alias", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetManager",987,G__G__Proof_122_0_283, 85, G__get_linked_tagnum(&G__G__ProofLN_TProofMgr), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetManager",999,G__G__Proof_122_0_284, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TProofMgr' - 0 - mgr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ActivateWorker",1451,G__G__Proof_122_0_285, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - - 10 - ord", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeactivateWorker",1652,G__G__Proof_122_0_286, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - - 10 - ord", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDataPoolUrl",1383,G__G__Proof_122_0_287, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDataPoolUrl",1395,G__G__Proof_122_0_288, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - url", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPrintProgress",1678,G__G__Proof_122_0_289, 121, -1, -1, 0, 1, 1, 1, 0, "Y - 'PrintProgress_t' 0 - pp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetProgressDialog",1745,G__G__Proof_122_0_290, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' on", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Open",402,G__G__Proof_122_0_291, 85, G__get_linked_tagnum(&G__G__ProofLN_TProof), -1, 0, 4, 3, 1, 0, 
"C - - 10 '0' url C - - 10 '0' conffile "
"C - - 10 '0' confdir i - 'Int_t' 0 '0' loglevel", (char*)NULL, (void*) G__func2void( (TProof* (*)(const char*, const char*, const char*, Int_t))(&TProof::Open) ), 0);
   G__memfunc_setup("LogViewer",916,G__G__Proof_122_0_292, 121, -1, -1, 0, 2, 3, 1, 0, 
"C - - 10 '0' url i - 'Int_t' 0 '0' sessionidx", (char*)NULL, (void*) G__func2void( (void (*)(const char*, Int_t))(&TProof::LogViewer) ), 0);
   G__memfunc_setup("Mgr",294,G__G__Proof_122_0_293, 85, G__get_linked_tagnum(&G__G__ProofLN_TProofMgr), -1, 0, 1, 3, 1, 0, "C - - 10 - url", (char*)NULL, (void*) G__func2void( (TProofMgr* (*)(const char*))(&TProof::Mgr) ), 0);
   G__memfunc_setup("Reset",515,G__G__Proof_122_0_294, 121, -1, -1, 0, 2, 3, 1, 0, 
"C - - 10 - url g - 'Bool_t' 0 'kFALSE' hard", (char*)NULL, (void*) G__func2void( (void (*)(const char*, Bool_t))(&TProof::Reset) ), 0);
   G__memfunc_setup("AddEnvVar",859,G__G__Proof_122_0_295, 121, -1, -1, 0, 2, 3, 1, 0, 
"C - - 10 - name C - - 10 - value", (char*)NULL, (void*) G__func2void( (void (*)(const char*, const char*))(&TProof::AddEnvVar) ), 0);
   G__memfunc_setup("DelEnvVar",871,G__G__Proof_122_0_296, 121, -1, -1, 0, 1, 3, 1, 0, "C - - 10 - name", (char*)NULL, (void*) G__func2void( (void (*)(const char*))(&TProof::DelEnvVar) ), 0);
   G__memfunc_setup("GetEnvVars",997,G__G__Proof_122_0_297, 85, G__get_linked_tagnum(&G__G__ProofLN_TList), -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const TList* (*)())(&TProof::GetEnvVars) ), 0);
   G__memfunc_setup("ResetEnvVars",1224,G__G__Proof_122_0_298, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TProof::ResetEnvVars) ), 0);
   G__memfunc_setup("GetParameter",1217,G__G__Proof_122_0_299, 105, -1, G__defined_typename("Int_t"), 0, 3, 3, 1, 0, 
"U 'TCollection' - 0 - c C - - 10 - par "
"u 'TString' - 1 - value", (char*)NULL, (void*) G__func2void( (Int_t (*)(TCollection*, const char*, TString&))(&TProof::GetParameter) ), 0);
   G__memfunc_setup("GetParameter",1217,G__G__Proof_122_0_300, 105, -1, G__defined_typename("Int_t"), 0, 3, 3, 1, 0, 
"U 'TCollection' - 0 - c C - - 10 - par "
"i - 'Int_t' 1 - value", (char*)NULL, (void*) G__func2void( (Int_t (*)(TCollection*, const char*, Int_t&))(&TProof::GetParameter) ), 0);
   G__memfunc_setup("GetParameter",1217,G__G__Proof_122_0_301, 105, -1, G__defined_typename("Int_t"), 0, 3, 3, 1, 0, 
"U 'TCollection' - 0 - c C - - 10 - par "
"l - 'Long_t' 1 - value", (char*)NULL, (void*) G__func2void( (Int_t (*)(TCollection*, const char*, Long_t&))(&TProof::GetParameter) ), 0);
   G__memfunc_setup("GetParameter",1217,G__G__Proof_122_0_302, 105, -1, G__defined_typename("Int_t"), 0, 3, 3, 1, 0, 
"U 'TCollection' - 0 - c C - - 10 - par "
"n - 'Long64_t' 1 - value", (char*)NULL, (void*) G__func2void( (Int_t (*)(TCollection*, const char*, Long64_t&))(&TProof::GetParameter) ), 0);
   G__memfunc_setup("GetParameter",1217,G__G__Proof_122_0_303, 105, -1, G__defined_typename("Int_t"), 0, 3, 3, 1, 0, 
"U 'TCollection' - 0 - c C - - 10 - par "
"d - 'Double_t' 1 - value", (char*)NULL, (void*) G__func2void( (Int_t (*)(TCollection*, const char*, Double_t&))(&TProof::GetParameter) ), 0);
   G__memfunc_setup("Class",502,G__G__Proof_122_0_304, 85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TProof::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_122_0_305, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProof::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_122_0_306, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TProof::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_122_0_307, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TProof::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_122_0_311, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_122_0_312, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProof::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_122_0_313, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProof::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_122_0_314, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProof::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_122_0_315, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProof::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TProof", 728, G__G__Proof_122_0_316, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTProofChain(void) {
   /* TProofChain */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofChain));
   G__memfunc_setup("FillDrawAttributes",1852,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'TProof' - 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TProofChain",1085,G__G__Proof_123_0_2, 105, G__get_linked_tagnum(&G__G__ProofLN_TProofChain), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TProofChain",1085,G__G__Proof_123_0_3, 105, G__get_linked_tagnum(&G__G__ProofLN_TProofChain), -1, 0, 2, 1, 1, 0, 
"U 'TChain' - 0 - chain g - 'Bool_t' 0 - gettreeheader", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TProofChain",1085,G__G__Proof_123_0_4, 105, G__get_linked_tagnum(&G__G__ProofLN_TProofChain), -1, 0, 2, 1, 1, 0, 
"U 'TDSet' - 0 - dset g - 'Bool_t' 0 - gettreeheader", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Browse",626,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TBrowser' - 0 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Debug",487,G__G__Proof_123_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Draw",398,(G__InterfaceMethod) NULL,110, -1, G__defined_typename("Long64_t"), 0, 5, 1, 1, 0, 
"C - - 10 - varexp u 'TCut' - 11 - selection "
"C - 'Option_t' 10 '\"\"' option n - 'Long64_t' 0 '1000000000' nentries "
"n - 'Long64_t' 0 '0' firstentry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Draw",398,(G__InterfaceMethod) NULL,110, -1, G__defined_typename("Long64_t"), 0, 5, 1, 1, 0, 
"C - - 10 - varexp C - - 10 - selection "
"C - 'Option_t' 10 '\"\"' option n - 'Long64_t' 0 '1000000000' nentries "
"n - 'Long64_t' 0 '0' firstentry", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("Draw",398,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FindBranch",975,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofLN_TBranch), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FindLeaf",761,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofLN_TLeaf), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBranch",878,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofLN_TBranch), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBranchStatus",1522,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "C - - 10 - branchname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEntries",1018,(G__InterfaceMethod) NULL,110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEntries",1018,(G__InterfaceMethod) NULL,110, -1, G__defined_typename("Long64_t"), 0, 1, 1, 1, 0, "C - - 10 - sel", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetListOfClones",1493,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetListOfBranches",1687,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofLN_TObjArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetListOfLeaves",1489,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofLN_TObjArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetListOfFriends",1596,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofLN_TList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetListOfAliases",1587,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofLN_TList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMakeClass",1172,G__G__Proof_123_0_21, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPlayer",909,G__G__Proof_123_0_22, 85, G__get_linked_tagnum(&G__G__ProofLN_TVirtualTreePlayer), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetReadEntry",1198,(G__InterfaceMethod) NULL,110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HasTreeHeader",1269,G__G__Proof_123_0_24, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL,110, -1, G__defined_typename("Long64_t"), 0, 4, 1, 1, 0, 
"C - - 10 - filename C - 'Option_t' 10 '\"\"' option "
"n - 'Long64_t' 0 '1000000000' nentries n - 'Long64_t' 0 '0' firstentry", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("Progress",853,G__G__Proof_123_0_26, 121, -1, -1, 0, 2, 1, 1, 0, 
"n - 'Long64_t' 0 - total n - 'Long64_t' 0 - processed", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,G__G__Proof_123_0_27, 110, -1, G__defined_typename("Long64_t"), 0, 4, 1, 1, 0, 
"U 'TSelector' - 0 - selector C - 'Option_t' 10 '\"\"' option "
"n - 'Long64_t' 0 '1000000000' nentries n - 'Long64_t' 0 '0' firstentry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDebug",787,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 '1' level n - 'Long64_t' 0 '0' min "
"n - 'Long64_t' 0 '9999999' max", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("SetEventList",1226,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TEventList' - 0 - evlist", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetEntryList",1242,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TEntryList' - 0 - enlist C - 'Option_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetName",685,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("ConnectProof",1232,G__G__Proof_123_0_32, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReleaseProof",1223,G__G__Proof_123_0_33, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__Proof_123_0_34, 85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TProofChain::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_123_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofChain::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_123_0_36, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TProofChain::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_123_0_37, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TProofChain::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_123_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_123_0_42, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofChain::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_123_0_43, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofChain::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_123_0_44, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofChain::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_123_0_45, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofChain::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TProofChain", 1211, G__G__Proof_123_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSetElement(void) {
   /* TDSetElement */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TDSetElement));
   G__memfunc_setup("HasBeenLookedUp",1465,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__ProofLN_TDSetElement), -1, 1, 1, 1, 4, 0, "u 'TDSetElement' - 11 - -", "Not implemented", (void*) NULL, 0);
   G__memfunc_setup("TDSetElement",1166,G__G__Proof_125_0_3, 105, G__get_linked_tagnum(&G__G__ProofLN_TDSetElement), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TDSetElement",1166,G__G__Proof_125_0_4, 105, G__get_linked_tagnum(&G__G__ProofLN_TDSetElement), -1, 0, 7, 1, 1, 0, 
"C - - 10 - file C - - 10 '0' objname "
"C - - 10 '0' dir n - 'Long64_t' 0 '0' first "
"n - 'Long64_t' 0 '-1' num C - - 10 '0' msd "
"C - - 10 '0' dataset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TDSetElement",1166,G__G__Proof_125_0_5, 105, G__get_linked_tagnum(&G__G__ProofLN_TDSetElement), -1, 0, 1, 1, 1, 0, "u 'TDSetElement' - 11 - elem", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfFriends",1596,G__G__Proof_125_0_6, 85, G__get_linked_tagnum(&G__G__ProofLN_TList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddFriend",865,G__G__Proof_125_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TDSetElement' - 0 - friendElement C - - 10 - alias", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DeleteFriends",1310,G__G__Proof_125_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFileName",1057,G__G__Proof_125_0_9, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFirst",808,G__G__Proof_125_0_10, 110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFirst",820,G__G__Proof_125_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - first", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNum",592,G__G__Proof_125_0_12, 110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEntries",1018,G__G__Proof_125_0_13, 110, -1, G__defined_typename("Long64_t"), 0, 2, 1, 1, 0, 
"g - 'Bool_t' 0 'kTRUE' istree g - 'Bool_t' 0 'kTRUE' openfile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEntries",1030,G__G__Proof_125_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - ent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMsd",580,G__G__Proof_125_0_15, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNum",604,G__G__Proof_125_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - num", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetValid",784,G__G__Proof_125_0_17, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetObjName",956,G__G__Proof_125_0_18, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDirectory",1237,G__G__Proof_125_0_19, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDataSet",966,G__G__Proof_125_0_20, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDataSet",978,G__G__Proof_125_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - dataset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddAssocObj",1053,G__G__Proof_125_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - assocobj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfAssocObjs",1784,G__G__Proof_125_0_23, 85, G__get_linked_tagnum(&G__G__ProofLN_TList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAssocObj",1076,G__G__Proof_125_0_24, 85, G__get_linked_tagnum(&G__G__ProofLN_TObject), -1, 0, 2, 1, 1, 0, 
"n - 'Long64_t' 0 - i g - 'Bool_t' 0 'kFALSE' isentry", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' options", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTDSetOffset",1355,G__G__Proof_125_0_26, 110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTDSetOffset",1367,G__G__Proof_125_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - offset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEntryList",1242,G__G__Proof_125_0_28, 121, -1, -1, 0, 3, 1, 1, 0, 
"U 'TObject' - 0 - aList n - 'Long64_t' 0 '-1' first "
"n - 'Long64_t' 0 '-1' num", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEntryList",1230,G__G__Proof_125_0_29, 85, G__get_linked_tagnum(&G__G__ProofLN_TObject), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Validate",810,G__G__Proof_125_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - isTree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Validate",810,G__G__Proof_125_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TDSetElement' - 0 - elem", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Invalidate",1025,G__G__Proof_125_0_32, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetValid",796,G__G__Proof_125_0_33, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Compare",711,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "U 'TObject' - 10 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsSortable",1016,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Lookup",634,G__G__Proof_125_0_36, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kFALSE' force", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLookedUp",1103,G__G__Proof_125_0_37, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFileInfo",1068,G__G__Proof_125_0_38, 85, G__get_linked_tagnum(&G__G__ProofLN_TFileInfo), -1, 0, 1, 1, 1, 0, "C - - 10 '\"TTree\"' type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MergeElement",1210,G__G__Proof_125_0_39, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'TDSetElement' - 0 - elem", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Proof_125_0_40, 85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TDSetElement::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_125_0_41, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDSetElement::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_125_0_42, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TDSetElement::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_125_0_43, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TDSetElement::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_125_0_47, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_125_0_48, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDSetElement::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_125_0_49, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TDSetElement::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_125_0_50, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDSetElement::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_125_0_51, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TDSetElement::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TDSetElement", 1292, G__G__Proof_125_0_52, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlETDSetElementmUcOTStringgR(void) {
   /* pair<TDSetElement*,TString> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_pairlETDSetElementmUcOTStringgR));
   G__memfunc_setup("pair<TDSetElement*,TString>",2517,G__G__Proof_126_0_1, 105, G__get_linked_tagnum(&G__G__ProofLN_pairlETDSetElementmUcOTStringgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pair<TDSetElement*,TString>",2517,G__G__Proof_126_0_2, 105, G__get_linked_tagnum(&G__G__ProofLN_pairlETDSetElementmUcOTStringgR), -1, 0, 2, 1, 1, 0, 
"U 'TDSetElement' - 41 - a u 'TString' - 11 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__ProofLN_pairlETDSetElementmUcOTStringgR), -1, 1, 1, 1, 4, 0, "u 'pair<TDSetElement*,TString>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("pair<TDSetElement*,TString>", 2517, G__G__Proof_126_0_4, (int) ('i'), 
G__get_linked_tagnum(&G__G__ProofLN_pairlETDSetElementmUcOTStringgR), -1, 0, 1, 1, 1, 0, "u 'pair<TDSetElement*,TString>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~pair<TDSetElement*,TString>", 2643, G__G__Proof_126_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunclistlEpairlETDSetElementmUcOTStringgRcOallocatorlEpairlETDSetElementmUcOTStringgRsPgRsPgR(void) {
   /* list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_listlEpairlETDSetElementmUcOTStringgRcOallocatorlEpairlETDSetElementmUcOTStringgRsPgRsPgR));
   G__memfunc_setup("list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >",6791,G__G__Proof_128_0_1, 105, G__get_linked_tagnum(&G__G__ProofLN_listlEpairlETDSetElementmUcOTStringgRcOallocatorlEpairlETDSetElementmUcOTStringgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Proof_128_0_2, 117, G__get_linked_tagnum(&G__G__ProofLN_listlEpairlETDSetElementmUcOTStringgRcOallocatorlEpairlETDSetElementmUcOTStringgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Proof_128_0_3, 117, G__get_linked_tagnum(&G__G__ProofLN_listlEpairlETDSetElementmUcOTStringgRcOallocatorlEpairlETDSetElementmUcOTStringgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__G__Proof_128_0_4, 117, G__get_linked_tagnum(&G__G__ProofLN_listlEpairlETDSetElementmUcOTStringgRcOallocatorlEpairlETDSetElementmUcOTStringgRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__G__Proof_128_0_5, 117, G__get_linked_tagnum(&G__G__ProofLN_listlEpairlETDSetElementmUcOTStringgRcOallocatorlEpairlETDSetElementmUcOTStringgRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__G__Proof_128_0_6, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__G__Proof_128_0_7, 107, -1, G__defined_typename("list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__G__Proof_128_0_8, 107, -1, G__defined_typename("list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__G__Proof_128_0_9, 117, G__get_linked_tagnum(&G__G__ProofLN_pairlETDSetElementmUcOTStringgR), -1, 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__G__Proof_128_0_10, 117, G__get_linked_tagnum(&G__G__ProofLN_pairlETDSetElementmUcOTStringgR), -1, 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__G__Proof_128_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__G__Proof_128_0_12, 117, G__get_linked_tagnum(&G__G__ProofLN_listlEpairlETDSetElementmUcOTStringgRcOallocatorlEpairlETDSetElementmUcOTStringgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::iterator' - 0 - position u 'pair<TDSetElement*,TString>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__G__Proof_128_0_13, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::iterator' - 0 - position U 'pair<TDSetElement*,TString>' - 0 - first "
"U 'pair<TDSetElement*,TString>' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__G__Proof_128_0_14, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::iterator' - 0 - position u 'list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::iterator' - 0 - first "
"u 'list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__G__Proof_128_0_15, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::iterator' - 0 - position k - 'list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::size_type' 0 - n "
"u 'pair<TDSetElement*,TString>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_front",1096,G__G__Proof_128_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'pair<TDSetElement*,TString>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__G__Proof_128_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'pair<TDSetElement*,TString>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__G__Proof_128_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__G__Proof_128_0_19, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::size_type' 0 - n u 'pair<TDSetElement*,TString>' - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__G__Proof_128_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__G__Proof_128_0_21, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::iterator' - 0 - first u 'list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__G__Proof_128_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_front",983,G__G__Proof_128_0_23, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__G__Proof_128_0_24, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >",6791,G__G__Proof_128_0_25, 105, G__get_linked_tagnum(&G__G__ProofLN_listlEpairlETDSetElementmUcOTStringgRcOallocatorlEpairlETDSetElementmUcOTStringgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::size_type' 0 - n u 'pair<TDSetElement*,TString>' - 11 '(pair<TDSetElement*,TString>)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >",6791,G__G__Proof_128_0_26, 105, G__get_linked_tagnum(&G__G__ProofLN_listlEpairlETDSetElementmUcOTStringgRcOallocatorlEpairlETDSetElementmUcOTStringgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"U 'pair<TDSetElement*,TString>' - 10 - first U 'pair<TDSetElement*,TString>' - 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >",6791,G__G__Proof_128_0_27, 105, G__get_linked_tagnum(&G__G__ProofLN_listlEpairlETDSetElementmUcOTStringgRcOallocatorlEpairlETDSetElementmUcOTStringgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::iterator' 'list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::const_iterator' 10 - first u 'list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::iterator' 'list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >",6791,G__G__Proof_128_0_28, 105, G__get_linked_tagnum(&G__G__ProofLN_listlEpairlETDSetElementmUcOTStringgRcOallocatorlEpairlETDSetElementmUcOTStringgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Proof_128_0_29, 117, G__get_linked_tagnum(&G__G__ProofLN_listlEpairlETDSetElementmUcOTStringgRcOallocatorlEpairlETDSetElementmUcOTStringgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("splice",640,G__G__Proof_128_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::iterator' - 0 - position u 'list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("splice",640,G__G__Proof_128_0_31, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::iterator' - 0 - position u 'list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >' - 1 - x "
"u 'list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::iterator' - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("splice",640,G__G__Proof_128_0_32, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::iterator' - 0 - position u 'list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >' - 1 - x "
"u 'list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::iterator' - 0 - first u 'list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("remove",654,G__G__Proof_128_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "u 'pair<TDSetElement*,TString>' - 11 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("unique",663,G__G__Proof_128_0_34, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("merge",528,G__G__Proof_128_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reverse",764,G__G__Proof_128_0_36, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sort",456,G__G__Proof_128_0_37, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >", 6917, G__G__Proof_128_0_38, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTProofServ(void) {
   /* TProofServ */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofServ));
   G__memfunc_setup("RedirectOutput",1475,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"C - - 10 '0' dir C - - 10 '\"w\"' mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CatMotd",684,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UnloadPackage",1295,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "C - - 10 - package", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UnloadPackages",1410,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OldAuthSetup",1218,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "u 'TString' - 1 - wconf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPriority",1154,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakeQueryResult",1555,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__ProofLN_TProofQueryResult), -1, 0, 7, 1, 4, 0, 
"n - 'Long64_t' 0 - nentries C - - 10 - opt "
"U 'TList' - 0 - inl n - 'Long64_t' 0 - first "
"U 'TDSet' - 0 - dset C - - 10 - selec "
"U 'TObject' - 0 - elist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetQueryRunning",1571,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'TProofQueryResult' - 0 - pq", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SendResults",1148,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 4, 0, 
"U 'TSocket' - 0 - sock U 'TList' - 0 '0' outlist "
"U 'TQueryResult' - 0 '0' pq", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AcceptResults",1346,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 4, 0, 
"i - 'Int_t' 0 - connections U 'TVirtualProofPlayer' - 0 - mergerPlayer", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RegisterDataSets",1630,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 4, 0, 
"U 'TList' - 0 - in U 'TList' - 0 - out", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIdle",682,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "g - 'Bool_t' 0 'kTRUE' st", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsWaiting",911,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WaitingQueries",1457,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("QueueQuery",1051,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "U 'TProofQueryResult' - 0 - pq", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NextQuery",949,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__ProofLN_TProofQueryResult), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CleanupWaitingQueries",2169,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 4, 0, 
"g - 'Bool_t' 0 'kTRUE' del U 'TList' - 0 '0' qls", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HandleArchive",1294,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"U 'TMessage' - 0 - mess U 'TString' - 0 '0' slb", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HandleCache",1056,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 2, 0, 
"U 'TMessage' - 0 - mess U 'TString' - 0 '0' slb", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HandleCheckFile",1450,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"U 'TMessage' - 0 - mess U 'TString' - 0 '0' slb", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HandleDataSets",1381,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 2, 0, 
"U 'TMessage' - 0 - mess U 'TString' - 0 '0' slb", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HandleSubmerger",1528,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "U 'TMessage' - 0 - mess", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HandleFork",990,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "U 'TMessage' - 0 - mess", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HandleLibIncPath",1546,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "U 'TMessage' - 0 - mess", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HandleProcess",1323,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"U 'TMessage' - 0 - mess U 'TString' - 0 '0' slb", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HandleQueryList",1534,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "U 'TMessage' - 0 - mess", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HandleRemove",1210,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"U 'TMessage' - 0 - mess U 'TString' - 0 '0' slb", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HandleRetrieve",1426,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"U 'TMessage' - 0 - mess U 'TString' - 0 '0' slb", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HandleWorkerLists",1749,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "U 'TMessage' - 0 - mess", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ProcessNext",1150,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "U 'TString' - 0 '0' slb", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Setup",529,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetupCommon",1146,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakePlayer",1003,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DeletePlayer",1216,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Fork",402,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSessionStatus",1672,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsIdle",570,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UnlinkDataDir",1290,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 2, 0, "C - - 10 - path", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TProofServ",1018,G__G__Proof_133_0_39, 105, G__get_linked_tagnum(&G__G__ProofLN_TProofServ), -1, 0, 3, 1, 1, 0, 
"I - 'Int_t' 0 - argc C - - 2 - argv "
"E - - 0 '0' flog", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateServer",1227,G__G__Proof_133_0_40, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetProof",806,G__G__Proof_133_0_41, 85, G__get_linked_tagnum(&G__G__ProofLN_TProof), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetService",1009,G__G__Proof_133_0_42, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetConfDir",965,G__G__Proof_133_0_43, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetConfFile",1062,G__G__Proof_133_0_44, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUser",703,G__G__Proof_133_0_45, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGroup",813,G__G__Proof_133_0_46, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWorkDir",994,G__G__Proof_133_0_47, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetImage",771,G__G__Proof_133_0_48, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSessionTag",1312,G__G__Proof_133_0_49, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSessionDir",1315,G__G__Proof_133_0_50, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPackageDir",1259,G__G__Proof_133_0_51, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDataDir",953,G__G__Proof_133_0_52, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProtocol",1138,G__G__Proof_133_0_53, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOrdinal",1001,G__G__Proof_133_0_54, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGroupId",986,G__G__Proof_133_0_55, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGroupSize",1224,G__G__Proof_133_0_56, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLogLevel",1082,G__G__Proof_133_0_57, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSocket",905,G__G__Proof_133_0_58, 85, G__get_linked_tagnum(&G__G__ProofLN_TSocket), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRealTime",1075,G__G__Proof_133_0_59, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCpuTime",983,G__G__Proof_133_0_60, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQuerySeqNum",1423,G__G__Proof_133_0_61, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTotSessions",1454,G__G__Proof_133_0_62, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetActSessions",1423,G__G__Proof_133_0_63, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEffSessions",1416,G__G__Proof_133_0_64, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOptions",1036,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"I - 'Int_t' 0 - argc C - - 2 - argv", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEnabledPackages",1770,G__G__Proof_133_0_66, 85, G__get_linked_tagnum(&G__G__ProofLN_TList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInflateFactor",1602,G__G__Proof_133_0_67, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVirtMemMax",1290,G__G__Proof_133_0_68, 108, -1, G__defined_typename("Long_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Long_t (*)())(&TProofServ::GetVirtMemMax) ), 0);
   G__memfunc_setup("GetResMemMax",1167,G__G__Proof_133_0_69, 108, -1, G__defined_typename("Long_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Long_t (*)())(&TProofServ::GetResMemMax) ), 0);
   G__memfunc_setup("GetMemHWM",811,G__G__Proof_133_0_70, 102, -1, G__defined_typename("Float_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Float_t (*)())(&TProofServ::GetMemHWM) ), 0);
   G__memfunc_setup("GetMemStop",997,G__G__Proof_133_0_71, 102, -1, G__defined_typename("Float_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Float_t (*)())(&TProofServ::GetMemStop) ), 0);
   G__memfunc_setup("GetMsgSizeHWM",1230,G__G__Proof_133_0_72, 110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPrefix",910,G__G__Proof_133_0_73, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FlushLogFile",1188,G__G__Proof_133_0_74, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TruncateLogFile",1512,G__G__Proof_133_0_75, 121, -1, -1, 0, 0, 1, 1, 0, "", "Called also by TDSetProxy::Next()", (void*) NULL, 0);
   G__memfunc_setup("GetCacheLock",1149,G__G__Proof_133_0_76, 85, G__get_linked_tagnum(&G__G__ProofLN_TProofLockPath), -1, 0, 0, 1, 1, 0, "", "cache dir locker; used by TProofPlayer", (void*) NULL, 0);
   G__memfunc_setup("CopyFromCache",1283,G__G__Proof_133_0_77, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 10 - name g - 'Bool_t' 0 - cpbin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CopyToCache",1074,G__G__Proof_133_0_78, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 10 - name i - 'Int_t' 0 '0' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWorkers",1037,G__G__Proof_133_0_79, 105, G__get_linked_tagnum(&G__G__ProofLN_TProofServcLcLEQueryAction), -1, 0, 3, 1, 1, 0, 
"U 'TList' - 0 - workers i - 'Int_t' 1 - prioritychange "
"g - 'Bool_t' 0 'kFALSE' resume", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HandleException",1531,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - sig", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HandleSocketInput",1733,G__G__Proof_133_0_81, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"U 'TMessage' - 0 - mess g - 'Bool_t' 0 - all", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HandleSocketInput",1733,G__G__Proof_133_0_82, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HandleUrgentData",1595,G__G__Proof_133_0_83, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HandleSigPipe",1277,G__G__Proof_133_0_84, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HandleTermination",1750,G__G__Proof_133_0_85, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Interrupt",973,G__G__Proof_133_0_86, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsEndMaster",1087,G__G__Proof_133_0_87, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsMaster",808,G__G__Proof_133_0_88, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsParallel",1001,G__G__Proof_133_0_89, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsTopMaster",1115,G__G__Proof_133_0_90, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Run",309,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kFALSE' retrn", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("RestartComputeTime",1873,G__G__Proof_133_0_93, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Get",288,G__G__Proof_133_0_94, 85, G__get_linked_tagnum(&G__G__ProofLN_TObject), -1, 0, 1, 1, 1, 0, "C - - 10 - namecycle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNextPacket",1303,G__G__Proof_133_0_95, 85, G__get_linked_tagnum(&G__G__ProofLN_TDSetElement), -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 '-1' totalEntries", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReleaseWorker",1339,G__G__Proof_133_0_96, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reset",515,G__G__Proof_133_0_97, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - dir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReceiveFile",1091,G__G__Proof_133_0_98, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"C - - 10 - file g - 'Bool_t' 0 - bin "
"n - 'Long64_t' 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SendAsynMessage",1514,G__G__Proof_133_0_99, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 10 - msg g - 'Bool_t' 0 'kTRUE' lf", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SendLogFile",1068,G__G__Proof_133_0_100, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 '0' status i - 'Int_t' 0 '-1' start "
"i - 'Int_t' 0 '-1' end", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SendStatistics",1461,G__G__Proof_133_0_101, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SendParallel",1207,G__G__Proof_133_0_102, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kFALSE' async", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateSessionStatus",1995,G__G__Proof_133_0_103, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 '-1' xst", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DisableTimeout",1435,G__G__Proof_133_0_104, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EnableTimeout",1326,G__G__Proof_133_0_105, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Terminate",937,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - status", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LogToMaster",1105,G__G__Proof_133_0_107, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' on", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetErrorHandlerFile",1908,G__G__Proof_133_0_108, 69, -1, -1, 0, 1, 3, 1, 0, "E - - 0 - ferr", (char*)NULL, (void*) G__func2void( (FILE* (*)(FILE*))(&TProofServ::SetErrorHandlerFile) ), 0);
   G__memfunc_setup("ErrorHandler",1224,G__G__Proof_133_0_109, 121, -1, -1, 0, 4, 3, 1, 0, 
"i - 'Int_t' 0 - level g - 'Bool_t' 0 - abort "
"C - - 10 - location C - - 10 - msg", (char*)NULL, (void*) G__func2void( (void (*)(Int_t, Bool_t, const char*, const char*))(&TProofServ::ErrorHandler) ), 0);
   G__memfunc_setup("ResolveKeywords",1592,G__G__Proof_133_0_110, 121, -1, -1, 0, 2, 3, 1, 0, 
"u 'TString' - 1 - fname C - - 10 '0' path", (char*)NULL, (void*) G__func2void( (void (*)(TString&, const char*))(&TProofServ::ResolveKeywords) ), 0);
   G__memfunc_setup("SetLastMsg",999,G__G__Proof_133_0_111, 121, -1, -1, 0, 1, 3, 1, 0, "C - - 10 - lastmsg", (char*)NULL, (void*) G__func2void( (void (*)(const char*))(&TProofServ::SetLastMsg) ), 0);
   G__memfunc_setup("IsActive",792,G__G__Proof_133_0_112, 103, -1, G__defined_typename("Bool_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Bool_t (*)())(&TProofServ::IsActive) ), 0);
   G__memfunc_setup("This",408,G__G__Proof_133_0_113, 85, G__get_linked_tagnum(&G__G__ProofLN_TProofServ), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TProofServ* (*)())(&TProofServ::This) ), 0);
   G__memfunc_setup("Class",502,G__G__Proof_133_0_114, 85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TProofServ::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_133_0_115, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofServ::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_133_0_116, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TProofServ::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_133_0_117, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TProofServ::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_133_0_121, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_133_0_122, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofServ::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_133_0_123, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofServ::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_133_0_124, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofServ::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_133_0_125, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofServ::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TProofServ", 1144, G__G__Proof_133_0_126, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSetProxy(void) {
   /* TDSetProxy */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TDSetProxy));
   G__memfunc_setup("TDSetProxy",998,G__G__Proof_134_0_1, 105, G__get_linked_tagnum(&G__G__ProofLN_TDSetProxy), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TDSetProxy",998,G__G__Proof_134_0_2, 105, G__get_linked_tagnum(&G__G__ProofLN_TDSetProxy), -1, 0, 3, 1, 1, 0, 
"C - - 10 - type C - - 10 '\"*\"' objname "
"C - - 10 '\"/\"' dir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Next",415,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofLN_TDSetElement), -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 '-1' totalEntries", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetProofServ",1234,G__G__Proof_134_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TProofServ' - 0 - serv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Proof_134_0_6, 85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TDSetProxy::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_134_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDSetProxy::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_134_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TDSetProxy::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_134_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TDSetProxy::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_134_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_134_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDSetProxy::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_134_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TDSetProxy::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_134_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDSetProxy::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_134_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TDSetProxy::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TDSetProxy", 1124, G__G__Proof_134_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDataSetManager(void) {
   /* TDataSetManager */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TDataSetManager));
   G__memfunc_setup("TDataSetManager",1461,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__ProofLN_TDataSetManager), -1, 0, 1, 1, 4, 0, "u 'TDataSetManager' - 11 - -", "not implemented", (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__ProofLN_TDataSetManager), -1, 1, 1, 1, 4, 0, "u 'TDataSetManager' - 11 - -", "not implemented", (void*) NULL, 0);
   G__memfunc_setup("GetGroupUsedMap",1500,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__ProofLN_TMap), -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetUserUsedMap",1390,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__ProofLN_TMap), -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNTouchedFiles",1581,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNOpenedFiles",1468,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNDisapparedFiles",1886,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQuota",810,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 2, 0, 
"C - - 10 - group C - - 10 - user "
"C - - 10 - dsName U 'TFileCollection' - 0 - dataset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintDataSet",1203,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"U 'TFileCollection' - 0 - fc i - 'Int_t' 0 '0' popt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintUsedSpace",1418,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadGroupConfig",1503,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 2, 0, "C - - 10 '0' cf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateUsedSpace",1504,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ToBytes",714,(G__InterfaceMethod) NULL, 110, -1, G__defined_typename("Long64_t"), 0, 1, 3, 2, 0, "C - - 10 '0' size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TDataSetManager",1461,G__G__Proof_151_0_14, 105, G__get_linked_tagnum(&G__G__ProofLN_TDataSetManager), -1, 0, 3, 1, 1, 0, 
"C - - 10 '0' group C - - 10 '0' user "
"C - - 10 '0' options", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearCache",955,G__G__Proof_151_0_15, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - - 10 - uri", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetAvgFileSize",1369,G__G__Proof_151_0_16, 110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDataSet",966,G__G__Proof_151_0_17, 85, G__get_linked_tagnum(&G__G__ProofLN_TFileCollection), -1, 0, 2, 1, 1, 0, 
"C - - 10 - uri C - - 10 '0' server", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDataSets",1081,G__G__Proof_151_0_18, 85, G__get_linked_tagnum(&G__G__ProofLN_TMap), -1, 0, 2, 1, 1, 0, 
"C - - 10 - uri h - 'UInt_t' 0 'TDataSetManager::kExport' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSubDataSets",1379,G__G__Proof_151_0_19, 85, G__get_linked_tagnum(&G__G__ProofLN_TMap), -1, 0, 2, 1, 1, 0, 
"C - - 10 - uri C - - 10 - excludeservers", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetGroupQuota",1335,G__G__Proof_151_0_20, 110, -1, G__defined_typename("Long64_t"), 0, 1, 1, 1, 0, "C - - 10 - group", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetGroupQuotaMap",1621,G__G__Proof_151_0_21, 85, G__get_linked_tagnum(&G__G__ProofLN_TMap), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetGroupUsed",1214,G__G__Proof_151_0_22, 110, -1, G__defined_typename("Long64_t"), 0, 1, 1, 1, 0, "C - - 10 - group", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ExistsDataSet",1318,G__G__Proof_151_0_23, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - - 10 - uri", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MonitorUsedSpace",1637,G__G__Proof_151_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TVirtualMonitoringWriter' - 0 - monitoring", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("NotifyUpdate",1244,G__G__Proof_151_0_25, 105, -1, G__defined_typename("Int_t"), 0, 5, 1, 1, 0, 
"C - - 10 '0' group C - - 10 '0' user "
"C - - 10 '0' dspath l - 'Long_t' 0 '0' mtime "
"C - - 10 '0' checksum", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ParseUri",811,G__G__Proof_151_0_26, 103, -1, G__defined_typename("Bool_t"), 0, 7, 1, 1, 0, 
"C - - 10 - uri U 'TString' - 0 '0' dsGroup "
"U 'TString' - 0 '0' dsUser U 'TString' - 0 '0' dsName "
"U 'TString' - 0 '0' dsTree g - 'Bool_t' 0 'kFALSE' onlyCurrent "
"g - 'Bool_t' 0 'kFALSE' wildcards", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseInitOpts",1333,G__G__Proof_151_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - opts", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("RemoveDataSet",1300,G__G__Proof_151_0_28, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - - 10 - uri", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("RegisterDataSet",1515,G__G__Proof_151_0_29, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"C - - 10 - uri U 'TFileCollection' - 0 - dataSet "
"C - - 10 - opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ScanDataSet",1067,G__G__Proof_151_0_30, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 10 - uri C - - 10 - opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ScanDataSet",1067,G__G__Proof_151_0_31, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 10 - uri h - 'UInt_t' 0 'kReopen|kDebug' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetScanCounters",1540,G__G__Proof_151_0_32, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 '-1' t i - 'Int_t' 0 '-1' o "
"i - 'Int_t' 0 '-1' d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ShowCache",885,G__G__Proof_151_0_33, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - - 10 - uri", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowQuota",939,G__G__Proof_151_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowDataSets",1210,G__G__Proof_151_0_35, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 '\"*\"' uri C - - 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CreateUri",900,G__G__Proof_151_0_36, 117, G__get_linked_tagnum(&G__G__ProofLN_TString), -1, 0, 4, 3, 1, 0, 
"C - - 10 '0' dsGroup C - - 10 '0' dsUser "
"C - - 10 '0' dsName C - - 10 '0' dsTree", (char*)NULL, (void*) G__func2void( (TString (*)(const char*, const char*, const char*, const char*))(&TDataSetManager::CreateUri) ), 0);
   G__memfunc_setup("CheckDataSetSrvMaps",1872,G__G__Proof_151_0_37, 103, -1, G__defined_typename("Bool_t"), 0, 3, 3, 1, 0, 
"U 'TUrl' - 0 - furl u 'TString' - 1 - fn "
"U 'TList' - 0 '0' srvmaplist", (char*)NULL, (void*) G__func2void( (Bool_t (*)(TUrl*, TString&, TList*))(&TDataSetManager::CheckDataSetSrvMaps) ), 0);
   G__memfunc_setup("GetDataSetSrvMaps",1682,G__G__Proof_151_0_38, 85, G__get_linked_tagnum(&G__G__ProofLN_TList), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TList* (*)())(&TDataSetManager::GetDataSetSrvMaps) ), 0);
   G__memfunc_setup("ParseDataSetSrvMaps",1901,G__G__Proof_151_0_39, 85, G__get_linked_tagnum(&G__G__ProofLN_TList), -1, 0, 1, 3, 1, 0, "u 'TString' - 11 - srvmaps", (char*)NULL, (void*) G__func2void( (TList* (*)(const TString&))(&TDataSetManager::ParseDataSetSrvMaps) ), 0);
   G__memfunc_setup("ScanDataSet",1067,G__G__Proof_151_0_40, 105, -1, G__defined_typename("Int_t"), 0, 13, 3, 1, 0, 
"U 'TFileCollection' - 0 - dataset i - 'Int_t' 0 - fopt "
"i - 'Int_t' 0 '0' sopt i - 'Int_t' 0 '0' ropt "
"g - 'Bool_t' 0 'kFALSE' dbg I - 'Int_t' 0 '0' touched "
"I - 'Int_t' 0 '0' opened I - 'Int_t' 0 '0' disappeared "
"U 'TList' - 0 '0' flist n - 'Long64_t' 0 '-1' avgsz "
"C - - 10 '0' mss i - 'Int_t' 0 '-1' maxfiles "
"C - - 10 '0' stageopts", (char*)NULL, (void*) G__func2void( (Int_t (*)(TFileCollection*, Int_t, Int_t, Int_t, Bool_t, Int_t*, Int_t*, Int_t*, TList*, Long64_t, const char*, Int_t, const char*))(&TDataSetManager::ScanDataSet) ), 0);
   G__memfunc_setup("ScanFile",773,G__G__Proof_151_0_41, 105, -1, G__defined_typename("Int_t"), 0, 2, 3, 1, 0, 
"U 'TFileInfo' - 0 - fileinfo g - 'Bool_t' 0 - notify", (char*)NULL, (void*) G__func2void( (Int_t (*)(TFileInfo*, Bool_t))(&TDataSetManager::ScanFile) ), 0);
   G__memfunc_setup("FillMetaData",1160,G__G__Proof_151_0_42, 105, -1, G__defined_typename("Int_t"), 0, 3, 3, 1, 0, 
"U 'TFileInfo' - 0 - fi U 'TDirectory' - 0 - d "
"C - - 10 '\"/\"' rdir", (char*)NULL, (void*) G__func2void( (Int_t (*)(TFileInfo*, TDirectory*, const char*))(&TDataSetManager::FillMetaData) ), 0);
   G__memfunc_setup("Class",502,G__G__Proof_151_0_43, 85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TDataSetManager::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_151_0_44, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDataSetManager::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_151_0_45, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TDataSetManager::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_151_0_46, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TDataSetManager::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_151_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_151_0_51, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDataSetManager::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_151_0_52, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TDataSetManager::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_151_0_53, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDataSetManager::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_151_0_54, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TDataSetManager::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TDataSetManager", 1587, G__G__Proof_151_0_55, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDataSetManagerFile(void) {
   /* TDataSetManagerFile */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TDataSetManagerFile));
   G__memfunc_setup("InitLocalCache",1363,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckLocalCache",1437,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 4, 0, 
"C - - 10 - group C - - 10 - user "
"C - - 10 '\"ls\"' dsName h - 'UInt_t' 0 '0' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDataSetPath",1363,(G__InterfaceMethod) NULL, 67, -1, -1, 0, 3, 1, 2, 1, 
"C - - 10 - group C - - 10 - user "
"C - - 10 - dsName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDataSetPath",1363,(G__InterfaceMethod) NULL, 67, -1, -1, 0, 5, 1, 2, 1, 
"C - - 10 - group C - - 10 - user "
"C - - 10 - dsName u 'TString' - 1 - md5path "
"g - 'Bool_t' 0 'kFALSE' local", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BrowseDataSets",1419,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 5, 1, 2, 0, 
"C - - 10 - group C - - 10 - user "
"C - - 10 - dsName h - 'UInt_t' 0 - option "
"U 'TObject' - 0 - target", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RemoveDataSet",1300,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 2, 0, 
"C - - 10 - group C - - 10 - user "
"C - - 10 - dsName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ExistsDataSet",1318,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 2, 0, 
"C - - 10 - group C - - 10 - user "
"C - - 10 - dsName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ScanDataSet",1067,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 2, 0, 
"C - - 10 - group C - - 10 - user "
"C - - 10 - dsName h - 'UInt_t' 0 'kReopen|kDebug' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ChecksumDataSet",1497,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 2, 0, 
"C - - 10 - path C - - 10 - md5path "
"u 'TString' - 1 - checksum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateLsFile",1171,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 2, 0, 
"C - - 10 - group C - - 10 - user "
"l - 'Long_t' 1 - mtime u 'TString' - 1 - checksum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillLsDataSet",1260,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 5, 1, 2, 0, 
"C - - 10 - group C - - 10 - user "
"C - - 10 - dsName U 'TList' - 0 - out "
"h - 'UInt_t' 0 - option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateUsedSpace",1504,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TDataSetManagerFile",1845,G__G__Proof_154_0_14, 105, G__get_linked_tagnum(&G__G__ProofLN_TDataSetManagerFile), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TDataSetManagerFile",1845,G__G__Proof_154_0_15, 105, G__get_linked_tagnum(&G__G__ProofLN_TDataSetManagerFile), -1, 0, 3, 1, 1, 0, 
"C - - 10 - group C - - 10 - user "
"C - - 10 - ins", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TDataSetManagerFile",1845,G__G__Proof_154_0_16, 105, G__get_linked_tagnum(&G__G__ProofLN_TDataSetManagerFile), -1, 0, 1, 1, 1, 0, "C - - 10 - ins", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseInitOpts",1333,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - opts", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ClearCache",955,G__G__Proof_154_0_18, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - - 10 '0' uri", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDataSet",966,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofLN_TFileCollection), -1, 0, 2, 1, 1, 0, 
"C - - 10 - uri C - - 10 '0' srv", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDataSets",1081,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofLN_TMap), -1, 0, 2, 1, 1, 0, 
"C - - 10 - uri h - 'UInt_t' 0 'TDataSetManager::kExport' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ExistsDataSet",1318,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - - 10 - uri", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("RemoveDataSet",1300,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - - 10 - uri", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("RegisterDataSet",1515,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"C - - 10 - uri U 'TFileCollection' - 0 - dataSet "
"C - - 10 - opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ScanDataSet",1067,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 10 - uri h - 'UInt_t' 0 'kReopen|kDebug' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("NotifyUpdate",1244,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 5, 1, 1, 0, 
"C - - 10 - group C - - 10 - user "
"C - - 10 - dspath l - 'Long_t' 0 - mtime "
"C - - 10 '0' checksum", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowCache",885,G__G__Proof_154_0_26, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - - 10 '0' uri", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDataSet",966,G__G__Proof_154_0_27, 85, G__get_linked_tagnum(&G__G__ProofLN_TFileCollection), -1, 0, 5, 1, 1, 0, 
"C - - 10 - group C - - 10 - user "
"C - - 10 - dsName h - 'UInt_t' 0 '0' option "
"U 'TMD5' - 2 '0' checksum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDataSets",1081,G__G__Proof_154_0_28, 85, G__get_linked_tagnum(&G__G__ProofLN_TMap), -1, 0, 4, 1, 1, 0, 
"C - - 10 - group C - - 10 - user "
"C - - 10 '0' dsName h - 'UInt_t' 0 '0' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMSSUrl",838,G__G__Proof_154_0_29, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStageOpts",1210,G__G__Proof_154_0_30, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteDataSet",1201,G__G__Proof_154_0_31, 105, -1, G__defined_typename("Int_t"), 0, 6, 1, 1, 0, 
"C - - 10 - group C - - 10 - user "
"C - - 10 - dsName U 'TFileCollection' - 0 - dataset "
"h - 'UInt_t' 0 '0' option U 'TMD5' - 0 '0' checksum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Proof_154_0_32, 85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TDataSetManagerFile::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_154_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDataSetManagerFile::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_154_0_34, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TDataSetManagerFile::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_154_0_35, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TDataSetManagerFile::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_154_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_154_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDataSetManagerFile::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_154_0_41, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TDataSetManagerFile::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_154_0_42, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDataSetManagerFile::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_154_0_43, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TDataSetManagerFile::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TDataSetManagerFile", 1971, G__G__Proof_154_0_44, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTProofDesc(void) {
   /* TProofDesc */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDesc));
   G__memfunc_setup("TProofDesc",985,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__ProofLN_TProofDesc), -1, 0, 1, 1, 4, 0, "u 'TProofDesc' - 11 - -", "Not implemented", (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__ProofLN_TProofDesc), -1, 1, 1, 1, 4, 0, "u 'TProofDesc' - 11 - -", "Not implemented", (void*) NULL, 0);
   G__memfunc_setup("TProofDesc",985,G__G__Proof_204_0_3, 105, G__get_linked_tagnum(&G__G__ProofLN_TProofDesc), -1, 0, 7, 1, 1, 0, 
"C - - 10 '0' tag C - - 10 '0' alias "
"C - - 10 '0' url i - 'Int_t' 0 '-1' id "
"i - 'Int_t' 0 '-1' remid i - 'Int_t' 0 'kIdle' status "
"U 'TProof' - 0 '0' p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLocalId",952,G__G__Proof_204_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProof",806,G__G__Proof_204_0_5, 85, G__get_linked_tagnum(&G__G__ProofLN_TProof), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRemoteId",1081,G__G__Proof_204_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStatus",932,G__G__Proof_204_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUrl",595,G__G__Proof_204_0_8, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsIdle",570,G__G__Proof_204_0_9, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsRunning",925,G__G__Proof_204_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsShuttingDown",1450,G__G__Proof_204_0_11, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MatchId",666,G__G__Proof_204_0_12, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetStatus",944,G__G__Proof_204_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - st", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetProof",818,G__G__Proof_204_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TProof' - 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRemoteId",1093,G__G__Proof_204_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Proof_204_0_17, 85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TProofDesc::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_204_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofDesc::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_204_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TProofDesc::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_204_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TProofDesc::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_204_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_204_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofDesc::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_204_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofDesc::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_204_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofDesc::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_204_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofDesc::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TProofDesc", 1111, G__G__Proof_204_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTProofLog(void) {
   /* TProofLog */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofLog));
   G__memfunc_setup("Add",265,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__ProofLN_TProofLogElem), -1, 0, 2, 1, 4, 0, 
"C - - 10 - ord C - - 10 - url", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TProofLog",892,G__G__Proof_205_0_2, 105, G__get_linked_tagnum(&G__G__ProofLN_TProofLog), -1, 0, 3, 1, 1, 0, 
"C - - 10 - stag C - - 10 - url "
"U 'TProofMgr' - 0 - mgr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Display",726,G__G__Proof_205_0_3, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 '\"*\"' ord i - 'Int_t' 0 '-10' from "
"i - 'Int_t' 0 '-1' to", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfLogs",1286,G__G__Proof_205_0_4, 85, G__get_linked_tagnum(&G__G__ProofLN_TList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Grep",398,G__G__Proof_205_0_5, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 10 - txt i - 'Int_t' 0 '0' from", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '0' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Prt",310,G__G__Proof_205_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - what", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Retrieve",838,G__G__Proof_205_0_8, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 1, 0, 
"C - - 10 '\"*\"' ord i 'TProofLog::ERetrieveOpt' - 0 'TProofLog::kTrailing' opt "
"C - - 10 '0' fname C - - 10 '0' pattern", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Save",399,G__G__Proof_205_0_9, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"C - - 10 '\"*\"' ord C - - 10 '0' fname "
"C - 'Option_t' 10 '\"w\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StartTime",925,G__G__Proof_205_0_10, 117, G__get_linked_tagnum(&G__G__ProofLN_TDatime), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLogToBox",1082,G__G__Proof_205_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kFALSE' lgbox", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LogToBox",782,G__G__Proof_205_0_12, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMaxTransferSize",1842,G__G__Proof_205_0_13, 121, -1, -1, 0, 1, 3, 1, 0, "n - 'Long64_t' 0 - maxsz", (char*)NULL, (void*) G__func2void( (void (*)(Long64_t))(&TProofLog::SetMaxTransferSize) ), 0);
   G__memfunc_setup("Class",502,G__G__Proof_205_0_14, 85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TProofLog::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_205_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofLog::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_205_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TProofLog::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_205_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TProofLog::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_205_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_205_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofLog::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_205_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofLog::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_205_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofLog::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_205_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofLog::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TProofLog", 1018, G__G__Proof_205_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTProofMgr(void) {
   /* TProofMgr */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofMgr));
   G__memfunc_setup("TProofMgr",896,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__ProofLN_TProofMgr), -1, 0, 1, 1, 4, 0, "u 'TProofMgr' - 11 - -", "Not implemented", (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__ProofLN_TProofMgr), -1, 1, 1, 1, 4, 0, "u 'TProofMgr' - 11 - -", "Not implemented", (void*) NULL, 0);
   G__memfunc_setup("GetXProofMgrHook",1589,(G__InterfaceMethod) NULL, 89, -1, G__defined_typename("TProofMgr_t"), 0, 0, 3, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TProofMgr",896,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__ProofLN_TProofMgr), -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TProofMgr",896,G__G__Proof_206_0_5, 105, G__get_linked_tagnum(&G__G__ProofLN_TProofMgr), -1, 0, 3, 1, 1, 0, 
"C - - 10 - url i - 'Int_t' 0 '-1' loglevel "
"C - - 10 '\"\"' alias", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsLite",586,G__G__Proof_206_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsProofd",806,G__G__Proof_206_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsValid",684,G__G__Proof_206_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetInvalid",1011,G__G__Proof_206_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AttachSession",1337,G__G__Proof_206_0_10, 85, G__get_linked_tagnum(&G__G__ProofLN_TProof), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - - g - 'Bool_t' 0 'kFALSE' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AttachSession",1337,G__G__Proof_206_0_11, 85, G__get_linked_tagnum(&G__G__ProofLN_TProof), -1, 0, 2, 1, 1, 0, 
"U 'TProofDesc' - 0 - - g - 'Bool_t' 0 'kFALSE' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CreateSession",1336,G__G__Proof_206_0_12, 85, G__get_linked_tagnum(&G__G__ProofLN_TProof), -1, 0, 3, 1, 1, 0, 
"C - - 10 '0' - C - - 10 '0' - "
"i - 'Int_t' 0 '-1' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DetachSession",1325,G__G__Proof_206_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - - C - 'Option_t' 10 '\"\"' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DetachSession",1325,G__G__Proof_206_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TProof' - 0 - - C - 'Option_t' 10 '\"\"' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DiscardSession",1438,G__G__Proof_206_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TProof' - 0 - p", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetProofDesc",1189,G__G__Proof_206_0_16, 85, G__get_linked_tagnum(&G__G__ProofLN_TProofDesc), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetProofDesc",1189,G__G__Proof_206_0_17, 85, G__get_linked_tagnum(&G__G__ProofLN_TProofDesc), -1, 0, 1, 1, 1, 0, "U 'TProof' - 0 - p", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRemoteProtocol",1758,G__G__Proof_206_0_18, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSessionLogs",1433,G__G__Proof_206_0_19, 85, G__get_linked_tagnum(&G__G__ProofLN_TProofLog), -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 '0' - C - - 10 '0' - "
"C - - 10 '\"-v \\\"| SvcMsg\\\"\"' - g - 'Bool_t' 0 'kFALSE' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetUrl",595,G__G__Proof_206_0_20, 67, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MatchUrl",800,G__G__Proof_206_0_21, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - - 10 - url", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("QuerySessions",1389,G__G__Proof_206_0_22, 85, G__get_linked_tagnum(&G__G__ProofLN_TList), -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"S\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadBuffer",982,G__G__Proof_206_0_23, 85, G__get_linked_tagnum(&G__G__ProofLN_TObjString), -1, 0, 3, 1, 1, 0, 
"C - - 10 - - n - 'Long64_t' 0 - - "
"i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadBuffer",982,G__G__Proof_206_0_24, 85, G__get_linked_tagnum(&G__G__ProofLN_TObjString), -1, 0, 2, 1, 1, 0, 
"C - - 10 - - C - - 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reset",515,G__G__Proof_206_0_25, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"g - 'Bool_t' 0 'kFALSE' hard C - - 10 '0' usr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowWorkers",1166,G__G__Proof_206_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SendMsgToUsers",1414,G__G__Proof_206_0_27, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 10 - - C - - 10 '0' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetAlias",790,G__G__Proof_206_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"\"' alias", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetROOTVersion",1366,G__G__Proof_206_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowROOTVersions",1598,G__G__Proof_206_0_30, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShutdownSession",1600,G__G__Proof_206_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShutdownSession",1600,G__G__Proof_206_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TProof' - 0 - p", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Cp",179,G__G__Proof_206_0_33, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"C - - 10 - - C - - 10 '0' - "
"C - - 10 '0' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Find",385,G__G__Proof_206_0_34, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 '\"~/\"' - C - - 10 '0' - "
"C - - 10 '0' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Grep",398,G__G__Proof_206_0_35, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - - C - - 10 '0' - "
"C - - 10 '0' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Ls",191,G__G__Proof_206_0_36, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 '\"~/\"' - C - - 10 '0' - "
"C - - 10 '0' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("More",403,G__G__Proof_206_0_37, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - - C - - 10 '0' - "
"C - - 10 '0' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Rm",191,G__G__Proof_206_0_38, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"C - - 10 - - C - - 10 '0' - "
"C - - 10 '0' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Tail",394,G__G__Proof_206_0_39, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - - C - - 10 '0' - "
"C - - 10 '0' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Md5sum",571,G__G__Proof_206_0_40, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"C - - 10 - - u 'TString' - 1 - - "
"C - - 10 '0' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Stat",412,G__G__Proof_206_0_41, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"C - - 10 - - u 'FileStat_t' - 1 - - "
"C - - 10 '0' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFile",672,G__G__Proof_206_0_42, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"C - - 10 - - C - - 10 - - "
"C - - 10 '0' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PutFile",697,G__G__Proof_206_0_43, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"C - - 10 - - C - - 10 - - "
"C - - 10 '0' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetListOfManagers",1695,G__G__Proof_206_0_44, 85, G__get_linked_tagnum(&G__G__ProofLN_TList), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TList* (*)())(&TProofMgr::GetListOfManagers) ), 0);
   G__memfunc_setup("SetTXProofMgrHook",1685,G__G__Proof_206_0_45, 121, -1, -1, 0, 1, 3, 1, 0, "Y - 'TProofMgr_t' 0 - pmh", (char*)NULL, (void*) G__func2void( (void (*)(TProofMgr_t))(&TProofMgr::SetTXProofMgrHook) ), 0);
   G__memfunc_setup("Create",596,G__G__Proof_206_0_46, 85, G__get_linked_tagnum(&G__G__ProofLN_TProofMgr), -1, 0, 4, 3, 1, 0, 
"C - - 10 - url i - 'Int_t' 0 '-1' loglevel "
"C - - 10 '0' alias g - 'Bool_t' 0 'kTRUE' xpd", (char*)NULL, (void*) G__func2void( (TProofMgr* (*)(const char*, Int_t, const char*, Bool_t))(&TProofMgr::Create) ), 0);
   G__memfunc_setup("Class",502,G__G__Proof_206_0_47, 85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TProofMgr::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_206_0_48, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofMgr::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_206_0_49, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TProofMgr::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_206_0_50, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TProofMgr::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_206_0_54, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_206_0_55, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofMgr::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_206_0_56, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofMgr::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_206_0_57, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofMgr::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_206_0_58, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofMgr::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TProofMgr", 1022, G__G__Proof_206_0_59, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTProofDebug(void) {
   /* TProofDebug */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDebug));
   // automatic default constructor
   G__memfunc_setup("TProofDebug", 1089, G__G__Proof_209_0_1, (int) ('i'), G__get_linked_tagnum(&G__G__ProofLN_TProofDebug), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TProofDebug", 1089, G__G__Proof_209_0_2, (int) ('i'), G__get_linked_tagnum(&G__G__ProofLN_TProofDebug), -1, 0, 1, 1, 1, 0, "u 'TProofDebug' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TProofDebug", 1215, G__G__Proof_209_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Proof_209_0_4, (int) ('u'), G__get_linked_tagnum(&G__G__ProofLN_TProofDebug), -1, 1, 1, 1, 1, 0, "u 'TProofDebug' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTProofOutputList(void) {
   /* TProofOutputList */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofOutputList));
   G__memfunc_setup("TProofOutputList",1671,G__G__Proof_228_0_1, 105, G__get_linked_tagnum(&G__G__ProofLN_TProofOutputList), -1, 0, 1, 1, 1, 0, "C - - 10 '\"PROOF_*\"' dontshow", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TProofOutputList",1671,G__G__Proof_228_0_2, 105, G__get_linked_tagnum(&G__G__ProofLN_TProofOutputList), -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - o", "for backward compatibility, don't use", (void*) NULL, 0);
   G__memfunc_setup("AttachList",1009,G__G__Proof_228_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TList' - 0 - alist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ls",223,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 8, 
"C - 'Option_t' 10 - option i - 'Int_t' 0 - recurse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 8, 
"C - 'Option_t' 10 - option C - - 10 - wildcard "
"i - 'Int_t' 0 '1' recurse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 8, 
"C - 'Option_t' 10 - option u 'TPRegexp' - 1 - regexp "
"i - 'Int_t' 0 '1' recurse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDontShowList",1522,G__G__Proof_228_0_9, 85, G__get_linked_tagnum(&G__G__ProofLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Proof_228_0_10, 85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TProofOutputList::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_228_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofOutputList::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_228_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TProofOutputList::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_228_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TProofOutputList::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_228_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_228_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofOutputList::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_228_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofOutputList::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_228_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofOutputList::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_228_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofOutputList::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TProofOutputList", 1797, G__G__Proof_228_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTVirtualProofPlayer(void) {
   /* TVirtualProofPlayer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TVirtualProofPlayer));
   G__memfunc_setup("Process",735,G__G__Proof_236_0_2, 110, -1, G__defined_typename("Long64_t"), 0, 5, 1, 1, 0, 
"U 'TDSet' - 0 - set C - - 10 - selector "
"C - 'Option_t' 10 '\"\"' option n - 'Long64_t' 0 '-1' nentries "
"n - 'Long64_t' 0 '0' firstentry", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Finalize",818,G__G__Proof_236_0_3, 110, -1, G__defined_typename("Long64_t"), 0, 2, 1, 1, 0, 
"g - 'Bool_t' 0 'kFALSE' force g - 'Bool_t' 0 'kFALSE' sync", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Finalize",818,G__G__Proof_236_0_4, 110, -1, G__defined_typename("Long64_t"), 0, 1, 1, 1, 0, "U 'TQueryResult' - 0 - qr", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("DrawSelect",1006,G__G__Proof_236_0_5, 110, -1, G__defined_typename("Long64_t"), 0, 6, 1, 1, 0, 
"U 'TDSet' - 0 - set C - - 10 - varexp "
"C - - 10 - selection C - 'Option_t' 10 '\"\"' option "
"n - 'Long64_t' 0 '-1' nentries n - 'Long64_t' 0 '0' firstentry", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetDrawArgs",1083,G__G__Proof_236_0_6, 105, -1, G__defined_typename("Int_t"), 0, 5, 1, 1, 0, 
"C - - 10 - var C - - 10 - sel "
"C - 'Option_t' 10 - opt u 'TString' - 1 - selector "
"u 'TString' - 1 - objname", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("HandleGetTreeHeader",1861,G__G__Proof_236_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TMessage' - 0 - mess", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("HandleRecvHisto",1507,G__G__Proof_236_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TMessage' - 0 - mess", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("StopProcess",1157,G__G__Proof_236_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"g - 'Bool_t' 0 - abort i - 'Int_t' 0 '-1' timeout", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("AddInput",793,G__G__Proof_236_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - inp", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("ClearInput",1015,G__G__Proof_236_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetOutput",945,G__G__Proof_236_0_12, 85, G__get_linked_tagnum(&G__G__ProofLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - name", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetOutputList",1357,G__G__Proof_236_0_13, 85, G__get_linked_tagnum(&G__G__ProofLN_TList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetInputList",1228,G__G__Proof_236_0_14, 85, G__get_linked_tagnum(&G__G__ProofLN_TList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetListOfResults",1635,G__G__Proof_236_0_15, 85, G__get_linked_tagnum(&G__G__ProofLN_TList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("AddQueryResult",1438,G__G__Proof_236_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TQueryResult' - 0 - q", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetCurrentQuery",1561,G__G__Proof_236_0_17, 85, G__get_linked_tagnum(&G__G__ProofLN_TQueryResult), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetQueryResult",1461,G__G__Proof_236_0_18, 85, G__get_linked_tagnum(&G__G__ProofLN_TQueryResult), -1, 0, 1, 1, 1, 0, "C - - 10 - ref", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("RemoveQueryResult",1795,G__G__Proof_236_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - ref", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("SetCurrentQuery",1573,G__G__Proof_236_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TQueryResult' - 0 - q", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("SetMaxDrawQueries",1726,G__G__Proof_236_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - max", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("RestorePreviousQuery",2135,G__G__Proof_236_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("AddOutputObject",1521,G__G__Proof_236_0_23, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("AddOutput",922,G__G__Proof_236_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TList' - 0 - out", "Incorporate a list", (void*) NULL, 3);
   G__memfunc_setup("StoreOutput",1182,G__G__Proof_236_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TList' - 0 - out", "Adopts the list", (void*) NULL, 3);
   G__memfunc_setup("StoreFeedback",1298,G__G__Proof_236_0_26, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TObject' - 0 - slave U 'TList' - 0 - out", "Adopts the list", (void*) NULL, 3);
   G__memfunc_setup("Progress",853,G__G__Proof_236_0_27, 121, -1, -1, 0, 2, 1, 1, 0, 
"n - 'Long64_t' 0 - total n - 'Long64_t' 0 - processed", "*SIGNAL*", (void*) NULL, 3);
   G__memfunc_setup("Progress",853,G__G__Proof_236_0_28, 121, -1, -1, 0, 3, 1, 1, 0, 
"U 'TSlave' - 0 - - n - 'Long64_t' 0 - total "
"n - 'Long64_t' 0 - processed", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Progress",853,G__G__Proof_236_0_29, 121, -1, -1, 0, 7, 1, 1, 0, 
"n - 'Long64_t' 0 - total n - 'Long64_t' 0 - processed "
"n - 'Long64_t' 0 - bytesread f - 'Float_t' 0 - initTime "
"f - 'Float_t' 0 - procTime f - 'Float_t' 0 - evtrti "
"f - 'Float_t' 0 - mbrti", "*SIGNAL*", (void*) NULL, 3);
   G__memfunc_setup("Progress",853,G__G__Proof_236_0_30, 121, -1, -1, 0, 8, 1, 1, 0, 
"U 'TSlave' - 0 - - n - 'Long64_t' 0 - total "
"n - 'Long64_t' 0 - processed n - 'Long64_t' 0 - bytesread "
"f - 'Float_t' 0 - initTime f - 'Float_t' 0 - procTime "
"f - 'Float_t' 0 - evtrti f - 'Float_t' 0 - mbrti", "*SIGNAL*", (void*) NULL, 3);
   G__memfunc_setup("Progress",853,G__G__Proof_236_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TProofProgressInfo' - 0 - -", "*SIGNAL*", (void*) NULL, 3);
   G__memfunc_setup("Progress",853,G__G__Proof_236_0_32, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TSlave' - 0 - - U 'TProofProgressInfo' - 0 - -", "*SIGNAL*", (void*) NULL, 3);
   G__memfunc_setup("Feedback",773,G__G__Proof_236_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TList' - 0 - objs", "*SIGNAL*", (void*) NULL, 3);
   G__memfunc_setup("CreateDrawFeedback",1767,G__G__Proof_236_0_34, 85, G__get_linked_tagnum(&G__G__ProofLN_TDrawFeedback), -1, 0, 1, 1, 1, 0, "U 'TProof' - 0 - p", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("SetDrawFeedbackOption",2104,G__G__Proof_236_0_35, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TDrawFeedback' - 0 - f C - 'Option_t' 10 - opt", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("DeleteDrawFeedback",1766,G__G__Proof_236_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TDrawFeedback' - 0 - f", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetNextPacket",1303,G__G__Proof_236_0_37, 85, G__get_linked_tagnum(&G__G__ProofLN_TDSetElement), -1, 0, 2, 1, 1, 0, 
"U 'TSlave' - 0 - slave U 'TMessage' - 0 - r", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("ReinitSelector",1452,G__G__Proof_236_0_38, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'TQueryResult' - 0 - qr", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("UpdateAutoBin",1301,G__G__Proof_236_0_39, 121, -1, -1, 0, 7, 1, 1, 0, 
"C - - 10 - name d - 'Double_t' 1 - xmin "
"d - 'Double_t' 1 - xmax d - 'Double_t' 1 - ymin "
"d - 'Double_t' 1 - ymax d - 'Double_t' 1 - zmin "
"d - 'Double_t' 1 - zmax", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("MergeOutput",1153,G__G__Proof_236_0_40, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("IsClient",795,G__G__Proof_236_0_41, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetExitStatus",1342,G__G__Proof_236_0_42, 105, G__get_linked_tagnum(&G__G__ProofLN_TVirtualProofPlayercLcLEExitStatus), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetEventsProcessed",1853,G__G__Proof_236_0_43, 110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("AddEventsProcessed",1830,G__G__Proof_236_0_44, 121, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - ev", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetProgressStatus",1785,G__G__Proof_236_0_45, 85, G__get_linked_tagnum(&G__G__ProofLN_TProofProgressStatus), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("SetDispatchTimer",1629,G__G__Proof_236_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' on", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("SetStopTimer",1235,G__G__Proof_236_0_47, 121, -1, -1, 0, 3, 1, 1, 0, 
"g - 'Bool_t' 0 'kTRUE' on g - 'Bool_t' 0 'kFALSE' abort "
"i - 'Int_t' 0 '0' timeout", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("SetInitTime",1103,G__G__Proof_236_0_48, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetCacheSize",1167,G__G__Proof_236_0_49, 110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetLearnEntries",1516,G__G__Proof_236_0_50, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetPacketizer",1330,G__G__Proof_236_0_51, 85, G__get_linked_tagnum(&G__G__ProofLN_TVirtualPacketizer), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Create",596,G__G__Proof_236_0_52, 85, G__get_linked_tagnum(&G__G__ProofLN_TVirtualProofPlayer), -1, 0, 3, 3, 1, 0, 
"C - - 10 - player U 'TProof' - 0 - p "
"U 'TSocket' - 0 '0' s", (char*)NULL, (void*) G__func2void( (TVirtualProofPlayer* (*)(const char*, TProof*, TSocket*))(&TVirtualProofPlayer::Create) ), 0);
   G__memfunc_setup("Class",502,G__G__Proof_236_0_53, 85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TVirtualProofPlayer::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_236_0_54, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TVirtualProofPlayer::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_236_0_55, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TVirtualProofPlayer::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_236_0_56, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TVirtualProofPlayer::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_236_0_60, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_236_0_61, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TVirtualProofPlayer::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_236_0_62, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TVirtualProofPlayer::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_236_0_63, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TVirtualProofPlayer::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_236_0_64, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TVirtualProofPlayer::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TVirtualProofPlayer", 2092, G__G__Proof_236_0_65, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSlave(void) {
   /* TSlave */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TSlave));
   G__memfunc_setup("TSlave",591,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__ProofLN_TSlave), -1, 0, 1, 1, 4, 0, "u 'TSlave' - 11 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSlave",591,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__ProofLN_TSlave), -1, 0, 8, 1, 4, 0, 
"C - - 10 - host C - - 10 - ord "
"i - 'Int_t' 0 - perf C - - 10 - image "
"U 'TProof' - 0 - proof i - 'Int_t' 0 - stype "
"C - - 10 - workdir C - - 10 - msd", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OldAuthSetup",1218,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 4, 0, 
"g - 'Bool_t' 0 - master u 'TString' - 0 - wconf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"C - - 10 - host i - 'Int_t' 0 - port "
"i - 'Int_t' 0 - stype", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "u 'TSlave' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Create",596,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__ProofLN_TSlave), -1, 0, 8, 3, 4, 0, 
"C - - 10 - url C - - 10 - ord "
"i - 'Int_t' 0 - perf C - - 10 - image "
"U 'TProof' - 0 - proof i - 'Int_t' 0 - stype "
"C - - 10 - workdir C - - 10 - msd", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSlave",591,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__ProofLN_TSlave), -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FlushSocket",1131,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"U 'TSocket' - 0 - s i - 'Int_t' 0 - stype", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Interrupt",973,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "i - 'Int_t' 0 - type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Ping",398,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SendCoordinator",1550,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__ProofLN_TObjString), -1, 0, 3, 1, 2, 0, 
"i - 'Int_t' 0 - kind C - - 10 '0' msg "
"i - 'Int_t' 0 '0' int2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SendGroupPriority",1785,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 2, 0, 
"C - - 10 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetAlias",790,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "C - - 10 - alias", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetSocket",917,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "U 'TSocket' - 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStatus",944,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "i - 'Int_t' 0 - st", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StopProcess",1157,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"g - 'Bool_t' 0 - abort i - 'Int_t' 0 - timeout", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Close",502,G__G__Proof_241_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Compare",711,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "U 'TObject' - 10 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsSortable",1016,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetName",673,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetImage",771,G__G__Proof_241_0_22, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProofWorkDir",1512,G__G__Proof_241_0_23, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWorkDir",994,G__G__Proof_241_0_24, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUser",703,G__G__Proof_241_0_25, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGroup",813,G__G__Proof_241_0_26, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPort",709,G__G__Proof_241_0_27, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOrdinal",1001,G__G__Proof_241_0_28, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPerfIdx",978,G__G__Proof_241_0_29, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProtocol",1138,G__G__Proof_241_0_30, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSocket",905,G__G__Proof_241_0_31, 85, G__get_linked_tagnum(&G__G__ProofLN_TSocket), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProof",806,G__G__Proof_241_0_32, 85, G__get_linked_tagnum(&G__G__ProofLN_TProof), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBytesRead",1187,G__G__Proof_241_0_33, 110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRealTime",1075,G__G__Proof_241_0_34, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCpuTime",983,G__G__Proof_241_0_35, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSlaveType",1213,G__G__Proof_241_0_36, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStatus",932,G__G__Proof_241_0_37, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParallel",1101,G__G__Proof_241_0_38, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMsd",580,G__G__Proof_241_0_39, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSessionTag",1312,G__G__Proof_241_0_40, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInputHandler",1518,G__G__Proof_241_0_41, 85, G__get_linked_tagnum(&G__G__ProofLN_TFileHandler), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInputHandler",1530,G__G__Proof_241_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TFileHandler' - 0 - ih", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetArchCompiler",1497,G__G__Proof_241_0_43, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetROOTVersion",1354,G__G__Proof_241_0_44, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsValid",684,G__G__Proof_241_0_45, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetupServ",945,G__G__Proof_241_0_47, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - stype C - - 10 - conffile", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetInterruptHandler",1975,G__G__Proof_241_0_48, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetArchCompiler",1509,G__G__Proof_241_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - ac", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetROOTVersion",1366,G__G__Proof_241_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - rv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSessionTag",1324,G__G__Proof_241_0_51, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - st", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTXSlaveHook",1380,G__G__Proof_241_0_52, 121, -1, -1, 0, 1, 3, 1, 0, "Y - 'TSlave_t' 0 - xslavehook", (char*)NULL, (void*) G__func2void( (void (*)(TSlave_t))(&TSlave::SetTXSlaveHook) ), 0);
   G__memfunc_setup("Touch",515,G__G__Proof_241_0_53, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__Proof_241_0_54, 85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSlave::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_241_0_55, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSlave::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_241_0_56, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSlave::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_241_0_57, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSlave::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_241_0_61, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_241_0_62, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSlave::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_241_0_63, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSlave::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_241_0_64, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSlave::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_241_0_65, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSlave::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TSlave", 717, G__G__Proof_241_0_66, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTProofProgressInfo(void) {
   /* TProofProgressInfo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofProgressInfo));
   G__memfunc_setup("TProofProgressInfo",1851,G__G__Proof_244_0_1, 105, G__get_linked_tagnum(&G__G__ProofLN_TProofProgressInfo), -1, 0, 10, 1, 1, 0, 
"n - 'Long64_t' 0 '0' tot n - 'Long64_t' 0 '0' proc "
"n - 'Long64_t' 0 '0' bytes f - 'Float_t' 0 '-1.' initt "
"f - 'Float_t' 0 '-1.' proct f - 'Float_t' 0 '-1.' evts "
"f - 'Float_t' 0 '-1.' mbs i - 'Int_t' 0 '0' actw "
"i - 'Int_t' 0 '0' tsess f - 'Float_t' 0 '0.' esess", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Proof_244_0_2, 85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TProofProgressInfo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_244_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofProgressInfo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_244_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TProofProgressInfo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_244_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TProofProgressInfo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_244_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_244_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofProgressInfo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_244_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofProgressInfo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_244_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofProgressInfo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_244_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofProgressInfo::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TProofProgressInfo", 1851, G__G__Proof_244_0_14, (int) ('i'), G__get_linked_tagnum(&G__G__ProofLN_TProofProgressInfo), -1, 0, 1, 1, 1, 0, "u 'TProofProgressInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TProofProgressInfo", 1977, G__G__Proof_244_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Proof_244_0_16, (int) ('u'), G__get_linked_tagnum(&G__G__ProofLN_TProofProgressInfo), -1, 1, 1, 1, 1, 0, "u 'TProofProgressInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSlaveInfo(void) {
   /* TSlaveInfo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TSlaveInfo));
   G__memfunc_setup("TSlaveInfo",987,G__G__Proof_245_0_1, 105, G__get_linked_tagnum(&G__G__ProofLN_TSlaveInfo), -1, 0, 5, 1, 1, 0, 
"C - - 10 '\"\"' ordinal C - - 10 '\"\"' host "
"i - 'Int_t' 0 '0' perfidx C - - 10 '\"\"' msd "
"C - - 10 '\"\"' datadir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDataDir",953,G__G__Proof_245_0_2, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMsd",580,G__G__Proof_245_0_3, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetName",673,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetOrdinal",1001,G__G__Proof_245_0_5, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSysInfo",1003,G__G__Proof_245_0_6, 117, G__get_linked_tagnum(&G__G__ProofLN_SysInfo_t), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStatus",944,G__G__Proof_245_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i 'TSlaveInfo::ESlaveStatus' - 0 - stat", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSysInfo",1015,G__G__Proof_245_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'SysInfo_t' - 0 - si", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Compare",711,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "U 'TObject' - 10 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsSortable",1016,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__Proof_245_0_12, 85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSlaveInfo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_245_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSlaveInfo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_245_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSlaveInfo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_245_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSlaveInfo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_245_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_245_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSlaveInfo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_245_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSlaveInfo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_245_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSlaveInfo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_245_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSlaveInfo::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSlaveInfo", 987, G__G__Proof_245_0_24, (int) ('i'), G__get_linked_tagnum(&G__G__ProofLN_TSlaveInfo), -1, 0, 1, 1, 1, 0, "u 'TSlaveInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSlaveInfo", 1113, G__G__Proof_245_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Proof_245_0_26, (int) ('u'), G__get_linked_tagnum(&G__G__ProofLN_TSlaveInfo), -1, 1, 1, 1, 1, 0, "u 'TSlaveInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMergerInfo(void) {
   /* TMergerInfo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TMergerInfo));
   G__memfunc_setup("TMergerInfo",1090,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__ProofLN_TMergerInfo), -1, 0, 1, 1, 4, 0, "u 'TMergerInfo' - 11 - -", "Not implemented", (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__ProofLN_TMergerInfo), -1, 1, 1, 1, 4, 0, "u 'TMergerInfo' - 11 - -", "Not implemented", (void*) NULL, 0);
   G__memfunc_setup("TMergerInfo",1090,G__G__Proof_247_0_3, 105, G__get_linked_tagnum(&G__G__ProofLN_TMergerInfo), -1, 0, 3, 1, 1, 0, 
"U 'TSlave' - 0 - t i - 'Int_t' 0 - port "
"i - 'Int_t' 0 - forHowManyWorkers", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddWorker",899,G__G__Proof_247_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TSlave' - 0 - sl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWorkers",1037,G__G__Proof_247_0_5, 85, G__get_linked_tagnum(&G__G__ProofLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMerger",898,G__G__Proof_247_0_6, 85, G__get_linked_tagnum(&G__G__ProofLN_TSlave), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPort",709,G__G__Proof_247_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWorkersToMerge",1728,G__G__Proof_247_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMergedWorkers",1633,G__G__Proof_247_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMergedObjects",1598,G__G__Proof_247_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMergedWorker",1530,G__G__Proof_247_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddMergedObjects",1575,G__G__Proof_247_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - objects", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AreAllWorkersAssigned",2124,G__G__Proof_247_0_13, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AreAllWorkersMerged",1906,G__G__Proof_247_0_14, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Deactivate",1018,G__G__Proof_247_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsActive",792,G__G__Proof_247_0_16, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Proof_247_0_17, 85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TMergerInfo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_247_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMergerInfo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_247_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TMergerInfo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_247_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TMergerInfo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_247_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_247_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMergerInfo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_247_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TMergerInfo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_247_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMergerInfo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_247_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TMergerInfo::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TMergerInfo", 1216, G__G__Proof_247_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTProofLite(void) {
   /* TProofLite */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofLite));
   G__memfunc_setup("TProofLite",1000,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__ProofLN_TProofLite), -1, 0, 1, 1, 4, 0, "u 'TProofLite' - 11 - -", "not implemented", (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "u 'TProofLite' - 11 - -", "idem", (void*) NULL, 0);
   G__memfunc_setup("CleanupSandbox",1431,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateSandbox",1315,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindUniqueSlaves",1638,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("NotifyStartUp",1356,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"C - - 10 - action i - 'Int_t' 0 - done "
"i - 'Int_t' 0 - tot", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetProofServEnv",1531,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "C - - 10 - ord", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitDataSetManager",1781,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RegisterDataSets",1630,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 4, 0, 
"U 'TList' - 0 - in U 'TList' - 0 - out", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResolveKeywords",1592,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"u 'TString' - 1 - s C - - 10 - logfile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SendInputDataFile",1684,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TProofLite",1000,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__ProofLN_TProofLite), -1, 0, 0, 1, 2, 0, "", "For derived classes to use", (void*) NULL, 0);
   G__memfunc_setup("CreateSymLinks",1422,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "U 'TList' - 0 - files", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 5, 1, 2, 0, 
"C - - 10 - masterurl C - - 10 - conffile "
"C - - 10 - confdir i - 'Int_t' 0 - loglevel "
"C - - 10 '0' alias", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakeQueryResult",1555,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__ProofLN_TProofQueryResult), -1, 0, 5, 1, 2, 0, 
"n - 'Long64_t' 0 - nent C - - 10 - opt "
"n - 'Long64_t' 0 - fst U 'TDSet' - 0 - dset "
"C - - 10 - selec", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetQueryRunning",1571,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "U 'TProofQueryResult' - 0 - pq", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetupWorkers",1278,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 2, 0, 
"i - 'Int_t' 0 '0' opt U 'TList' - 0 '0' wrks", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CopyMacroToCache",1572,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 2, 0, 
"C - - 10 - macro i - 'Int_t' 0 '0' headerRequired "
"U 'TSelector' - 2 '0' selector i - 'Int_t' 0 '0' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TProofLite",1000,G__G__Proof_252_0_19, 105, G__get_linked_tagnum(&G__G__ProofLN_TProofLite), -1, 0, 6, 1, 1, 0, 
"C - - 10 - masterurl C - - 10 'kPROOF_ConfFile' conffile "
"C - - 10 'kPROOF_ConfDir' confdir i - 'Int_t' 0 '0' loglevel "
"C - - 10 '0' alias U 'TProofMgr' - 0 '0' mgr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawSelect",1006,(G__InterfaceMethod) NULL,110, -1, G__defined_typename("Long64_t"), 0, 6, 1, 1, 0, 
"U 'TDSet' - 0 - dset C - - 10 - varexp "
"C - - 10 '\"\"' selection C - 'Option_t' 10 '\"\"' option "
"n - 'Long64_t' 0 '-1' nentries n - 'Long64_t' 0 '0' firstentry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL,110, -1, G__defined_typename("Long64_t"), 0, 5, 1, 1, 0, 
"U 'TDSet' - 0 - dset C - - 10 - sel "
"C - 'Option_t' 10 '\"\"' o n - 'Long64_t' 0 '-1' nent "
"n - 'Long64_t' 0 '0' fst", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL,110, -1, G__defined_typename("Long64_t"), 0, 5, 1, 1, 0, 
"U 'TFileCollection' - 0 - fc C - - 10 - sel "
"C - 'Option_t' 10 '\"\"' o n - 'Long64_t' 0 '-1' nent "
"n - 'Long64_t' 0 '0' fst", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL,110, -1, G__defined_typename("Long64_t"), 0, 6, 1, 1, 0, 
"C - - 10 - dsname C - - 10 - sel "
"C - 'Option_t' 10 '\"\"' o n - 'Long64_t' 0 '-1' nent "
"n - 'Long64_t' 0 '0' fst U 'TObject' - 0 '0' enl", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL,110, -1, G__defined_typename("Long64_t"), 0, 3, 1, 1, 0, 
"C - - 10 - sel n - 'Long64_t' 0 - nent "
"C - 'Option_t' 10 '\"\"' o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowCache",885,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kFALSE' all", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ClearCache",955,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '0' file", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Load",384,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 4, 1, 1, 0, 
"C - - 10 - macro g - 'Bool_t' 0 'kFALSE' notOnClient "
"g - 'Bool_t' 0 'kTRUE' uniqueOnly U 'TList' - 0 '0' wrks", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetListOfQueries",1615,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofLN_TList), -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Remove",622,G__G__Proof_252_0_30, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 10 - ref g - 'Bool_t' 0 - all", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RegisterDataSet",1515,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"C - - 10 - dsName U 'TFileCollection' - 0 - ds "
"C - - 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ExistsDataSet",1318,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - - 10 - uri", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDataSets",1081,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofLN_TMap), -1, 0, 2, 1, 1, 0, 
"C - - 10 '\"\"' uri C - - 10 '0' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowDataSets",1210,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 '\"\"' uri C - - 10 '0' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDataSet",966,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofLN_TFileCollection), -1, 0, 2, 1, 1, 0, 
"C - - 10 - uri C - - 10 '0' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("RemoveDataSet",1300,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 10 - uri C - - 10 '0' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("VerifyDataSet",1307,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 10 - uri C - - 10 '0' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDataSetTreeName",1763,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 10 - dataset C - - 10 - treename", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowDataSetCache",1563,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '0' dataset", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ClearDataSetCache",1633,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '0' dataset", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTreeHeader",1273,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofLN_TTree), -1, 0, 1, 1, 1, 0, "U 'TDSet' - 0 - tdset", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNumberOfWorkers",1835,G__G__Proof_252_0_42, 105, -1, G__defined_typename("Int_t"), 0, 1, 3, 1, 0, "C - - 10 '0' url", (char*)NULL, (void*) G__func2void( (Int_t (*)(const char*))(&TProofLite::GetNumberOfWorkers) ), 0);
   G__memfunc_setup("Class",502,G__G__Proof_252_0_43, 85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TProofLite::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_252_0_44, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofLite::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_252_0_45, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TProofLite::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_252_0_46, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TProofLite::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_252_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_252_0_51, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofLite::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_252_0_52, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofLite::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_252_0_53, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofLite::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_252_0_54, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofLite::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TProofLite", 1126, G__G__Proof_252_0_55, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSlaveLite(void) {
   /* TSlaveLite */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TSlaveLite));
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSlaveLite",989,G__G__Proof_254_0_2, 105, G__get_linked_tagnum(&G__G__ProofLN_TSlaveLite), -1, 0, 7, 1, 1, 0, 
"C - - 10 - ord i - 'Int_t' 0 - perf "
"C - - 10 - image U 'TProof' - 0 - proof "
"i - 'Int_t' 0 - stype C - - 10 - workdir "
"C - - 10 - msd", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Close",502,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoError",701,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 8, 
"i - - 0 - level C - - 10 - location "
"C - - 10 - fmt u 'va_list' - 0 - va", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetupServ",945,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - stype C - - 10 - conffile", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__Proof_254_0_7, 85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSlaveLite::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_254_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSlaveLite::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_254_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSlaveLite::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_254_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSlaveLite::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_254_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_254_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSlaveLite::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_254_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSlaveLite::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_254_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSlaveLite::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_254_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSlaveLite::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TSlaveLite", 1115, G__G__Proof_254_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTProofCondor(void) {
   /* TProofCondor */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofCondor));
   G__memfunc_setup("StartSlaves",1148,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 2, 0, "g - 'Bool_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetJobAd",736,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__ProofLN_TString), -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TProofCondor",1215,G__G__Proof_346_0_3, 105, G__get_linked_tagnum(&G__G__ProofLN_TProofCondor), -1, 0, 6, 1, 1, 0, 
"C - - 10 - masterurl C - - 10 'kPROOF_ConfFile' conffile "
"C - - 10 'kPROOF_ConfDir' confdir i - 'Int_t' 0 '0' loglevel "
"C - - 10 '0' alias U 'TProofMgr' - 0 '0' mgr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetActive",904,G__G__Proof_346_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetActive",904,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - active", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__Proof_346_0_6, 85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TProofCondor::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_346_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofCondor::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_346_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TProofCondor::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_346_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TProofCondor::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_346_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_346_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofCondor::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_346_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofCondor::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_346_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofCondor::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_346_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofCondor::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TProofCondor", 1341, G__G__Proof_346_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTQueryResultManager(void) {
   /* TQueryResultManager */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TQueryResultManager));
   G__memfunc_setup("AddLogFile",939,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'TProofQueryResult' - 0 - pq", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TQueryResultManager",1956,G__G__Proof_347_0_2, 105, G__get_linked_tagnum(&G__G__ProofLN_TQueryResultManager), -1, 0, 5, 1, 1, 0, 
"C - - 10 - qdir C - - 10 - stag "
"C - - 10 - sdir U 'TProofLockPath' - 0 - lck "
"E - - 0 '0' logfile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("QueryDir",821,G__G__Proof_347_0_3, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SeqNum",601,G__G__Proof_347_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawQueries",1132,G__G__Proof_347_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KeptQueries",1138,G__G__Proof_347_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Queries",734,G__G__Proof_347_0_7, 85, G__get_linked_tagnum(&G__G__ProofLN_TList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PreviousQueries",1595,G__G__Proof_347_0_8, 85, G__get_linked_tagnum(&G__G__ProofLN_TList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IncrementSeqNum",1534,G__G__Proof_347_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IncrementDrawQueries",2065,G__G__Proof_347_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ApplyMaxQueries",1546,G__G__Proof_347_0_11, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - mxq", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CleanupQueriesDir",1733,G__G__Proof_347_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FinalizeQuery",1352,G__G__Proof_347_0_13, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"U 'TProofQueryResult' - 0 - pq U 'TProof' - 0 - proof "
"U 'TVirtualProofPlayer' - 0 - player", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCpuTime",983,G__G__Proof_347_0_14, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRealTime",1075,G__G__Proof_347_0_15, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LocateQuery",1134,G__G__Proof_347_0_16, 85, G__get_linked_tagnum(&G__G__ProofLN_TProofQueryResult), -1, 0, 3, 1, 1, 0, 
"u 'TString' - 0 - queryref i - 'Int_t' 1 - qry "
"u 'TString' - 1 - qdir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RemoveQuery",1156,G__G__Proof_347_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TQueryResult' - 0 - qr g - 'Bool_t' 0 'kFALSE' soft", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RemoveQuery",1156,G__G__Proof_347_0_18, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - queryref U 'TList' - 0 '0' otherlist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetTime",914,G__G__Proof_347_0_19, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveQuery",933,G__G__Proof_347_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TProofQueryResult' - 0 - qr C - - 10 '0' fout", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveQuery",933,G__G__Proof_347_0_21, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TProofQueryResult' - 0 - qr i - 'Int_t' 0 - mxq", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LockSession",1133,G__G__Proof_347_0_22, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 10 - sessiontag U 'TProofLockPath' - 2 - lck", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CleanupSession",1452,G__G__Proof_347_0_23, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - - 10 - sessiontag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ScanPreviousQueries",1984,G__G__Proof_347_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - dir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Proof_347_0_25, 85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TQueryResultManager::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_347_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TQueryResultManager::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_347_0_27, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TQueryResultManager::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_347_0_28, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TQueryResultManager::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_347_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_347_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TQueryResultManager::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_347_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TQueryResultManager::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_347_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TQueryResultManager::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_347_0_36, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TQueryResultManager::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TQueryResultManager", 1956, G__G__Proof_347_0_37, (int) ('i'), G__get_linked_tagnum(&G__G__ProofLN_TQueryResultManager), -1, 0, 1, 1, 1, 0, "u 'TQueryResultManager' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TQueryResultManager", 2082, G__G__Proof_347_0_38, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Proof_347_0_39, (int) ('u'), G__get_linked_tagnum(&G__G__ProofLN_TQueryResultManager), -1, 1, 1, 1, 1, 0, "u 'TQueryResultManager' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTProofQueryResult(void) {
   /* TProofQueryResult */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofQueryResult));
   G__memfunc_setup("TProofQueryResult",1775,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__ProofLN_TProofQueryResult), -1, 0, 8, 1, 4, 0, 
"i - 'Int_t' 0 - seqnum C - - 10 - opt "
"U 'TList' - 0 - inlist n - 'Long64_t' 0 - entries "
"n - 'Long64_t' 0 - first U 'TDSet' - 0 - dset "
"C - - 10 - selec U 'TObject' - 0 '0' elist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RecordEnd",886,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"i 'TQueryResult::EQueryStatus' - 0 - status U 'TList' - 0 '0' outlist", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFinalized",1218,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetResultFile",1323,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "C - - 10 - rf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRunning",1037,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"i - 'Int_t' 0 - startlog C - - 10 - par "
"i - 'Int_t' 0 - nwrks", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TProofQueryResult",1775,G__G__Proof_348_0_6, 105, G__get_linked_tagnum(&G__G__ProofLN_TProofQueryResult), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Proof_348_0_7, 85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TProofQueryResult::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_348_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofQueryResult::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_348_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TProofQueryResult::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_348_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TProofQueryResult::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_348_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_348_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofQueryResult::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_348_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofQueryResult::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_348_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofQueryResult::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_348_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofQueryResult::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TProofQueryResult", 1775, G__G__Proof_348_0_19, (int) ('i'), G__get_linked_tagnum(&G__G__ProofLN_TProofQueryResult), -1, 0, 1, 1, 1, 0, "u 'TProofQueryResult' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TProofQueryResult", 1901, G__G__Proof_348_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Proof_348_0_21, (int) ('u'), G__get_linked_tagnum(&G__G__ProofLN_TProofQueryResult), -1, 1, 1, 1, 1, 0, "u 'TProofQueryResult' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTProofLogElem(void) {
   /* TProofLogElem */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofLogElem));
   G__memfunc_setup("TProofLogElem",1279,G__G__Proof_350_0_1, 105, G__get_linked_tagnum(&G__G__ProofLN_TProofLogElem), -1, 0, 3, 1, 1, 0, 
"C - - 10 - ord C - - 10 - url "
"U 'TProofLog' - 0 - logger", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Display",726,G__G__Proof_350_0_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 '0' from i - 'Int_t' 0 '-1' to", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMacro",786,G__G__Proof_350_0_3, 85, G__get_linked_tagnum(&G__G__ProofLN_TMacro), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRole",690,G__G__Proof_350_0_4, 67, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Grep",398,G__G__Proof_350_0_5, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"C - - 10 - txt u 'TString' - 1 - res "
"i - 'Int_t' 0 '0' from", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsMaster",808,G__G__Proof_350_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSubMaster",1106,G__G__Proof_350_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsWorker",822,G__G__Proof_350_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '0' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Prt",310,G__G__Proof_350_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - what", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Retrieve",838,G__G__Proof_350_0_11, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i 'TProofLog::ERetrieveOpt' - 0 'TProofLog::kTrailing' opt C - - 10 '0' pattern", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaxTransferSize",1830,G__G__Proof_350_0_12, 110, -1, G__defined_typename("Long64_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Long64_t (*)())(&TProofLogElem::GetMaxTransferSize) ), 0);
   G__memfunc_setup("SetMaxTransferSize",1842,G__G__Proof_350_0_13, 121, -1, -1, 0, 1, 3, 1, 0, "n - 'Long64_t' 0 - maxsz", (char*)NULL, (void*) G__func2void( (void (*)(Long64_t))(&TProofLogElem::SetMaxTransferSize) ), 0);
   G__memfunc_setup("Class",502,G__G__Proof_350_0_14, 85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TProofLogElem::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_350_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofLogElem::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_350_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TProofLogElem::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_350_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TProofLogElem::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_350_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_350_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofLogElem::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_350_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofLogElem::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_350_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofLogElem::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_350_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofLogElem::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TProofLogElem", 1279, G__G__Proof_350_0_26, (int) ('i'), G__get_linked_tagnum(&G__G__ProofLN_TProofLogElem), -1, 0, 1, 1, 1, 0, "u 'TProofLogElem' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TProofLogElem", 1405, G__G__Proof_350_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Proof_350_0_28, (int) ('u'), G__get_linked_tagnum(&G__G__ProofLN_TProofLogElem), -1, 1, 1, 1, 1, 0, "u 'TProofLogElem' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTProofMgrLite(void) {
   /* TProofMgrLite */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofMgrLite));
   G__memfunc_setup("TProofMgrLite",1294,G__G__Proof_351_0_1, 105, G__get_linked_tagnum(&G__G__ProofLN_TProofMgrLite), -1, 0, 3, 1, 1, 0, 
"C - - 10 - url i - 'Int_t' 0 '-1' loglevel "
"C - - 10 '\"\"' alias", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateSession",1336,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofLN_TProof), -1, 0, 3, 1, 1, 0, 
"C - - 10 '0' - C - - 10 '0' - "
"i - 'Int_t' 0 '-1' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSessionLogs",1433,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofLN_TProofLog), -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 '0' ridx C - - 10 '0' stag "
"C - - 10 '\"-v | SvcMsg\"' pattern g - 'Bool_t' 0 'kFALSE' rescan", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadBuffer",982,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofLN_TObjString), -1, 0, 3, 1, 1, 0, 
"C - - 10 - file n - 'Long64_t' 0 - ofs "
"i - 'Int_t' 0 - len", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadBuffer",982,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofLN_TObjString), -1, 0, 2, 1, 1, 0, 
"C - - 10 - file C - - 10 - pattern", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__Proof_351_0_6, 85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TProofMgrLite::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_351_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofMgrLite::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_351_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TProofMgrLite::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_351_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TProofMgrLite::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_351_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_351_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofMgrLite::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_351_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofMgrLite::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_351_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofMgrLite::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_351_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofMgrLite::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TProofMgrLite", 1420, G__G__Proof_351_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTProofResourcesStatic(void) {
   /* TProofResourcesStatic */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofResourcesStatic));
   G__memfunc_setup("InitResources",1359,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadConfigFile",1362,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 4, 0, 
"C - - 10 - confDir C - - 10 - fileName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInfoType",1102,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__ProofLN_TProofResourcesStaticcLcLEInfoType), -1, 0, 1, 3, 4, 0, "u 'TString' - 11 - word", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOption",933,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 3, 4, 0, 
"U 'TProofNodeInfo' - 0 - nodeinfo u 'TString' - 11 - option "
"u 'TString' - 11 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateNodeInfo",1382,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__ProofLN_TProofNodeInfo), -1, 0, 1, 3, 4, 0, "u 'TString' - 11 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TProofResourcesStatic",2173,G__G__Proof_354_0_6, 105, G__get_linked_tagnum(&G__G__ProofLN_TProofResourcesStatic), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TProofResourcesStatic",2173,G__G__Proof_354_0_7, 105, G__get_linked_tagnum(&G__G__ProofLN_TProofResourcesStatic), -1, 0, 2, 1, 1, 0, 
"C - - 10 - confDir C - - 10 - fileName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaster",908,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofLN_TProofNodeInfo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSubmasters",1353,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetWorkers",1037,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFileName",1057,G__G__Proof_354_0_11, 117, G__get_linked_tagnum(&G__G__ProofLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Proof_354_0_12, 85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TProofResourcesStatic::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_354_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofResourcesStatic::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_354_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TProofResourcesStatic::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_354_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TProofResourcesStatic::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_354_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_354_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofResourcesStatic::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_354_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofResourcesStatic::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_354_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofResourcesStatic::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_354_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofResourcesStatic::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TProofResourcesStatic", 2173, G__G__Proof_354_0_24, (int) ('i'), 
G__get_linked_tagnum(&G__G__ProofLN_TProofResourcesStatic), -1, 0, 1, 1, 1, 0, "u 'TProofResourcesStatic' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TProofResourcesStatic", 2299, G__G__Proof_354_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Proof_354_0_26, (int) ('u'), G__get_linked_tagnum(&G__G__ProofLN_TProofResourcesStatic), -1, 1, 1, 1, 1, 0, "u 'TProofResourcesStatic' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTProofNodeInfo(void) {
   /* TProofNodeInfo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofNodeInfo));
   G__memfunc_setup("TProofNodeInfo",1388,G__G__Proof_355_0_1, 105, G__get_linked_tagnum(&G__G__ProofLN_TProofNodeInfo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TProofNodeInfo",1388,G__G__Proof_355_0_2, 105, G__get_linked_tagnum(&G__G__ProofLN_TProofNodeInfo), -1, 0, 1, 1, 1, 0, "C - - 10 - str", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TProofNodeInfo",1388,G__G__Proof_355_0_3, 105, G__get_linked_tagnum(&G__G__ProofLN_TProofNodeInfo), -1, 0, 1, 1, 1, 0, "u 'TProofNodeInfo' - 11 - nodeInfo", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNodeType",1096,G__G__Proof_355_0_4, 105, G__get_linked_tagnum(&G__G__ProofLN_TProofNodeInfocLcLENodeType), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNodeName",1063,G__G__Proof_355_0_5, 117, G__get_linked_tagnum(&G__G__ProofLN_TString), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWorkDir",994,G__G__Proof_355_0_6, 117, G__get_linked_tagnum(&G__G__ProofLN_TString), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOrdinal",1001,G__G__Proof_355_0_7, 117, G__get_linked_tagnum(&G__G__ProofLN_TString), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetImage",771,G__G__Proof_355_0_8, 117, G__get_linked_tagnum(&G__G__ProofLN_TString), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetId",461,G__G__Proof_355_0_9, 117, G__get_linked_tagnum(&G__G__ProofLN_TString), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetConfig",886,G__G__Proof_355_0_10, 117, G__get_linked_tagnum(&G__G__ProofLN_TString), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMsd",580,G__G__Proof_355_0_11, 117, G__get_linked_tagnum(&G__G__ProofLN_TString), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPort",709,G__G__Proof_355_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPerfIndex",1189,G__G__Proof_355_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Assign",613,G__G__Proof_355_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TProofNodeInfo' - 11 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNodeType",1096,G__G__Proof_355_0_16, 105, G__get_linked_tagnum(&G__G__ProofLN_TProofNodeInfocLcLENodeType), -1, 0, 1, 3, 1, 0, "u 'TString' - 11 - type", (char*)NULL, (void*) G__func2void( (TProofNodeInfo::ENodeType (*)(const TString&))(&TProofNodeInfo::GetNodeType) ), 0);
   G__memfunc_setup("Class",502,G__G__Proof_355_0_17, 85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TProofNodeInfo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_355_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofNodeInfo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_355_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TProofNodeInfo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_355_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TProofNodeInfo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_355_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_355_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofNodeInfo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_355_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofNodeInfo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_355_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofNodeInfo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_355_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofNodeInfo::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TProofNodeInfo", 1514, G__G__Proof_355_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Proof_355_0_30, (int) ('u'), G__get_linked_tagnum(&G__G__ProofLN_TProofNodeInfo), -1, 1, 1, 1, 1, 0, "u 'TProofNodeInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTProofProgressStatus(void) {
   /* TProofProgressStatus */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofProgressStatus));
   G__memfunc_setup("TProofProgressStatus",2099,G__G__Proof_357_0_1, 105, G__get_linked_tagnum(&G__G__ProofLN_TProofProgressStatus), -1, 0, 5, 1, 1, 0, 
"n - 'Long64_t' 0 '0' fEntries n - 'Long64_t' 0 '0' fBytesRead "
"n - 'Long64_t' 0 '0' fReadCalls d - 'Double_t' 0 '0' fProcTime "
"d - 'Double_t' 0 '0' fCPUTime", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__G__Proof_357_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEntries",1018,G__G__Proof_357_0_3, 110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBytesRead",1187,G__G__Proof_357_0_4, 110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetReadCalls",1163,G__G__Proof_357_0_5, 110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLearnTime",1185,G__G__Proof_357_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProcTime",1091,G__G__Proof_357_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCPUTime",919,G__G__Proof_357_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLastUpdate",1303,G__G__Proof_357_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRate",684,G__G__Proof_357_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCurrentRate",1423,G__G__Proof_357_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLastEntries",1434,G__G__Proof_357_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - entries", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEntries",1030,G__G__Proof_357_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - entries", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IncEntries",1012,G__G__Proof_357_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 '1' entries", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IncBytesRead",1181,G__G__Proof_357_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - bytesRead", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBytesRead",1199,G__G__Proof_357_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - bytesRead", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IncReadCalls",1157,G__G__Proof_357_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - readCalls", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetReadCalls",1175,G__G__Proof_357_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - readCalls", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLearnTime",1197,G__G__Proof_357_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - learnTime", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLastProcTime",1507,G__G__Proof_357_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - procTime", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetProcTime",1103,G__G__Proof_357_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - procTime", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IncProcTime",1085,G__G__Proof_357_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - procTime", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCPUTime",931,G__G__Proof_357_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - procTime", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IncCPUTime",913,G__G__Proof_357_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - procTime", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLastUpdate",1315,G__G__Proof_357_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 '0' updtTime", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("operator-",921,G__G__Proof_357_0_27, 117, G__get_linked_tagnum(&G__G__ProofLN_TProofProgressStatus), -1, 0, 1, 1, 1, 0, "u 'TProofProgressStatus' - 1 - st", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Proof_357_0_28, 117, G__get_linked_tagnum(&G__G__ProofLN_TProofProgressStatus), -1, 1, 1, 1, 1, 0, "u 'TProofProgressStatus' - 11 - st", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Proof_357_0_29, 117, G__get_linked_tagnum(&G__G__ProofLN_TProofProgressStatus), -1, 1, 1, 1, 1, 0, "u 'TProofProgressStatus' - 11 - st", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Proof_357_0_30, 85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TProofProgressStatus::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_357_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofProgressStatus::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_357_0_32, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TProofProgressStatus::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_357_0_33, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TProofProgressStatus::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_357_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_357_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofProgressStatus::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_357_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofProgressStatus::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_357_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofProgressStatus::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_357_0_41, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofProgressStatus::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TProofProgressStatus", 2099, G__G__Proof_357_0_42, (int) ('i'), G__get_linked_tagnum(&G__G__ProofLN_TProofProgressStatus), -1, 0, 1, 1, 1, 0, "u 'TProofProgressStatus' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TProofProgressStatus", 2225, G__G__Proof_357_0_43, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Proof_357_0_44, (int) ('u'), G__get_linked_tagnum(&G__G__ProofLN_TProofProgressStatus), -1, 1, 1, 1, 1, 0, "u 'TProofProgressStatus' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTProofResources(void) {
   /* TProofResources */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofResources));
   G__memfunc_setup("GetMaster",908,G__G__Proof_361_0_2, 85, G__get_linked_tagnum(&G__G__ProofLN_TProofNodeInfo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetSubmasters",1353,G__G__Proof_361_0_3, 85, G__get_linked_tagnum(&G__G__ProofLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetWorkers",1037,G__G__Proof_361_0_4, 85, G__get_linked_tagnum(&G__G__ProofLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("IsValid",684,G__G__Proof_361_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__Proof_361_0_6, 85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TProofResources::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_361_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofResources::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_361_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TProofResources::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_361_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TProofResources::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_361_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_361_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofResources::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_361_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofResources::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_361_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofResources::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_361_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofResources::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TProofResources", 1683, G__G__Proof_361_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Proof_361_0_19, (int) ('u'), G__get_linked_tagnum(&G__G__ProofLN_TProofResources), -1, 1, 1, 1, 1, 0, "u 'TProofResources' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTProofServLite(void) {
   /* TProofServLite */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofServLite));
   G__memfunc_setup("Setup",529,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetupOnFork",1120,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "C - - 10 - ord", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TProofServLite",1416,G__G__Proof_373_0_3, 105, G__get_linked_tagnum(&G__G__ProofLN_TProofServLite), -1, 0, 3, 1, 1, 0, 
"I - 'Int_t' 0 - argc C - - 2 - argv "
"E - - 0 '0' flog", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateServer",1227,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HandleFork",990,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TMessage' - 0 - mess", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HandleSigPipe",1277,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HandleTermination",1750,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Terminate",937,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - status", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__Proof_373_0_9, 85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TProofServLite::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_373_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofServLite::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_373_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TProofServLite::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_373_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TProofServLite::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_373_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_373_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofServLite::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_373_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofServLite::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_373_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofServLite::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_373_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofServLite::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TProofServLite", 1542, G__G__Proof_373_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTProofSuperMaster(void) {
   /* TProofSuperMaster */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofSuperMaster));
   G__memfunc_setup("StartSlaves",1148,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 2, 0, "g - 'Bool_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ValidateDSet",1178,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "U 'TDSet' - 0 - dset", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakePlayer",1003,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__ProofLN_TVirtualProofPlayer), -1, 0, 2, 1, 2, 0, 
"C - - 10 '0' player U 'TSocket' - 0 '0' s", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TProofSuperMaster",1749,G__G__Proof_382_0_4, 105, G__get_linked_tagnum(&G__G__ProofLN_TProofSuperMaster), -1, 0, 6, 1, 1, 0, 
"C - - 10 - masterurl C - - 10 'kPROOF_ConfFile' conffile "
"C - - 10 'kPROOF_ConfDir' confdir i - 'Int_t' 0 '0' loglevel "
"C - - 10 '0' alias U 'TProofMgr' - 0 '0' mgr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL,110, -1, G__defined_typename("Long64_t"), 0, 5, 1, 1, 0, 
"U 'TDSet' - 0 - set C - - 10 - selector "
"C - 'Option_t' 10 '\"\"' option n - 'Long64_t' 0 '-1' nentries "
"n - 'Long64_t' 0 '0' firstentry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL,110, -1, G__defined_typename("Long64_t"), 0, 5, 1, 1, 0, 
"U 'TFileCollection' - 0 - fc C - - 10 - sel "
"C - 'Option_t' 10 '\"\"' o n - 'Long64_t' 0 '-1' nent "
"n - 'Long64_t' 0 '0' fst", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL,110, -1, G__defined_typename("Long64_t"), 0, 6, 1, 1, 0, 
"C - - 10 - dsname C - - 10 - sel "
"C - 'Option_t' 10 '\"\"' o n - 'Long64_t' 0 '-1' nent "
"n - 'Long64_t' 0 '0' fst U 'TObject' - 0 '0' enl", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL,110, -1, G__defined_typename("Long64_t"), 0, 3, 1, 1, 0, 
"C - - 10 - sel n - 'Long64_t' 0 - nent "
"C - 'Option_t' 10 '\"\"' o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__Proof_382_0_9, 85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TProofSuperMaster::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_382_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofSuperMaster::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_382_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TProofSuperMaster::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_382_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TProofSuperMaster::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_382_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_382_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofSuperMaster::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_382_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofSuperMaster::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_382_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofSuperMaster::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_382_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofSuperMaster::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TProofSuperMaster", 1875, G__G__Proof_382_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__Proof() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
   G__memvar_setup((void*)(&gProofDebugMask),105,0,0,G__get_linked_tagnum(&G__G__ProofLN_TProofDebugcLcLEProofDebugMask),-1,-1,1,"gProofDebugMask=",0,(char*)NULL);
   G__memvar_setup((void*)(&gProofDebugLevel),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"gProofDebugLevel=",0,(char*)NULL);
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
   G__memvar_setup((void*)(&gProof),85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TProof),-1,-1,1,"gProof=",0,(char*)NULL);
}

static void G__cpp_setup_global5() {
   G__memvar_setup((void*)(&gProofServ),85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TProofServ),-1,-1,1,"gProofServ=",0,(char*)NULL);

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__Proof() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__Proof() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__ProofLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TDirectory = { "TDirectory" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_va_list = { "va_list" , 115 , -1 };
G__linked_taginfo G__G__ProofLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TBrowser = { "TBrowser" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TTimer = { "TTimer" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TPRegexp = { "TPRegexp" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TVirtualMutex = { "TVirtualMutex" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TCondorSlave = { "TCondorSlave" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TCondor = { "TCondor" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TCondorcLcLEState = { "TCondor::EState" , 101 , -1 };
G__linked_taginfo G__G__ProofLN_TChain = { "TChain" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TCollection = { "TCollection" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TCut = { "TCut" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TDSet = { "TDSet" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TEventList = { "TEventList" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TEntryList = { "TEntryList" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TFileInfo = { "TFileInfo" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_THashList = { "THashList" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TIter = { "TIter" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TProof = { "TProof" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TProofChain = { "TProofChain" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TDSetElement = { "TDSetElement" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_pairlETDSetElementmUcOTStringgR = { "pair<TDSetElement*,TString>" , 115 , -1 };
G__linked_taginfo G__G__ProofLN_allocatorlEpairlETDSetElementmUcOTStringgRsPgR = { "allocator<pair<TDSetElement*,TString> >" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_listlEpairlETDSetElementmUcOTStringgRcOallocatorlEpairlETDSetElementmUcOTStringgRsPgRsPgR = { "list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_listlEpairlETDSetElementmUcOTStringgRcOallocatorlEpairlETDSetElementmUcOTStringgRsPgRsPgRcLcLiterator = { "list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::iterator" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_listlEpairlETDSetElementmUcOTStringgRcOallocatorlEpairlETDSetElementmUcOTStringgRsPgRsPgRcLcLreverse_iterator = { "list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >::reverse_iterator" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TDSetElementcLcLEStatusBits = { "TDSetElement::EStatusBits" , 101 , -1 };
G__linked_taginfo G__G__ProofLN_TDSetcLcLEStatusBits = { "TDSet::EStatusBits" , 101 , -1 };
G__linked_taginfo G__G__ProofLN_TProofServ = { "TProofServ" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TDSetProxy = { "TDSetProxy" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TMap = { "TMap" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__G__ProofLN_TUri = { "TUri" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TFileCollection = { "TFileCollection" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TMD5 = { "TMD5" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TUrl = { "TUrl" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TVirtualMonitoringWriter = { "TVirtualMonitoringWriter" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TDataSetManager = { "TDataSetManager" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TDataSetManagercLcLEDataSetStatusBits = { "TDataSetManager::EDataSetStatusBits" , 101 , -1 };
G__linked_taginfo G__G__ProofLN_TDataSetManagercLcLEDataSetWorkOpts = { "TDataSetManager::EDataSetWorkOpts" , 101 , -1 };
G__linked_taginfo G__G__ProofLN_TDataSetManagerFile = { "TDataSetManagerFile" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TSocket = { "TSocket" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TServerSocket = { "TServerSocket" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TQObject = { "TQObject" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TFileHandler = { "TFileHandler" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TSignalHandler = { "TSignalHandler" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TSeqCollection = { "TSeqCollection" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_FileStat_t = { "FileStat_t" , 115 , -1 };
G__linked_taginfo G__G__ProofLN_SysInfo_t = { "SysInfo_t" , 115 , -1 };
G__linked_taginfo G__G__ProofLN_TObjString = { "TObjString" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TProofDesc = { "TProofDesc" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TProofLog = { "TProofLog" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TProofMgr = { "TProofMgr" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TProofMgrcLcLEServType = { "TProofMgr::EServType" , 101 , -1 };
G__linked_taginfo G__G__ProofLN_TProofDesccLcLEStatus = { "TProofDesc::EStatus" , 101 , -1 };
G__linked_taginfo G__G__ProofLN_TProofDebug = { "TProofDebug" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TProofDebugcLcLEProofDebugMask = { "TProofDebug::EProofDebugMask" , 101 , -1 };
G__linked_taginfo G__G__ProofLN_TMutex = { "TMutex" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TProofOutputList = { "TProofOutputList" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TDrawFeedback = { "TDrawFeedback" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TMessage = { "TMessage" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TMonitor = { "TMonitor" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TPluginHandler = { "TPluginHandler" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TProofLockPath = { "TProofLockPath" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TVirtualProofPlayer = { "TVirtualProofPlayer" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TQueryResult = { "TQueryResult" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TSlave = { "TSlave" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TSemaphore = { "TSemaphore" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TMacro = { "TMacro" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TProofProgressInfo = { "TProofProgressInfo" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TSlaveInfo = { "TSlaveInfo" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TSlaveInfocLcLESlaveStatus = { "TSlaveInfo::ESlaveStatus" , 101 , -1 };
G__linked_taginfo G__G__ProofLN_TMergerInfo = { "TMergerInfo" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TProofMergePrg = { "TProofMergePrg" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TProofLite = { "TProofLite" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TSlaveLite = { "TSlaveLite" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TVirtualPacketizer = { "TVirtualPacketizer" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TProofcLcLEStatusBits = { "TProof::EStatusBits" , 101 , -1 };
G__linked_taginfo G__G__ProofLN_TProofcLcLEQueryMode = { "TProof::EQueryMode" , 101 , -1 };
G__linked_taginfo G__G__ProofLN_TProofcLcLEUploadOpt = { "TProof::EUploadOpt" , 101 , -1 };
G__linked_taginfo G__G__ProofLN_TProofcLcLERegisterOpt = { "TProof::ERegisterOpt" , 101 , -1 };
G__linked_taginfo G__G__ProofLN_TProofcLcLEUploadDataSetAnswer = { "TProof::EUploadDataSetAnswer" , 101 , -1 };
G__linked_taginfo G__G__ProofLN_TProofcLcLEUploadPackageOpt = { "TProof::EUploadPackageOpt" , 101 , -1 };
G__linked_taginfo G__G__ProofLN_TProofcLcLERunStatus = { "TProof::ERunStatus" , 101 , -1 };
G__linked_taginfo G__G__ProofLN_TProofcLcLESubMerger = { "TProof::ESubMerger" , 101 , -1 };
G__linked_taginfo G__G__ProofLN_TProofcLcLEUrgent = { "TProof::EUrgent" , 101 , -1 };
G__linked_taginfo G__G__ProofLN_TProofcLcLEProofCacheCommands = { "TProof::EProofCacheCommands" , 101 , -1 };
G__linked_taginfo G__G__ProofLN_TProofcLcLEProofDataSetCommands = { "TProof::EProofDataSetCommands" , 101 , -1 };
G__linked_taginfo G__G__ProofLN_TProofcLcLESendFileOpt = { "TProof::ESendFileOpt" , 101 , -1 };
G__linked_taginfo G__G__ProofLN_TProofcLcLEProofWrkListAction = { "TProof::EProofWrkListAction" , 101 , -1 };
G__linked_taginfo G__G__ProofLN_TProofcLcLEBuildPackageOpt = { "TProof::EBuildPackageOpt" , 101 , -1 };
G__linked_taginfo G__G__ProofLN_TProofcLcLEProofShowQuotaOpt = { "TProof::EProofShowQuotaOpt" , 101 , -1 };
G__linked_taginfo G__G__ProofLN_TProofcLcLEProofClearData = { "TProof::EProofClearData" , 101 , -1 };
G__linked_taginfo G__G__ProofLN_maplETStringcOTProofcLcLMD5Mod_tcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTProofcLcLMD5Mod_tgRsPgRsPgR = { "map<TString,TProof::MD5Mod_t,less<TString>,allocator<pair<const TString,TProof::MD5Mod_t> > >" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TProofcLcLESlaves = { "TProof::ESlaves" , 101 , -1 };
G__linked_taginfo G__G__ProofLN_TAttFill = { "TAttFill" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TLeaf = { "TLeaf" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TBranch = { "TBranch" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TAttLine = { "TAttLine" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TAttMarker = { "TAttMarker" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TSelector = { "TSelector" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TVirtualTreePlayer = { "TVirtualTreePlayer" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TProofChaincLcLdA = { "TProofChain::$" , 101 , -1 };
G__linked_taginfo G__G__ProofLN_TProofCondor = { "TProofCondor" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TQueryResultManager = { "TQueryResultManager" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TProofQueryResult = { "TProofQueryResult" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TDatime = { "TDatime" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TProofLogElem = { "TProofLogElem" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TProofMgrLite = { "TProofMgrLite" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TProofLogcLcLELogLocationBit = { "TProofLog::ELogLocationBit" , 101 , -1 };
G__linked_taginfo G__G__ProofLN_TProofLogcLcLERetrieveOpt = { "TProofLog::ERetrieveOpt" , 101 , -1 };
G__linked_taginfo G__G__ProofLN_TProofResourcesStatic = { "TProofResourcesStatic" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TProofNodeInfo = { "TProofNodeInfo" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TProofNodeInfocLcLENodeType = { "TProofNodeInfo::ENodeType" , 101 , -1 };
G__linked_taginfo G__G__ProofLN_TProofProgressStatus = { "TProofProgressStatus" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TProofProgressStatuscLcLEStatusBits = { "TProofProgressStatus::EStatusBits" , 101 , -1 };
G__linked_taginfo G__G__ProofLN_TQueryResultcLcLEQueryStatus = { "TQueryResult::EQueryStatus" , 101 , -1 };
G__linked_taginfo G__G__ProofLN_TProofResources = { "TProofResources" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TProofResourcesStaticcLcLEInfoType = { "TProofResourcesStatic::EInfoType" , 101 , -1 };
G__linked_taginfo G__G__ProofLN_TApplication = { "TApplication" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TStopwatch = { "TStopwatch" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TShutdownTimer = { "TShutdownTimer" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TReaperTimer = { "TReaperTimer" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TIdleTOTimer = { "TIdleTOTimer" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TProofServLite = { "TProofServLite" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TProofServcLcLEStatusBits = { "TProofServ::EStatusBits" , 101 , -1 };
G__linked_taginfo G__G__ProofLN_TProofServcLcLEQueryAction = { "TProofServ::EQueryAction" , 101 , -1 };
G__linked_taginfo G__G__ProofLN_TProofServLiteInterruptHandler = { "TProofServLiteInterruptHandler" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TProofSuperMaster = { "TProofSuperMaster" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TSlavecLcLESlaveType = { "TSlave::ESlaveType" , 101 , -1 };
G__linked_taginfo G__G__ProofLN_TSlavecLcLESlaveStatus = { "TSlave::ESlaveStatus" , 101 , -1 };
G__linked_taginfo G__G__ProofLN_TVirtualProofPlayercLcLEStatusBits = { "TVirtualProofPlayer::EStatusBits" , 101 , -1 };
G__linked_taginfo G__G__ProofLN_TVirtualProofPlayercLcLEExitStatus = { "TVirtualProofPlayer::EExitStatus" , 101 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__Proof() {
  G__G__ProofLN_TClass.tagnum = -1 ;
  G__G__ProofLN_TBuffer.tagnum = -1 ;
  G__G__ProofLN_TDirectory.tagnum = -1 ;
  G__G__ProofLN_TMemberInspector.tagnum = -1 ;
  G__G__ProofLN_TObject.tagnum = -1 ;
  G__G__ProofLN_TNamed.tagnum = -1 ;
  G__G__ProofLN_TString.tagnum = -1 ;
  G__G__ProofLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__ProofLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ProofLN_va_list.tagnum = -1 ;
  G__G__ProofLN_TList.tagnum = -1 ;
  G__G__ProofLN_TBrowser.tagnum = -1 ;
  G__G__ProofLN_TObjArray.tagnum = -1 ;
  G__G__ProofLN_TTimer.tagnum = -1 ;
  G__G__ProofLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__G__ProofLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ProofLN_TPRegexp.tagnum = -1 ;
  G__G__ProofLN_TVirtualMutex.tagnum = -1 ;
  G__G__ProofLN_TCondorSlave.tagnum = -1 ;
  G__G__ProofLN_TCondor.tagnum = -1 ;
  G__G__ProofLN_TCondorcLcLEState.tagnum = -1 ;
  G__G__ProofLN_TChain.tagnum = -1 ;
  G__G__ProofLN_TCollection.tagnum = -1 ;
  G__G__ProofLN_TCut.tagnum = -1 ;
  G__G__ProofLN_TDSet.tagnum = -1 ;
  G__G__ProofLN_TEventList.tagnum = -1 ;
  G__G__ProofLN_TEntryList.tagnum = -1 ;
  G__G__ProofLN_TFileInfo.tagnum = -1 ;
  G__G__ProofLN_THashList.tagnum = -1 ;
  G__G__ProofLN_TIter.tagnum = -1 ;
  G__G__ProofLN_TProof.tagnum = -1 ;
  G__G__ProofLN_TProofChain.tagnum = -1 ;
  G__G__ProofLN_TTree.tagnum = -1 ;
  G__G__ProofLN_TDSetElement.tagnum = -1 ;
  G__G__ProofLN_pairlETDSetElementmUcOTStringgR.tagnum = -1 ;
  G__G__ProofLN_allocatorlEpairlETDSetElementmUcOTStringgRsPgR.tagnum = -1 ;
  G__G__ProofLN_listlEpairlETDSetElementmUcOTStringgRcOallocatorlEpairlETDSetElementmUcOTStringgRsPgRsPgR.tagnum = -1 ;
  G__G__ProofLN_listlEpairlETDSetElementmUcOTStringgRcOallocatorlEpairlETDSetElementmUcOTStringgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__G__ProofLN_listlEpairlETDSetElementmUcOTStringgRcOallocatorlEpairlETDSetElementmUcOTStringgRsPgRsPgRcLcLreverse_iterator.tagnum = -1 ;
  G__G__ProofLN_TDSetElementcLcLEStatusBits.tagnum = -1 ;
  G__G__ProofLN_TDSetcLcLEStatusBits.tagnum = -1 ;
  G__G__ProofLN_TProofServ.tagnum = -1 ;
  G__G__ProofLN_TDSetProxy.tagnum = -1 ;
  G__G__ProofLN_TMap.tagnum = -1 ;
  G__G__ProofLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__G__ProofLN_TUri.tagnum = -1 ;
  G__G__ProofLN_TFileCollection.tagnum = -1 ;
  G__G__ProofLN_TMD5.tagnum = -1 ;
  G__G__ProofLN_TUrl.tagnum = -1 ;
  G__G__ProofLN_TVirtualMonitoringWriter.tagnum = -1 ;
  G__G__ProofLN_TDataSetManager.tagnum = -1 ;
  G__G__ProofLN_TDataSetManagercLcLEDataSetStatusBits.tagnum = -1 ;
  G__G__ProofLN_TDataSetManagercLcLEDataSetWorkOpts.tagnum = -1 ;
  G__G__ProofLN_TDataSetManagerFile.tagnum = -1 ;
  G__G__ProofLN_TSocket.tagnum = -1 ;
  G__G__ProofLN_TServerSocket.tagnum = -1 ;
  G__G__ProofLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__G__ProofLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ProofLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__G__ProofLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ProofLN_TQObject.tagnum = -1 ;
  G__G__ProofLN_TFileHandler.tagnum = -1 ;
  G__G__ProofLN_TSignalHandler.tagnum = -1 ;
  G__G__ProofLN_TSeqCollection.tagnum = -1 ;
  G__G__ProofLN_FileStat_t.tagnum = -1 ;
  G__G__ProofLN_SysInfo_t.tagnum = -1 ;
  G__G__ProofLN_TObjString.tagnum = -1 ;
  G__G__ProofLN_TProofDesc.tagnum = -1 ;
  G__G__ProofLN_TProofLog.tagnum = -1 ;
  G__G__ProofLN_TProofMgr.tagnum = -1 ;
  G__G__ProofLN_TProofMgrcLcLEServType.tagnum = -1 ;
  G__G__ProofLN_TProofDesccLcLEStatus.tagnum = -1 ;
  G__G__ProofLN_TProofDebug.tagnum = -1 ;
  G__G__ProofLN_TProofDebugcLcLEProofDebugMask.tagnum = -1 ;
  G__G__ProofLN_TMutex.tagnum = -1 ;
  G__G__ProofLN_TProofOutputList.tagnum = -1 ;
  G__G__ProofLN_TDrawFeedback.tagnum = -1 ;
  G__G__ProofLN_TMessage.tagnum = -1 ;
  G__G__ProofLN_TMonitor.tagnum = -1 ;
  G__G__ProofLN_TPluginHandler.tagnum = -1 ;
  G__G__ProofLN_TProofLockPath.tagnum = -1 ;
  G__G__ProofLN_TVirtualProofPlayer.tagnum = -1 ;
  G__G__ProofLN_TQueryResult.tagnum = -1 ;
  G__G__ProofLN_TSlave.tagnum = -1 ;
  G__G__ProofLN_TSemaphore.tagnum = -1 ;
  G__G__ProofLN_TMacro.tagnum = -1 ;
  G__G__ProofLN_TProofProgressInfo.tagnum = -1 ;
  G__G__ProofLN_TSlaveInfo.tagnum = -1 ;
  G__G__ProofLN_TSlaveInfocLcLESlaveStatus.tagnum = -1 ;
  G__G__ProofLN_TMergerInfo.tagnum = -1 ;
  G__G__ProofLN_TProofMergePrg.tagnum = -1 ;
  G__G__ProofLN_TProofLite.tagnum = -1 ;
  G__G__ProofLN_TSlaveLite.tagnum = -1 ;
  G__G__ProofLN_TVirtualPacketizer.tagnum = -1 ;
  G__G__ProofLN_TProofcLcLEStatusBits.tagnum = -1 ;
  G__G__ProofLN_TProofcLcLEQueryMode.tagnum = -1 ;
  G__G__ProofLN_TProofcLcLEUploadOpt.tagnum = -1 ;
  G__G__ProofLN_TProofcLcLERegisterOpt.tagnum = -1 ;
  G__G__ProofLN_TProofcLcLEUploadDataSetAnswer.tagnum = -1 ;
  G__G__ProofLN_TProofcLcLEUploadPackageOpt.tagnum = -1 ;
  G__G__ProofLN_TProofcLcLERunStatus.tagnum = -1 ;
  G__G__ProofLN_TProofcLcLESubMerger.tagnum = -1 ;
  G__G__ProofLN_TProofcLcLEUrgent.tagnum = -1 ;
  G__G__ProofLN_TProofcLcLEProofCacheCommands.tagnum = -1 ;
  G__G__ProofLN_TProofcLcLEProofDataSetCommands.tagnum = -1 ;
  G__G__ProofLN_TProofcLcLESendFileOpt.tagnum = -1 ;
  G__G__ProofLN_TProofcLcLEProofWrkListAction.tagnum = -1 ;
  G__G__ProofLN_TProofcLcLEBuildPackageOpt.tagnum = -1 ;
  G__G__ProofLN_TProofcLcLEProofShowQuotaOpt.tagnum = -1 ;
  G__G__ProofLN_TProofcLcLEProofClearData.tagnum = -1 ;
  G__G__ProofLN_maplETStringcOTProofcLcLMD5Mod_tcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTProofcLcLMD5Mod_tgRsPgRsPgR.tagnum = -1 ;
  G__G__ProofLN_TProofcLcLESlaves.tagnum = -1 ;
  G__G__ProofLN_TAttFill.tagnum = -1 ;
  G__G__ProofLN_TLeaf.tagnum = -1 ;
  G__G__ProofLN_TBranch.tagnum = -1 ;
  G__G__ProofLN_TAttLine.tagnum = -1 ;
  G__G__ProofLN_TAttMarker.tagnum = -1 ;
  G__G__ProofLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__G__ProofLN_TSelector.tagnum = -1 ;
  G__G__ProofLN_TVirtualTreePlayer.tagnum = -1 ;
  G__G__ProofLN_TProofChaincLcLdA.tagnum = -1 ;
  G__G__ProofLN_TProofCondor.tagnum = -1 ;
  G__G__ProofLN_TQueryResultManager.tagnum = -1 ;
  G__G__ProofLN_TProofQueryResult.tagnum = -1 ;
  G__G__ProofLN_TDatime.tagnum = -1 ;
  G__G__ProofLN_TProofLogElem.tagnum = -1 ;
  G__G__ProofLN_TProofMgrLite.tagnum = -1 ;
  G__G__ProofLN_TProofLogcLcLELogLocationBit.tagnum = -1 ;
  G__G__ProofLN_TProofLogcLcLERetrieveOpt.tagnum = -1 ;
  G__G__ProofLN_TProofResourcesStatic.tagnum = -1 ;
  G__G__ProofLN_TProofNodeInfo.tagnum = -1 ;
  G__G__ProofLN_TProofNodeInfocLcLENodeType.tagnum = -1 ;
  G__G__ProofLN_TProofProgressStatus.tagnum = -1 ;
  G__G__ProofLN_TProofProgressStatuscLcLEStatusBits.tagnum = -1 ;
  G__G__ProofLN_TQueryResultcLcLEQueryStatus.tagnum = -1 ;
  G__G__ProofLN_TProofResources.tagnum = -1 ;
  G__G__ProofLN_TProofResourcesStaticcLcLEInfoType.tagnum = -1 ;
  G__G__ProofLN_TApplication.tagnum = -1 ;
  G__G__ProofLN_TStopwatch.tagnum = -1 ;
  G__G__ProofLN_TShutdownTimer.tagnum = -1 ;
  G__G__ProofLN_TReaperTimer.tagnum = -1 ;
  G__G__ProofLN_TIdleTOTimer.tagnum = -1 ;
  G__G__ProofLN_TProofServLite.tagnum = -1 ;
  G__G__ProofLN_TProofServcLcLEStatusBits.tagnum = -1 ;
  G__G__ProofLN_TProofServcLcLEQueryAction.tagnum = -1 ;
  G__G__ProofLN_TProofServLiteInterruptHandler.tagnum = -1 ;
  G__G__ProofLN_TProofSuperMaster.tagnum = -1 ;
  G__G__ProofLN_TSlavecLcLESlaveType.tagnum = -1 ;
  G__G__ProofLN_TSlavecLcLESlaveStatus.tagnum = -1 ;
  G__G__ProofLN_TVirtualProofPlayercLcLEStatusBits.tagnum = -1 ;
  G__G__ProofLN_TVirtualProofPlayercLcLEExitStatus.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__Proof() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TDirectory);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TNamed);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TString);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_va_list);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TList);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TBrowser);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TTimer);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TPRegexp);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TVirtualMutex);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ProofLN_TCondorSlave),sizeof(TCondorSlave),-1,290816,"Describes a claimed slave",G__setup_memvarTCondorSlave,G__setup_memfuncTCondorSlave);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ProofLN_TCondor),sizeof(TCondor),-1,292096,"Interface to the Condor System",G__setup_memvarTCondor,G__setup_memfuncTCondor);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TCondorcLcLEState);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TChain);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TCollection);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TCut);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ProofLN_TDSet),sizeof(TDSet),-1,130816,"Data set for remote processing (PROOF)",G__setup_memvarTDSet,G__setup_memfuncTDSet);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TEventList);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TEntryList);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TFileInfo);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_THashList);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TIter);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ProofLN_TProof),sizeof(TProof),-1,65280,"PROOF control class",G__setup_memvarTProof,G__setup_memfuncTProof);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ProofLN_TProofChain),sizeof(TProofChain),-1,324864,"TChain proxy for running chains on PROOF",G__setup_memvarTProofChain,G__setup_memfuncTProofChain);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TTree);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ProofLN_TDSetElement),sizeof(TDSetElement),-1,130816,"A TDSet element",G__setup_memvarTDSetElement,G__setup_memfuncTDSetElement);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ProofLN_pairlETDSetElementmUcOTStringgR),sizeof(pair<TDSetElement*,TString>),-1,35072,(char*)NULL,G__setup_memvarpairlETDSetElementmUcOTStringgR,G__setup_memfuncpairlETDSetElementmUcOTStringgR);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_allocatorlEpairlETDSetElementmUcOTStringgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ProofLN_listlEpairlETDSetElementmUcOTStringgRcOallocatorlEpairlETDSetElementmUcOTStringgRsPgRsPgR),sizeof(list<pair<TDSetElement*,TString>,allocator<pair<TDSetElement*,TString> > >),-1,36608,(char*)NULL,G__setup_memvarlistlEpairlETDSetElementmUcOTStringgRcOallocatorlEpairlETDSetElementmUcOTStringgRsPgRsPgR,G__setup_memfunclistlEpairlETDSetElementmUcOTStringgRcOallocatorlEpairlETDSetElementmUcOTStringgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_listlEpairlETDSetElementmUcOTStringgRcOallocatorlEpairlETDSetElementmUcOTStringgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_listlEpairlETDSetElementmUcOTStringgRcOallocatorlEpairlETDSetElementmUcOTStringgRsPgRsPgRcLcLreverse_iterator);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TDSetElementcLcLEStatusBits);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TDSetcLcLEStatusBits);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ProofLN_TProofServ),sizeof(TProofServ),-1,62464,"PROOF Server Application Interface",G__setup_memvarTProofServ,G__setup_memfuncTProofServ);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ProofLN_TDSetProxy),sizeof(TDSetProxy),-1,323840,"TDSet proxy for use on slaves",G__setup_memvarTDSetProxy,G__setup_memfuncTDSetProxy);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TMap);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TUri);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TFileCollection);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TMD5);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TUrl);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TVirtualMonitoringWriter);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ProofLN_TDataSetManager),sizeof(TDataSetManager),-1,32512,"Abstract data set manager class",G__setup_memvarTDataSetManager,G__setup_memfuncTDataSetManager);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TDataSetManagercLcLEDataSetStatusBits);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TDataSetManagercLcLEDataSetWorkOpts);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ProofLN_TDataSetManagerFile),sizeof(TDataSetManagerFile),-1,62720,"DataSet manager for files",G__setup_memvarTDataSetManagerFile,G__setup_memfuncTDataSetManagerFile);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TSocket);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TServerSocket);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TQObject);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TFileHandler);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TSignalHandler);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TSeqCollection);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_FileStat_t);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_SysInfo_t);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TObjString);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ProofLN_TProofDesc),sizeof(TProofDesc),-1,65280,"Small class describing a proof session",G__setup_memvarTProofDesc,G__setup_memfuncTProofDesc);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ProofLN_TProofLog),sizeof(TProofLog),-1,62464,"PROOF session log handler",G__setup_memvarTProofLog,G__setup_memfuncTProofLog);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ProofLN_TProofMgr),sizeof(TProofMgr),-1,65280,"Abstract PROOF manager interface",G__setup_memvarTProofMgr,G__setup_memfuncTProofMgr);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TProofMgrcLcLEServType);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TProofDesccLcLEStatus);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ProofLN_TProofDebug),sizeof(TProofDebug),-1,0,(char*)NULL,G__setup_memvarTProofDebug,G__setup_memfuncTProofDebug);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TProofDebugcLcLEProofDebugMask);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TMutex);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ProofLN_TProofOutputList),sizeof(TProofOutputList),-1,324864,"Output list specific TList derivation",G__setup_memvarTProofOutputList,G__setup_memfuncTProofOutputList);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TDrawFeedback);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TMessage);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TMonitor);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TPluginHandler);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TProofLockPath);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ProofLN_TVirtualProofPlayer),sizeof(TVirtualProofPlayer),-1,292145,"Abstract PROOF player",G__setup_memvarTVirtualProofPlayer,G__setup_memfuncTVirtualProofPlayer);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TQueryResult);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ProofLN_TSlave),sizeof(TSlave),-1,65280,"PROOF slave server",G__setup_memvarTSlave,G__setup_memfuncTSlave);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TSemaphore);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TMacro);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ProofLN_TProofProgressInfo),sizeof(TProofProgressInfo),-1,29952,"Progress information",G__setup_memvarTProofProgressInfo,G__setup_memfuncTProofProgressInfo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ProofLN_TSlaveInfo),sizeof(TSlaveInfo),-1,291072,"basic info on workers",G__setup_memvarTSlaveInfo,G__setup_memfuncTSlaveInfo);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TSlaveInfocLcLESlaveStatus);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ProofLN_TMergerInfo),sizeof(TMergerInfo),-1,65024,"Basic info on merger, i.e. worker serving as merger",G__setup_memvarTMergerInfo,G__setup_memfuncTMergerInfo);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TProofMergePrg);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ProofLN_TProofLite),sizeof(TProofLite),-1,65280,"PROOF-Lite control class",G__setup_memvarTProofLite,G__setup_memfuncTProofLite);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ProofLN_TSlaveLite),sizeof(TSlaveLite),-1,62464,"PROOF lite worker server",G__setup_memvarTSlaveLite,G__setup_memfuncTSlaveLite);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TVirtualPacketizer);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TProofcLcLEStatusBits);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TProofcLcLEQueryMode);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TProofcLcLEUploadOpt);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TProofcLcLERegisterOpt);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TProofcLcLEUploadDataSetAnswer);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TProofcLcLEUploadPackageOpt);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TProofcLcLERunStatus);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TProofcLcLESubMerger);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TProofcLcLEUrgent);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TProofcLcLEProofCacheCommands);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TProofcLcLEProofDataSetCommands);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TProofcLcLESendFileOpt);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TProofcLcLEProofWrkListAction);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TProofcLcLEBuildPackageOpt);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TProofcLcLEProofShowQuotaOpt);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TProofcLcLEProofClearData);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_maplETStringcOTProofcLcLMD5Mod_tcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTProofcLcLMD5Mod_tgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TProofcLcLESlaves);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TAttFill);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TLeaf);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TBranch);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TAttLine);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TAttMarker);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TSelector);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TVirtualTreePlayer);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TProofChaincLcLdA);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ProofLN_TProofCondor),sizeof(TProofCondor),-1,62464,"PROOF control class for slaves allocated by condor",G__setup_memvarTProofCondor,G__setup_memfuncTProofCondor);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ProofLN_TQueryResultManager),sizeof(TQueryResultManager),-1,324608,"PROOF query result manager",G__setup_memvarTQueryResultManager,G__setup_memfuncTQueryResultManager);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ProofLN_TProofQueryResult),sizeof(TProofQueryResult),-1,324864,"Class describing a PROOF query",G__setup_memvarTProofQueryResult,G__setup_memfuncTProofQueryResult);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TDatime);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ProofLN_TProofLogElem),sizeof(TProofLogElem),-1,62464,"PROOF session log element",G__setup_memvarTProofLogElem,G__setup_memfuncTProofLogElem);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ProofLN_TProofMgrLite),sizeof(TProofMgrLite),-1,62464,"XrdProofd PROOF manager interface",G__setup_memvarTProofMgrLite,G__setup_memfuncTProofMgrLite);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TProofLogcLcLELogLocationBit);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TProofLogcLcLERetrieveOpt);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ProofLN_TProofResourcesStatic),sizeof(TProofResourcesStatic),-1,62720,"Class to handle PROOF static config",G__setup_memvarTProofResourcesStatic,G__setup_memfuncTProofResourcesStatic);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ProofLN_TProofNodeInfo),sizeof(TProofNodeInfo),-1,63232,"Class describing a PROOF node",G__setup_memvarTProofNodeInfo,G__setup_memfuncTProofNodeInfo);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TProofNodeInfocLcLENodeType);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ProofLN_TProofProgressStatus),sizeof(TProofProgressStatus),-1,28928,"Proof progress status class",G__setup_memvarTProofProgressStatus,G__setup_memfuncTProofProgressStatus);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TProofProgressStatuscLcLEStatusBits);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TQueryResultcLcLEQueryStatus);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ProofLN_TProofResources),sizeof(TProofResources),-1,29955,"Abstract class describing PROOF resources",G__setup_memvarTProofResources,G__setup_memfuncTProofResources);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TProofResourcesStaticcLcLEInfoType);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TApplication);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TStopwatch);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TShutdownTimer);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TReaperTimer);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TIdleTOTimer);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ProofLN_TProofServLite),sizeof(TProofServLite),-1,62464,"PROOF-Lite Server Application Interface",G__setup_memvarTProofServLite,G__setup_memfuncTProofServLite);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TProofServcLcLEStatusBits);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TProofServcLcLEQueryAction);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TProofServLiteInterruptHandler);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ProofLN_TProofSuperMaster),sizeof(TProofSuperMaster),-1,62464,"PROOF control class for making submasters",G__setup_memvarTProofSuperMaster,G__setup_memfuncTProofSuperMaster);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TSlavecLcLESlaveType);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TSlavecLcLESlaveStatus);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TVirtualProofPlayercLcLEStatusBits);
   G__get_linked_tagnum_fwd(&G__G__ProofLN_TVirtualProofPlayercLcLEExitStatus);
}
extern "C" void G__cpp_setupG__Proof(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__Proof()");
  G__set_cpp_environmentG__Proof();
  G__cpp_setup_tagtableG__Proof();

  G__cpp_setup_inheritanceG__Proof();

  G__cpp_setup_typetableG__Proof();

  G__cpp_setup_memvarG__Proof();

  G__cpp_setup_memfuncG__Proof();
  G__cpp_setup_globalG__Proof();
  G__cpp_setup_funcG__Proof();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__Proof();
  return;
}
class G__cpp_setup_initG__Proof {
  public:
    G__cpp_setup_initG__Proof() { G__add_setup_func("G__Proof",(G__incsetup)(&G__cpp_setupG__Proof)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__Proof() { G__remove_setup_func("G__Proof"); }
};
G__cpp_setup_initG__Proof G__cpp_setup_initializerG__Proof;

